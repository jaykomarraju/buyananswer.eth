{
  "contractName": "BuyAnAnswerContract",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_feeAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "feeAddress",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "firebaseDocIdToQuestionId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "latestQuestionId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "questions",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "asker",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "answerer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "answered",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "cancelled",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "firebaseDocId",
          "type": "string"
        },
        {
          "internalType": "address payable",
          "name": "_answerer",
          "type": "address"
        }
      ],
      "name": "askQuestion",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "firebaseDocId",
          "type": "string"
        }
      ],
      "name": "answerQuestion",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "firebaseDocId",
          "type": "string"
        }
      ],
      "name": "declineQuestion",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "firebaseDocId",
          "type": "string"
        }
      ],
      "name": "cancelQuestion",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_feeAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"firebaseDocId\",\"type\":\"string\"}],\"name\":\"answerQuestion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"firebaseDocId\",\"type\":\"string\"},{\"internalType\":\"address payable\",\"name\":\"_answerer\",\"type\":\"address\"}],\"name\":\"askQuestion\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"firebaseDocId\",\"type\":\"string\"}],\"name\":\"cancelQuestion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"firebaseDocId\",\"type\":\"string\"}],\"name\":\"declineQuestion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeAddress\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"firebaseDocIdToQuestionId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestQuestionId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"questions\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"asker\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"answerer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"answered\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"cancelled\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/jayanthkomarraju/Documents/GitHub/buyananswer.eth/client/contracts/BuyAnAnswerContract.sol\":\"BuyAnAnswerContract\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/jayanthkomarraju/Documents/GitHub/buyananswer.eth/client/contracts/BuyAnAnswerContract.sol\":{\"keccak256\":\"0x250b80f1ee08106d645599ee235af1d5a09431feadc7e4233b9f2a38759cf714\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ff433ba3d41adafed0c0baa2ec5e9583f55cc84031cc703938dc01156757f7f\",\"dweb:/ipfs/QmS2csArsAQvQXUTqmDw22A44Vreoz1rMfn8Zqrci1hZfB\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200144c3803806200144c833981810160405281019062000037919062000095565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200010f565b6000815190506200008f81620000f5565b92915050565b600060208284031215620000a857600080fd5b6000620000b8848285016200007e565b91505092915050565b6000620000ce82620000d5565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6200010081620000c1565b81146200010c57600080fd5b50565b61132d806200011f6000396000f3fe60806040526004361061007b5760003560e01c80636995f2c91161004e5780636995f2c914610145578063c4d0e2f61461016e578063ed24219e14610197578063f4dbe94b146101c25761007b565b8063149754c614610080578063254d63d31461009c57806331b1b978146100d9578063412753581461011a575b600080fd5b61009a60048036038101906100959190610bcf565b6101eb565b005b3480156100a857600080fd5b506100c360048036038101906100be9190610b8e565b610425565b6040516100d09190611007565b60405180910390f35b3480156100e557600080fd5b5061010060048036038101906100fb9190610c23565b610453565b604051610111959493929190610ef4565b60405180910390f35b34801561012657600080fd5b5061012f6104e3565b60405161013c9190610ed9565b60405180910390f35b34801561015157600080fd5b5061016c60048036038101906101679190610b8e565b610507565b005b34801561017a57600080fd5b5061019560048036038101906101909190610b8e565b610750565b005b3480156101a357600080fd5b506101ac6108ff565b6040516101b99190611007565b60405180910390f35b3480156101ce57600080fd5b506101e960048036038101906101e49190610b8e565b610905565b005b6000341161022e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022590610f67565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561029d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029490610f87565b60405180910390fd5b60006001600081546102ae906111f3565b9190508190559050806002846040516102c79190610ec2565b9081526020016040518091039020819055506040518060a001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff168152602001348152602001600015158152602001600015158152506003600083815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015560608201518160030160006101000a81548160ff02191690831515021790555060808201518160030160016101000a81548160ff021916908315150217905550905050505050565b6002818051602081018201805184825260208301602085012081835280955050505050506000915090505481565b60036020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030160009054906101000a900460ff16908060030160019054906101000a900460ff16905085565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006002826040516105199190610ec2565b908152602001604051809103902054905060006003600083815260200190815260200160002090508060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ca90610f47565b60405180910390fd5b8060030160019054906101000a900460ff1615610625576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061c90610fe7565b60405180910390fd5b600060646005836002015461063a91906110db565b61064491906110aa565b905060008183600201546106589190611135565b90508260010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156106c4573d6000803e3d6000fd5b5060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f1935050505015801561072b573d6000803e3d6000fd5b5060018360030160006101000a81548160ff0219169083151502179055505050505050565b60006002826040516107629190610ec2565b908152602001604051809103902054905060006003600083815260200190815260200160002090508060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461081c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081390610fa7565b60405180910390fd5b8060030160019054906101000a900460ff161561086e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086590610fe7565b60405180910390fd5b8060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc82600201549081150290604051600060405180830381858888f193505050501580156108dc573d6000803e3d6000fd5b5060018160030160006101000a81548160ff021916908315150217905550505050565b60015481565b60006002826040516109179190610ec2565b908152602001604051809103902054905060006003600083815260200190815260200160002090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146109d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109c890610fc7565b60405180910390fd5b60006064600283600201546109e691906110db565b6109f091906110aa565b90506000818360020154610a049190611135565b90508260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610a70573d6000803e3d6000fd5b5060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015610ad7573d6000803e3d6000fd5b5060018360030160016101000a81548160ff0219169083151502179055505050505050565b6000610b0f610b0a84611053565b611022565b905082815260208101848484011115610b2757600080fd5b610b328482856111b1565b509392505050565b600081359050610b49816112c9565b92915050565b600082601f830112610b6057600080fd5b8135610b70848260208601610afc565b91505092915050565b600081359050610b88816112e0565b92915050565b600060208284031215610ba057600080fd5b600082013567ffffffffffffffff811115610bba57600080fd5b610bc684828501610b4f565b91505092915050565b60008060408385031215610be257600080fd5b600083013567ffffffffffffffff811115610bfc57600080fd5b610c0885828601610b4f565b9250506020610c1985828601610b3a565b9150509250929050565b600060208284031215610c3557600080fd5b6000610c4384828501610b79565b91505092915050565b610c5581611169565b82525050565b610c648161117b565b82525050565b6000610c7582611083565b610c7f818561109f565b9350610c8f8185602086016111c0565b80840191505092915050565b6000610ca8602a8361108e565b91507f4f6e6c792073656c656374656420757365722063616e20616e7377657220746860008301527f65207175657374696f6e000000000000000000000000000000000000000000006020830152604082019050919050565b6000610d0e601f8361108e565b91507f416d6f756e742073686f756c642062652067726561746572207468616e2030006000830152602082019050919050565b6000610d4e60238361108e565b91507f596f752063616e6e6f742061736b207175657374696f6e20746f20796f75727360008301527f656c6600000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610db4602b8361108e565b91507f4f6e6c792073656c656374656420757365722063616e206465636c696e65207460008301527f6865207175657374696f6e0000000000000000000000000000000000000000006020830152604082019050919050565b6000610e1a60228361108e565b91507f4f6e6c792061736b65722063616e2063616e63656c207468652071756573746960008301527f6f6e0000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610e80601f8361108e565b91507f546865207175657374696f6e20686173206265656e2063616e63656c6c6564006000830152602082019050919050565b610ebc816111a7565b82525050565b6000610ece8284610c6a565b915081905092915050565b6000602082019050610eee6000830184610c4c565b92915050565b600060a082019050610f096000830188610c4c565b610f166020830187610c4c565b610f236040830186610eb3565b610f306060830185610c5b565b610f3d6080830184610c5b565b9695505050505050565b60006020820190508181036000830152610f6081610c9b565b9050919050565b60006020820190508181036000830152610f8081610d01565b9050919050565b60006020820190508181036000830152610fa081610d41565b9050919050565b60006020820190508181036000830152610fc081610da7565b9050919050565b60006020820190508181036000830152610fe081610e0d565b9050919050565b6000602082019050818103600083015261100081610e73565b9050919050565b600060208201905061101c6000830184610eb3565b92915050565b6000604051905081810181811067ffffffffffffffff821117156110495761104861129a565b5b8060405250919050565b600067ffffffffffffffff82111561106e5761106d61129a565b5b601f19601f8301169050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b60006110b5826111a7565b91506110c0836111a7565b9250826110d0576110cf61126b565b5b828204905092915050565b60006110e6826111a7565b91506110f1836111a7565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561112a5761112961123c565b5b828202905092915050565b6000611140826111a7565b915061114b836111a7565b92508282101561115e5761115d61123c565b5b828203905092915050565b600061117482611187565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156111de5780820151818401526020810190506111c3565b838111156111ed576000848401525b50505050565b60006111fe826111a7565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156112315761123061123c565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6112d281611169565b81146112dd57600080fd5b50565b6112e9816111a7565b81146112f457600080fd5b5056fea2646970667358221220d93ef7fa9c2e24a1764f7ee3109ce6376234a1300f9e9058b79547bc73e2060164736f6c63430008000033",
  "deployedBytecode": "0x60806040526004361061007b5760003560e01c80636995f2c91161004e5780636995f2c914610145578063c4d0e2f61461016e578063ed24219e14610197578063f4dbe94b146101c25761007b565b8063149754c614610080578063254d63d31461009c57806331b1b978146100d9578063412753581461011a575b600080fd5b61009a60048036038101906100959190610bcf565b6101eb565b005b3480156100a857600080fd5b506100c360048036038101906100be9190610b8e565b610425565b6040516100d09190611007565b60405180910390f35b3480156100e557600080fd5b5061010060048036038101906100fb9190610c23565b610453565b604051610111959493929190610ef4565b60405180910390f35b34801561012657600080fd5b5061012f6104e3565b60405161013c9190610ed9565b60405180910390f35b34801561015157600080fd5b5061016c60048036038101906101679190610b8e565b610507565b005b34801561017a57600080fd5b5061019560048036038101906101909190610b8e565b610750565b005b3480156101a357600080fd5b506101ac6108ff565b6040516101b99190611007565b60405180910390f35b3480156101ce57600080fd5b506101e960048036038101906101e49190610b8e565b610905565b005b6000341161022e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022590610f67565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561029d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029490610f87565b60405180910390fd5b60006001600081546102ae906111f3565b9190508190559050806002846040516102c79190610ec2565b9081526020016040518091039020819055506040518060a001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff168152602001348152602001600015158152602001600015158152506003600083815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015560608201518160030160006101000a81548160ff02191690831515021790555060808201518160030160016101000a81548160ff021916908315150217905550905050505050565b6002818051602081018201805184825260208301602085012081835280955050505050506000915090505481565b60036020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030160009054906101000a900460ff16908060030160019054906101000a900460ff16905085565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006002826040516105199190610ec2565b908152602001604051809103902054905060006003600083815260200190815260200160002090508060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ca90610f47565b60405180910390fd5b8060030160019054906101000a900460ff1615610625576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061c90610fe7565b60405180910390fd5b600060646005836002015461063a91906110db565b61064491906110aa565b905060008183600201546106589190611135565b90508260010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156106c4573d6000803e3d6000fd5b5060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f1935050505015801561072b573d6000803e3d6000fd5b5060018360030160006101000a81548160ff0219169083151502179055505050505050565b60006002826040516107629190610ec2565b908152602001604051809103902054905060006003600083815260200190815260200160002090508060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461081c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081390610fa7565b60405180910390fd5b8060030160019054906101000a900460ff161561086e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086590610fe7565b60405180910390fd5b8060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc82600201549081150290604051600060405180830381858888f193505050501580156108dc573d6000803e3d6000fd5b5060018160030160006101000a81548160ff021916908315150217905550505050565b60015481565b60006002826040516109179190610ec2565b908152602001604051809103902054905060006003600083815260200190815260200160002090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146109d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109c890610fc7565b60405180910390fd5b60006064600283600201546109e691906110db565b6109f091906110aa565b90506000818360020154610a049190611135565b90508260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610a70573d6000803e3d6000fd5b5060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015610ad7573d6000803e3d6000fd5b5060018360030160016101000a81548160ff0219169083151502179055505050505050565b6000610b0f610b0a84611053565b611022565b905082815260208101848484011115610b2757600080fd5b610b328482856111b1565b509392505050565b600081359050610b49816112c9565b92915050565b600082601f830112610b6057600080fd5b8135610b70848260208601610afc565b91505092915050565b600081359050610b88816112e0565b92915050565b600060208284031215610ba057600080fd5b600082013567ffffffffffffffff811115610bba57600080fd5b610bc684828501610b4f565b91505092915050565b60008060408385031215610be257600080fd5b600083013567ffffffffffffffff811115610bfc57600080fd5b610c0885828601610b4f565b9250506020610c1985828601610b3a565b9150509250929050565b600060208284031215610c3557600080fd5b6000610c4384828501610b79565b91505092915050565b610c5581611169565b82525050565b610c648161117b565b82525050565b6000610c7582611083565b610c7f818561109f565b9350610c8f8185602086016111c0565b80840191505092915050565b6000610ca8602a8361108e565b91507f4f6e6c792073656c656374656420757365722063616e20616e7377657220746860008301527f65207175657374696f6e000000000000000000000000000000000000000000006020830152604082019050919050565b6000610d0e601f8361108e565b91507f416d6f756e742073686f756c642062652067726561746572207468616e2030006000830152602082019050919050565b6000610d4e60238361108e565b91507f596f752063616e6e6f742061736b207175657374696f6e20746f20796f75727360008301527f656c6600000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610db4602b8361108e565b91507f4f6e6c792073656c656374656420757365722063616e206465636c696e65207460008301527f6865207175657374696f6e0000000000000000000000000000000000000000006020830152604082019050919050565b6000610e1a60228361108e565b91507f4f6e6c792061736b65722063616e2063616e63656c207468652071756573746960008301527f6f6e0000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610e80601f8361108e565b91507f546865207175657374696f6e20686173206265656e2063616e63656c6c6564006000830152602082019050919050565b610ebc816111a7565b82525050565b6000610ece8284610c6a565b915081905092915050565b6000602082019050610eee6000830184610c4c565b92915050565b600060a082019050610f096000830188610c4c565b610f166020830187610c4c565b610f236040830186610eb3565b610f306060830185610c5b565b610f3d6080830184610c5b565b9695505050505050565b60006020820190508181036000830152610f6081610c9b565b9050919050565b60006020820190508181036000830152610f8081610d01565b9050919050565b60006020820190508181036000830152610fa081610d41565b9050919050565b60006020820190508181036000830152610fc081610da7565b9050919050565b60006020820190508181036000830152610fe081610e0d565b9050919050565b6000602082019050818103600083015261100081610e73565b9050919050565b600060208201905061101c6000830184610eb3565b92915050565b6000604051905081810181811067ffffffffffffffff821117156110495761104861129a565b5b8060405250919050565b600067ffffffffffffffff82111561106e5761106d61129a565b5b601f19601f8301169050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b60006110b5826111a7565b91506110c0836111a7565b9250826110d0576110cf61126b565b5b828204905092915050565b60006110e6826111a7565b91506110f1836111a7565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561112a5761112961123c565b5b828202905092915050565b6000611140826111a7565b915061114b836111a7565b92508282101561115e5761115d61123c565b5b828203905092915050565b600061117482611187565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156111de5780820151818401526020810190506111c3565b838111156111ed576000848401525b50505050565b60006111fe826111a7565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156112315761123061123c565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6112d281611169565b81146112dd57600080fd5b50565b6112e9816111a7565b81146112f457600080fd5b5056fea2646970667358221220d93ef7fa9c2e24a1764f7ee3109ce6376234a1300f9e9058b79547bc73e2060164736f6c63430008000033",
  "immutableReferences": {},
  "sourceMap": "59:2921:0:-:0;;;610:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;674:11;661:10;;:24;;;;;;;;;;;;;;;;;;610:82;59:2921;;7:159:2;;103:6;97:13;88:22;;119:41;154:5;119:41;:::i;:::-;78:88;;;;:::o;172:300::-;;299:2;287:9;278:7;274:23;270:32;267:2;;;315:1;312;305:12;267:2;358:1;383:72;447:7;438:6;427:9;423:22;383:72;:::i;:::-;373:82;;329:136;257:215;;;;:::o;478:104::-;;552:24;570:5;552:24;:::i;:::-;541:35;;531:51;;;:::o;588:126::-;;665:42;658:5;654:54;643:65;;633:81;;;:::o;720:138::-;801:32;827:5;801:32;:::i;:::-;794:5;791:43;781:2;;848:1;845;838:12;781:2;771:87;:::o;59:2921:0:-;;;;;;;",
  "deployedSourceMap": "59:2921:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;698:638;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;388:59;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;508:45;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;94:33;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1342:631;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1979:456;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;303:31;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2441:537;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;698:638;822:1;810:9;:13;802:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;890:10;877:23;;:9;:23;;;;869:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;1024:18;1047:16;;1045:18;;;;;:::i;:::-;;;;;;;1024:39;;1188:10;1145:25;1171:13;1145:40;;;;;;:::i;:::-;;;;;;;;;;;;;:53;;;;1264:65;;;;;;;;1281:10;1264:65;;;;;;1294:9;1264:65;;;;;;1305:9;1264:65;;;;1316:5;1264:65;;;;;;1323:5;1264:65;;;;;1240:9;:21;1250:10;1240:21;;;;;;;;;;;:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;698:638;;;:::o;388:59::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;508:45::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;94:33::-;;;;;;;;;;;;:::o;1342:631::-;1414:18;1435:25;1461:13;1435:40;;;;;;:::i;:::-;;;;;;;;;;;;;;1414:61;;1485:25;1513:9;:21;1523:10;1513:21;;;;;;;;;;;1485:49;;1566:8;:17;;;;;;;;;;;;1552:31;;:10;:31;;;1544:86;;;;;;;;;;;;:::i;:::-;;;;;;;;;1649:8;:18;;;;;;;;;;;;1648:19;1640:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1722:11;1758:3;1754:1;1736:8;:15;;;:19;;;;:::i;:::-;:25;;;;:::i;:::-;1722:39;;1792:14;1827:3;1809:8;:15;;;:21;;;;:::i;:::-;1792:38;;1863:8;:17;;;;;;;;;;;;:26;;:34;1890:6;1863:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1907:10;;;;;;;;;;:19;;:24;1927:3;1907:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1962:4;1942:8;:17;;;:24;;;;;;;;;;;;;;;;;;1342:631;;;;;:::o;1979:456::-;2052:18;2073:25;2099:13;2073:40;;;;;;:::i;:::-;;;;;;;;;;;;;;2052:61;;2123:25;2151:9;:21;2161:10;2151:21;;;;;;;;;;;2123:49;;2204:8;:17;;;;;;;;;;;;2190:31;;:10;:31;;;2182:87;;;;;;;;;;;;:::i;:::-;;;;;;;;;2288:8;:18;;;;;;;;;;;;2287:19;2279:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;2353:8;:14;;;;;;;;;;;;:23;;:40;2377:8;:15;;;2353:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2424:4;2404:8;:17;;;:24;;;;;;;;;;;;;;;;;;1979:456;;;:::o;303:31::-;;;;:::o;2441:537::-;2513:18;2534:25;2560:13;2534:40;;;;;;:::i;:::-;;;;;;;;;;;;;;2513:61;;2584:25;2612:9;:21;2622:10;2612:21;;;;;;;;;;;2584:49;;2665:8;:14;;;;;;;;;;;;2651:28;;:10;:28;;;2643:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;2729:11;2765:3;2761:1;2743:8;:15;;;:19;;;;:::i;:::-;:25;;;;:::i;:::-;2729:39;;2799:14;2834:3;2816:8;:15;;;:21;;;;:::i;:::-;2799:38;;2870:8;:14;;;;;;;;;;;;:23;;:31;2894:6;2870:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2911:10;;;;;;;;;;:19;;:24;2931:3;2911:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2967:4;2946:8;:18;;;:25;;;;;;;;;;;;;;;;;;2441:537;;;;;:::o;7:344:2:-;;110:65;125:49;167:6;125:49;:::i;:::-;110:65;:::i;:::-;101:74;;198:6;191:5;184:21;236:4;229:5;225:16;274:3;265:6;260:3;256:16;253:25;250:2;;;291:1;288;281:12;250:2;304:41;338:6;333:3;328;304:41;:::i;:::-;91:260;;;;;;:::o;357:155::-;;449:6;436:20;427:29;;465:41;500:5;465:41;:::i;:::-;417:95;;;;:::o;532:273::-;;637:3;630:4;622:6;618:17;614:27;604:2;;655:1;652;645:12;604:2;695:6;682:20;720:79;795:3;787:6;780:4;772:6;768:17;720:79;:::i;:::-;711:88;;594:211;;;;;:::o;811:139::-;;895:6;882:20;873:29;;911:33;938:5;911:33;:::i;:::-;863:87;;;;:::o;956:375::-;;1074:2;1062:9;1053:7;1049:23;1045:32;1042:2;;;1090:1;1087;1080:12;1042:2;1161:1;1150:9;1146:17;1133:31;1191:18;1183:6;1180:30;1177:2;;;1223:1;1220;1213:12;1177:2;1251:63;1306:7;1297:6;1286:9;1282:22;1251:63;:::i;:::-;1241:73;;1104:220;1032:299;;;;:::o;1337:536::-;;;1480:2;1468:9;1459:7;1455:23;1451:32;1448:2;;;1496:1;1493;1486:12;1448:2;1567:1;1556:9;1552:17;1539:31;1597:18;1589:6;1586:30;1583:2;;;1629:1;1626;1619:12;1583:2;1657:63;1712:7;1703:6;1692:9;1688:22;1657:63;:::i;:::-;1647:73;;1510:220;1769:2;1795:61;1848:7;1839:6;1828:9;1824:22;1795:61;:::i;:::-;1785:71;;1740:126;1438:435;;;;;:::o;1879:262::-;;1987:2;1975:9;1966:7;1962:23;1958:32;1955:2;;;2003:1;2000;1993:12;1955:2;2046:1;2071:53;2116:7;2107:6;2096:9;2092:22;2071:53;:::i;:::-;2061:63;;2017:117;1945:196;;;;:::o;2147:142::-;2250:32;2276:5;2250:32;:::i;:::-;2245:3;2238:45;2228:61;;:::o;2295:109::-;2376:21;2391:5;2376:21;:::i;:::-;2371:3;2364:34;2354:50;;:::o;2410:377::-;;2544:39;2577:5;2544:39;:::i;:::-;2599:89;2681:6;2676:3;2599:89;:::i;:::-;2592:96;;2697:52;2742:6;2737:3;2730:4;2723:5;2719:16;2697:52;:::i;:::-;2774:6;2769:3;2765:16;2758:23;;2520:267;;;;;:::o;2793:374::-;;2956:67;3020:2;3015:3;2956:67;:::i;:::-;2949:74;;3053:34;3049:1;3044:3;3040:11;3033:55;3119:12;3114:2;3109:3;3105:12;3098:34;3158:2;3153:3;3149:12;3142:19;;2939:228;;;:::o;3173:329::-;;3336:67;3400:2;3395:3;3336:67;:::i;:::-;3329:74;;3433:33;3429:1;3424:3;3420:11;3413:54;3493:2;3488:3;3484:12;3477:19;;3319:183;;;:::o;3508:367::-;;3671:67;3735:2;3730:3;3671:67;:::i;:::-;3664:74;;3768:34;3764:1;3759:3;3755:11;3748:55;3834:5;3829:2;3824:3;3820:12;3813:27;3866:2;3861:3;3857:12;3850:19;;3654:221;;;:::o;3881:375::-;;4044:67;4108:2;4103:3;4044:67;:::i;:::-;4037:74;;4141:34;4137:1;4132:3;4128:11;4121:55;4207:13;4202:2;4197:3;4193:12;4186:35;4247:2;4242:3;4238:12;4231:19;;4027:229;;;:::o;4262:366::-;;4425:67;4489:2;4484:3;4425:67;:::i;:::-;4418:74;;4522:34;4518:1;4513:3;4509:11;4502:55;4588:4;4583:2;4578:3;4574:12;4567:26;4619:2;4614:3;4610:12;4603:19;;4408:220;;;:::o;4634:329::-;;4797:67;4861:2;4856:3;4797:67;:::i;:::-;4790:74;;4894:33;4890:1;4885:3;4881:11;4874:54;4954:2;4949:3;4945:12;4938:19;;4780:183;;;:::o;4969:118::-;5056:24;5074:5;5056:24;:::i;:::-;5051:3;5044:37;5034:53;;:::o;5093:275::-;;5247:95;5338:3;5329:6;5247:95;:::i;:::-;5240:102;;5359:3;5352:10;;5229:139;;;;:::o;5374:254::-;;5521:2;5510:9;5506:18;5498:26;;5534:87;5618:1;5607:9;5603:17;5594:6;5534:87;:::i;:::-;5488:140;;;;:::o;5634:704::-;;5897:3;5886:9;5882:19;5874:27;;5911:87;5995:1;5984:9;5980:17;5971:6;5911:87;:::i;:::-;6008:88;6092:2;6081:9;6077:18;6068:6;6008:88;:::i;:::-;6106:72;6174:2;6163:9;6159:18;6150:6;6106:72;:::i;:::-;6188:66;6250:2;6239:9;6235:18;6226:6;6188:66;:::i;:::-;6264:67;6326:3;6315:9;6311:19;6302:6;6264:67;:::i;:::-;5864:474;;;;;;;;:::o;6344:419::-;;6548:2;6537:9;6533:18;6525:26;;6597:9;6591:4;6587:20;6583:1;6572:9;6568:17;6561:47;6625:131;6751:4;6625:131;:::i;:::-;6617:139;;6515:248;;;:::o;6769:419::-;;6973:2;6962:9;6958:18;6950:26;;7022:9;7016:4;7012:20;7008:1;6997:9;6993:17;6986:47;7050:131;7176:4;7050:131;:::i;:::-;7042:139;;6940:248;;;:::o;7194:419::-;;7398:2;7387:9;7383:18;7375:26;;7447:9;7441:4;7437:20;7433:1;7422:9;7418:17;7411:47;7475:131;7601:4;7475:131;:::i;:::-;7467:139;;7365:248;;;:::o;7619:419::-;;7823:2;7812:9;7808:18;7800:26;;7872:9;7866:4;7862:20;7858:1;7847:9;7843:17;7836:47;7900:131;8026:4;7900:131;:::i;:::-;7892:139;;7790:248;;;:::o;8044:419::-;;8248:2;8237:9;8233:18;8225:26;;8297:9;8291:4;8287:20;8283:1;8272:9;8268:17;8261:47;8325:131;8451:4;8325:131;:::i;:::-;8317:139;;8215:248;;;:::o;8469:419::-;;8673:2;8662:9;8658:18;8650:26;;8722:9;8716:4;8712:20;8708:1;8697:9;8693:17;8686:47;8750:131;8876:4;8750:131;:::i;:::-;8742:139;;8640:248;;;:::o;8894:222::-;;9025:2;9014:9;9010:18;9002:26;;9038:71;9106:1;9095:9;9091:17;9082:6;9038:71;:::i;:::-;8992:124;;;;:::o;9122:283::-;;9188:2;9182:9;9172:19;;9230:4;9222:6;9218:17;9337:6;9325:10;9322:22;9301:18;9289:10;9286:34;9283:62;9280:2;;;9348:18;;:::i;:::-;9280:2;9388:10;9384:2;9377:22;9162:243;;;;:::o;9411:332::-;;9563:18;9555:6;9552:30;9549:2;;;9585:18;;:::i;:::-;9549:2;9670:4;9666:9;9659:4;9651:6;9647:17;9643:33;9635:41;;9731:4;9725;9721:15;9713:23;;9478:265;;;:::o;9749:99::-;;9835:5;9829:12;9819:22;;9808:40;;;:::o;9854:169::-;;9972:6;9967:3;9960:19;10012:4;10007:3;10003:14;9988:29;;9950:73;;;;:::o;10029:148::-;;10168:3;10153:18;;10143:34;;;;:::o;10183:185::-;;10240:20;10258:1;10240:20;:::i;:::-;10235:25;;10274:20;10292:1;10274:20;:::i;:::-;10269:25;;10313:1;10303:2;;10318:18;;:::i;:::-;10303:2;10360:1;10357;10353:9;10348:14;;10225:143;;;;:::o;10374:348::-;;10437:20;10455:1;10437:20;:::i;:::-;10432:25;;10471:20;10489:1;10471:20;:::i;:::-;10466:25;;10659:1;10591:66;10587:74;10584:1;10581:81;10576:1;10569:9;10562:17;10558:105;10555:2;;;10666:18;;:::i;:::-;10555:2;10714:1;10711;10707:9;10696:20;;10422:300;;;;:::o;10728:191::-;;10788:20;10806:1;10788:20;:::i;:::-;10783:25;;10822:20;10840:1;10822:20;:::i;:::-;10817:25;;10861:1;10858;10855:8;10852:2;;;10866:18;;:::i;:::-;10852:2;10911:1;10908;10904:9;10896:17;;10773:146;;;;:::o;10925:104::-;;10999:24;11017:5;10999:24;:::i;:::-;10988:35;;10978:51;;;:::o;11035:90::-;;11112:5;11105:13;11098:21;11087:32;;11077:48;;;:::o;11131:126::-;;11208:42;11201:5;11197:54;11186:65;;11176:81;;;:::o;11263:77::-;;11329:5;11318:16;;11308:32;;;:::o;11346:154::-;11430:6;11425:3;11420;11407:30;11492:1;11483:6;11478:3;11474:16;11467:27;11397:103;;;:::o;11506:307::-;11574:1;11584:113;11598:6;11595:1;11592:13;11584:113;;;11683:1;11678:3;11674:11;11668:18;11664:1;11659:3;11655:11;11648:39;11620:2;11617:1;11613:10;11608:15;;11584:113;;;11715:6;11712:1;11709:13;11706:2;;;11795:1;11786:6;11781:3;11777:16;11770:27;11706:2;11555:258;;;;:::o;11819:233::-;;11881:24;11899:5;11881:24;:::i;:::-;11872:33;;11927:66;11920:5;11917:77;11914:2;;;11997:18;;:::i;:::-;11914:2;12044:1;12037:5;12033:13;12026:20;;11862:190;;;:::o;12058:180::-;12106:77;12103:1;12096:88;12203:4;12200:1;12193:15;12227:4;12224:1;12217:15;12244:180;12292:77;12289:1;12282:88;12389:4;12386:1;12379:15;12413:4;12410:1;12403:15;12430:180;12478:77;12475:1;12468:88;12575:4;12572:1;12565:15;12599:4;12596:1;12589:15;12616:138;12697:32;12723:5;12697:32;:::i;:::-;12690:5;12687:43;12677:2;;12744:1;12741;12734:12;12677:2;12667:87;:::o;12760:122::-;12833:24;12851:5;12833:24;:::i;:::-;12826:5;12823:35;12813:2;;12872:1;12869;12862:12;12813:2;12803:79;:::o",
  "source": "// SPDX-License-Identifier: MIT \n\npragma solidity ^0.8.0;\n\ncontract BuyAnAnswerContract {\n    address payable public feeAddress;\n    \n    struct Question {\n        address payable asker;\n        address payable answerer;\n        uint256 amount;\n        bool answered;\n        bool cancelled;\n    }\n\n    uint256 public latestQuestionId; // A counter to assign unique ids to questions.\n    mapping(string => uint256) public firebaseDocIdToQuestionId; // A mapping from Firebase document id to question id.\n    mapping(uint256 => Question) public questions; // A mapping from question id to Question struct.\n\n    constructor(address payable _feeAddress) {\n        feeAddress = _feeAddress;\n    }\n\n    function askQuestion(string memory firebaseDocId, address payable _answerer) external payable {\n        require(msg.value > 0, \"Amount should be greater than 0\");\n        require(_answerer != msg.sender, \"You cannot ask question to yourself\");\n\n        // Assign a unique id to the question and increment the counter.\n        uint256 questionId = ++latestQuestionId;\n\n        // Store the mapping from Firebase document id to question id.\n        firebaseDocIdToQuestionId[firebaseDocId] = questionId;\n\n        // Store the question.\n        questions[questionId] = Question(payable(msg.sender), _answerer, msg.value, false, false);\n    }\n\n    function answerQuestion(string memory firebaseDocId) external {\n        uint256 questionId = firebaseDocIdToQuestionId[firebaseDocId];\n        Question storage question = questions[questionId];\n        require(msg.sender == question.answerer, \"Only selected user can answer the question\");\n        require(!question.cancelled, \"The question has been cancelled\");\n        \n        uint256 fee = question.amount * 5 / 100;  // Calculate 5% fee\n        uint256 payout = question.amount - fee;   // Calculate payout\n\n        question.answerer.transfer(payout);\n        feeAddress.transfer(fee);\n\n        question.answered = true;\n    }\n\n    function declineQuestion(string memory firebaseDocId) external {\n        uint256 questionId = firebaseDocIdToQuestionId[firebaseDocId];\n        Question storage question = questions[questionId];\n        require(msg.sender == question.answerer, \"Only selected user can decline the question\");\n        require(!question.cancelled, \"The question has been cancelled\");\n\n        question.asker.transfer(question.amount);\n\n        question.answered = true;\n    }\n\n    function cancelQuestion(string memory firebaseDocId) external {\n        uint256 questionId = firebaseDocIdToQuestionId[firebaseDocId];\n        Question storage question = questions[questionId];\n        require(msg.sender == question.asker, \"Only asker can cancel the question\");\n\n        uint256 fee = question.amount * 2 / 100;  // Calculate 2% fee\n        uint256 refund = question.amount - fee;   // Calculate refund\n\n        question.asker.transfer(refund);\n        feeAddress.transfer(fee);\n\n        question.cancelled = true;\n    }\n}\n",
  "sourcePath": "/Users/jayanthkomarraju/Documents/GitHub/buyananswer.eth/client/contracts/BuyAnAnswerContract.sol",
  "ast": {
    "absolutePath": "/Users/jayanthkomarraju/Documents/GitHub/buyananswer.eth/client/contracts/BuyAnAnswerContract.sol",
    "exportedSymbols": {
      "BuyAnAnswerContract": [
        273
      ]
    },
    "id": 274,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "34:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 273,
        "linearizedBaseContracts": [
          273
        ],
        "name": "BuyAnAnswerContract",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "41275358",
            "id": 3,
            "mutability": "mutable",
            "name": "feeAddress",
            "nodeType": "VariableDeclaration",
            "scope": 273,
            "src": "94:33:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 2,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "94:15:0",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "BuyAnAnswerContract.Question",
            "id": 14,
            "members": [
              {
                "constant": false,
                "id": 5,
                "mutability": "mutable",
                "name": "asker",
                "nodeType": "VariableDeclaration",
                "scope": 14,
                "src": "164:21:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 4,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "164:15:0",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7,
                "mutability": "mutable",
                "name": "answerer",
                "nodeType": "VariableDeclaration",
                "scope": 14,
                "src": "195:24:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 6,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "195:15:0",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9,
                "mutability": "mutable",
                "name": "amount",
                "nodeType": "VariableDeclaration",
                "scope": 14,
                "src": "229:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 8,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "229:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 11,
                "mutability": "mutable",
                "name": "answered",
                "nodeType": "VariableDeclaration",
                "scope": 14,
                "src": "253:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 10,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "253:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 13,
                "mutability": "mutable",
                "name": "cancelled",
                "nodeType": "VariableDeclaration",
                "scope": 14,
                "src": "276:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 12,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "276:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Question",
            "nodeType": "StructDefinition",
            "scope": 273,
            "src": "138:159:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ed24219e",
            "id": 16,
            "mutability": "mutable",
            "name": "latestQuestionId",
            "nodeType": "VariableDeclaration",
            "scope": 273,
            "src": "303:31:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 15,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "303:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "254d63d3",
            "id": 20,
            "mutability": "mutable",
            "name": "firebaseDocIdToQuestionId",
            "nodeType": "VariableDeclaration",
            "scope": 273,
            "src": "388:59:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
              "typeString": "mapping(string => uint256)"
            },
            "typeName": {
              "id": 19,
              "keyType": {
                "id": 17,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "396:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "388:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                "typeString": "mapping(string => uint256)"
              },
              "valueType": {
                "id": 18,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "406:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "31b1b978",
            "id": 25,
            "mutability": "mutable",
            "name": "questions",
            "nodeType": "VariableDeclaration",
            "scope": 273,
            "src": "508:45:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Question_$14_storage_$",
              "typeString": "mapping(uint256 => struct BuyAnAnswerContract.Question)"
            },
            "typeName": {
              "id": 24,
              "keyType": {
                "id": 21,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "516:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "508:28:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Question_$14_storage_$",
                "typeString": "mapping(uint256 => struct BuyAnAnswerContract.Question)"
              },
              "valueType": {
                "id": 23,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 22,
                  "name": "Question",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14,
                  "src": "527:8:0"
                },
                "referencedDeclaration": 14,
                "src": "527:8:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Question_$14_storage_ptr",
                  "typeString": "struct BuyAnAnswerContract.Question"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 34,
              "nodeType": "Block",
              "src": "651:41:0",
              "statements": [
                {
                  "expression": {
                    "id": 32,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 30,
                      "name": "feeAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "661:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 31,
                      "name": "_feeAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "674:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "661:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 33,
                  "nodeType": "ExpressionStatement",
                  "src": "661:24:0"
                }
              ]
            },
            "id": 35,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 28,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27,
                  "mutability": "mutable",
                  "name": "_feeAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 35,
                  "src": "622:27:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 26,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "622:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "621:29:0"
            },
            "returnParameters": {
              "id": 29,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "651:0:0"
            },
            "scope": 273,
            "src": "610:82:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 86,
              "nodeType": "Block",
              "src": "792:544:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 46,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 43,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "810:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 44,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "810:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 45,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "822:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "810:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e742073686f756c642062652067726561746572207468616e2030",
                        "id": 47,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "825:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
                          "typeString": "literal_string \"Amount should be greater than 0\""
                        },
                        "value": "Amount should be greater than 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
                          "typeString": "literal_string \"Amount should be greater than 0\""
                        }
                      ],
                      "id": 42,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "802:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 48,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "802:57:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49,
                  "nodeType": "ExpressionStatement",
                  "src": "802:57:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 54,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 51,
                          "name": "_answerer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39,
                          "src": "877:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "expression": {
                            "id": 52,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "890:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 53,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "890:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "877:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752063616e6e6f742061736b207175657374696f6e20746f20796f757273656c66",
                        "id": 55,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "902:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a91c9bcdc2d46ccfe3faf7ac5084f2c46d16fe5dfa67258337a9984f1eddcb5c",
                          "typeString": "literal_string \"You cannot ask question to yourself\""
                        },
                        "value": "You cannot ask question to yourself"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a91c9bcdc2d46ccfe3faf7ac5084f2c46d16fe5dfa67258337a9984f1eddcb5c",
                          "typeString": "literal_string \"You cannot ask question to yourself\""
                        }
                      ],
                      "id": 50,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "869:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 56,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "869:71:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 57,
                  "nodeType": "ExpressionStatement",
                  "src": "869:71:0"
                },
                {
                  "assignments": [
                    59
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 59,
                      "mutability": "mutable",
                      "name": "questionId",
                      "nodeType": "VariableDeclaration",
                      "scope": 86,
                      "src": "1024:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 58,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1024:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 62,
                  "initialValue": {
                    "id": 61,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": true,
                    "src": "1045:18:0",
                    "subExpression": {
                      "id": 60,
                      "name": "latestQuestionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16,
                      "src": "1047:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1024:39:0"
                },
                {
                  "expression": {
                    "id": 67,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 63,
                        "name": "firebaseDocIdToQuestionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "1145:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                          "typeString": "mapping(string memory => uint256)"
                        }
                      },
                      "id": 65,
                      "indexExpression": {
                        "id": 64,
                        "name": "firebaseDocId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37,
                        "src": "1171:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1145:40:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 66,
                      "name": "questionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59,
                      "src": "1188:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1145:53:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 68,
                  "nodeType": "ExpressionStatement",
                  "src": "1145:53:0"
                },
                {
                  "expression": {
                    "id": 84,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 69,
                        "name": "questions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "1240:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Question_$14_storage_$",
                          "typeString": "mapping(uint256 => struct BuyAnAnswerContract.Question storage ref)"
                        }
                      },
                      "id": 71,
                      "indexExpression": {
                        "id": 70,
                        "name": "questionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59,
                        "src": "1250:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1240:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Question_$14_storage",
                        "typeString": "struct BuyAnAnswerContract.Question storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 75,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1281:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 76,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1281:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 74,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1273:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 73,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1273:8:0",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 77,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1273:19:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "id": 78,
                          "name": "_answerer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39,
                          "src": "1294:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "expression": {
                            "id": 79,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1305:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 80,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "1305:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 81,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1316:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 82,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1323:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 72,
                        "name": "Question",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14,
                        "src": "1264:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Question_$14_storage_ptr_$",
                          "typeString": "type(struct BuyAnAnswerContract.Question storage pointer)"
                        }
                      },
                      "id": 83,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1264:65:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Question_$14_memory_ptr",
                        "typeString": "struct BuyAnAnswerContract.Question memory"
                      }
                    },
                    "src": "1240:89:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Question_$14_storage",
                      "typeString": "struct BuyAnAnswerContract.Question storage ref"
                    }
                  },
                  "id": 85,
                  "nodeType": "ExpressionStatement",
                  "src": "1240:89:0"
                }
              ]
            },
            "functionSelector": "149754c6",
            "id": 87,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "askQuestion",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 40,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37,
                  "mutability": "mutable",
                  "name": "firebaseDocId",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "719:27:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 36,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "719:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39,
                  "mutability": "mutable",
                  "name": "_answerer",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "748:25:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 38,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "748:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "718:56:0"
            },
            "returnParameters": {
              "id": 41,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "792:0:0"
            },
            "scope": 273,
            "src": "698:638:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 157,
              "nodeType": "Block",
              "src": "1404:569:0",
              "statements": [
                {
                  "assignments": [
                    93
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 93,
                      "mutability": "mutable",
                      "name": "questionId",
                      "nodeType": "VariableDeclaration",
                      "scope": 157,
                      "src": "1414:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 92,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1414:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 97,
                  "initialValue": {
                    "baseExpression": {
                      "id": 94,
                      "name": "firebaseDocIdToQuestionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20,
                      "src": "1435:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                        "typeString": "mapping(string memory => uint256)"
                      }
                    },
                    "id": 96,
                    "indexExpression": {
                      "id": 95,
                      "name": "firebaseDocId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89,
                      "src": "1461:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1435:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1414:61:0"
                },
                {
                  "assignments": [
                    100
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 100,
                      "mutability": "mutable",
                      "name": "question",
                      "nodeType": "VariableDeclaration",
                      "scope": 157,
                      "src": "1485:25:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Question_$14_storage_ptr",
                        "typeString": "struct BuyAnAnswerContract.Question"
                      },
                      "typeName": {
                        "id": 99,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 98,
                          "name": "Question",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 14,
                          "src": "1485:8:0"
                        },
                        "referencedDeclaration": 14,
                        "src": "1485:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Question_$14_storage_ptr",
                          "typeString": "struct BuyAnAnswerContract.Question"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 104,
                  "initialValue": {
                    "baseExpression": {
                      "id": 101,
                      "name": "questions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "1513:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Question_$14_storage_$",
                        "typeString": "mapping(uint256 => struct BuyAnAnswerContract.Question storage ref)"
                      }
                    },
                    "id": 103,
                    "indexExpression": {
                      "id": 102,
                      "name": "questionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 93,
                      "src": "1523:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1513:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Question_$14_storage",
                      "typeString": "struct BuyAnAnswerContract.Question storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1485:49:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 106,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1552:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1552:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 108,
                            "name": "question",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 100,
                            "src": "1566:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Question_$14_storage_ptr",
                              "typeString": "struct BuyAnAnswerContract.Question storage pointer"
                            }
                          },
                          "id": 109,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "answerer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7,
                          "src": "1566:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1552:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c792073656c656374656420757365722063616e20616e7377657220746865207175657374696f6e",
                        "id": 111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1585:44:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_288d98d7892def95345d8f72de4493b91ae333b71c5f3f25e91e3de657aed36b",
                          "typeString": "literal_string \"Only selected user can answer the question\""
                        },
                        "value": "Only selected user can answer the question"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_288d98d7892def95345d8f72de4493b91ae333b71c5f3f25e91e3de657aed36b",
                          "typeString": "literal_string \"Only selected user can answer the question\""
                        }
                      ],
                      "id": 105,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1544:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1544:86:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 113,
                  "nodeType": "ExpressionStatement",
                  "src": "1544:86:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1648:19:0",
                        "subExpression": {
                          "expression": {
                            "id": 115,
                            "name": "question",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 100,
                            "src": "1649:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Question_$14_storage_ptr",
                              "typeString": "struct BuyAnAnswerContract.Question storage pointer"
                            }
                          },
                          "id": 116,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "cancelled",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13,
                          "src": "1649:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546865207175657374696f6e20686173206265656e2063616e63656c6c6564",
                        "id": 118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1669:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ef7047970c45741381d84e64114f5d553ec2d7186fa55c3b9efc2007e153743c",
                          "typeString": "literal_string \"The question has been cancelled\""
                        },
                        "value": "The question has been cancelled"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ef7047970c45741381d84e64114f5d553ec2d7186fa55c3b9efc2007e153743c",
                          "typeString": "literal_string \"The question has been cancelled\""
                        }
                      ],
                      "id": 114,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1640:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1640:63:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 120,
                  "nodeType": "ExpressionStatement",
                  "src": "1640:63:0"
                },
                {
                  "assignments": [
                    122
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 122,
                      "mutability": "mutable",
                      "name": "fee",
                      "nodeType": "VariableDeclaration",
                      "scope": 157,
                      "src": "1722:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 121,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1722:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 129,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 126,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 123,
                          "name": "question",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 100,
                          "src": "1736:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Question_$14_storage_ptr",
                            "typeString": "struct BuyAnAnswerContract.Question storage pointer"
                          }
                        },
                        "id": 124,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9,
                        "src": "1736:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "hexValue": "35",
                        "id": 125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1754:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        },
                        "value": "5"
                      },
                      "src": "1736:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "313030",
                      "id": 127,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1758:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "1736:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1722:39:0"
                },
                {
                  "assignments": [
                    131
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 131,
                      "mutability": "mutable",
                      "name": "payout",
                      "nodeType": "VariableDeclaration",
                      "scope": 157,
                      "src": "1792:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 130,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1792:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 136,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 132,
                        "name": "question",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100,
                        "src": "1809:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Question_$14_storage_ptr",
                          "typeString": "struct BuyAnAnswerContract.Question storage pointer"
                        }
                      },
                      "id": 133,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9,
                      "src": "1809:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 134,
                      "name": "fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 122,
                      "src": "1827:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1809:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1792:38:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 142,
                        "name": "payout",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 131,
                        "src": "1890:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 137,
                          "name": "question",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 100,
                          "src": "1863:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Question_$14_storage_ptr",
                            "typeString": "struct BuyAnAnswerContract.Question storage pointer"
                          }
                        },
                        "id": 140,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "answerer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7,
                        "src": "1863:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 141,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "1863:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1863:34:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 144,
                  "nodeType": "ExpressionStatement",
                  "src": "1863:34:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 148,
                        "name": "fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 122,
                        "src": "1927:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 145,
                        "name": "feeAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3,
                        "src": "1907:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 147,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "1907:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1907:24:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 150,
                  "nodeType": "ExpressionStatement",
                  "src": "1907:24:0"
                },
                {
                  "expression": {
                    "id": 155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 151,
                        "name": "question",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100,
                        "src": "1942:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Question_$14_storage_ptr",
                          "typeString": "struct BuyAnAnswerContract.Question storage pointer"
                        }
                      },
                      "id": 153,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "answered",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11,
                      "src": "1942:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 154,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1962:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1942:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 156,
                  "nodeType": "ExpressionStatement",
                  "src": "1942:24:0"
                }
              ]
            },
            "functionSelector": "6995f2c9",
            "id": 158,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "answerQuestion",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 90,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89,
                  "mutability": "mutable",
                  "name": "firebaseDocId",
                  "nodeType": "VariableDeclaration",
                  "scope": 158,
                  "src": "1366:27:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 88,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1366:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1365:29:0"
            },
            "returnParameters": {
              "id": 91,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1404:0:0"
            },
            "scope": 273,
            "src": "1342:631:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 207,
              "nodeType": "Block",
              "src": "2042:393:0",
              "statements": [
                {
                  "assignments": [
                    164
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 164,
                      "mutability": "mutable",
                      "name": "questionId",
                      "nodeType": "VariableDeclaration",
                      "scope": 207,
                      "src": "2052:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 163,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2052:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 168,
                  "initialValue": {
                    "baseExpression": {
                      "id": 165,
                      "name": "firebaseDocIdToQuestionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20,
                      "src": "2073:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                        "typeString": "mapping(string memory => uint256)"
                      }
                    },
                    "id": 167,
                    "indexExpression": {
                      "id": 166,
                      "name": "firebaseDocId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 160,
                      "src": "2099:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2073:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2052:61:0"
                },
                {
                  "assignments": [
                    171
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 171,
                      "mutability": "mutable",
                      "name": "question",
                      "nodeType": "VariableDeclaration",
                      "scope": 207,
                      "src": "2123:25:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Question_$14_storage_ptr",
                        "typeString": "struct BuyAnAnswerContract.Question"
                      },
                      "typeName": {
                        "id": 170,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 169,
                          "name": "Question",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 14,
                          "src": "2123:8:0"
                        },
                        "referencedDeclaration": 14,
                        "src": "2123:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Question_$14_storage_ptr",
                          "typeString": "struct BuyAnAnswerContract.Question"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 175,
                  "initialValue": {
                    "baseExpression": {
                      "id": 172,
                      "name": "questions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "2151:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Question_$14_storage_$",
                        "typeString": "mapping(uint256 => struct BuyAnAnswerContract.Question storage ref)"
                      }
                    },
                    "id": 174,
                    "indexExpression": {
                      "id": 173,
                      "name": "questionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 164,
                      "src": "2161:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2151:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Question_$14_storage",
                      "typeString": "struct BuyAnAnswerContract.Question storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2123:49:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 177,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2190:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 178,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2190:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 179,
                            "name": "question",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 171,
                            "src": "2204:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Question_$14_storage_ptr",
                              "typeString": "struct BuyAnAnswerContract.Question storage pointer"
                            }
                          },
                          "id": 180,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "answerer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7,
                          "src": "2204:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2190:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c792073656c656374656420757365722063616e206465636c696e6520746865207175657374696f6e",
                        "id": 182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2223:45:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aab65f76069ac3e0351128f573e0d7bbb1c0b37e20a0945e007444be2907dfd7",
                          "typeString": "literal_string \"Only selected user can decline the question\""
                        },
                        "value": "Only selected user can decline the question"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aab65f76069ac3e0351128f573e0d7bbb1c0b37e20a0945e007444be2907dfd7",
                          "typeString": "literal_string \"Only selected user can decline the question\""
                        }
                      ],
                      "id": 176,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2182:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2182:87:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 184,
                  "nodeType": "ExpressionStatement",
                  "src": "2182:87:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2287:19:0",
                        "subExpression": {
                          "expression": {
                            "id": 186,
                            "name": "question",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 171,
                            "src": "2288:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Question_$14_storage_ptr",
                              "typeString": "struct BuyAnAnswerContract.Question storage pointer"
                            }
                          },
                          "id": 187,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "cancelled",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13,
                          "src": "2288:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546865207175657374696f6e20686173206265656e2063616e63656c6c6564",
                        "id": 189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2308:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ef7047970c45741381d84e64114f5d553ec2d7186fa55c3b9efc2007e153743c",
                          "typeString": "literal_string \"The question has been cancelled\""
                        },
                        "value": "The question has been cancelled"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ef7047970c45741381d84e64114f5d553ec2d7186fa55c3b9efc2007e153743c",
                          "typeString": "literal_string \"The question has been cancelled\""
                        }
                      ],
                      "id": 185,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2279:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2279:63:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 191,
                  "nodeType": "ExpressionStatement",
                  "src": "2279:63:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 197,
                          "name": "question",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 171,
                          "src": "2377:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Question_$14_storage_ptr",
                            "typeString": "struct BuyAnAnswerContract.Question storage pointer"
                          }
                        },
                        "id": 198,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9,
                        "src": "2377:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 192,
                          "name": "question",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 171,
                          "src": "2353:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Question_$14_storage_ptr",
                            "typeString": "struct BuyAnAnswerContract.Question storage pointer"
                          }
                        },
                        "id": 195,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "asker",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5,
                        "src": "2353:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 196,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "2353:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2353:40:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 200,
                  "nodeType": "ExpressionStatement",
                  "src": "2353:40:0"
                },
                {
                  "expression": {
                    "id": 205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 201,
                        "name": "question",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 171,
                        "src": "2404:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Question_$14_storage_ptr",
                          "typeString": "struct BuyAnAnswerContract.Question storage pointer"
                        }
                      },
                      "id": 203,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "answered",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11,
                      "src": "2404:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 204,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2424:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2404:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 206,
                  "nodeType": "ExpressionStatement",
                  "src": "2404:24:0"
                }
              ]
            },
            "functionSelector": "c4d0e2f6",
            "id": 208,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "declineQuestion",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 161,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 160,
                  "mutability": "mutable",
                  "name": "firebaseDocId",
                  "nodeType": "VariableDeclaration",
                  "scope": 208,
                  "src": "2004:27:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 159,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2004:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2003:29:0"
            },
            "returnParameters": {
              "id": 162,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2042:0:0"
            },
            "scope": 273,
            "src": "1979:456:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 271,
              "nodeType": "Block",
              "src": "2503:475:0",
              "statements": [
                {
                  "assignments": [
                    214
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 214,
                      "mutability": "mutable",
                      "name": "questionId",
                      "nodeType": "VariableDeclaration",
                      "scope": 271,
                      "src": "2513:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 213,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2513:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 218,
                  "initialValue": {
                    "baseExpression": {
                      "id": 215,
                      "name": "firebaseDocIdToQuestionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20,
                      "src": "2534:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                        "typeString": "mapping(string memory => uint256)"
                      }
                    },
                    "id": 217,
                    "indexExpression": {
                      "id": 216,
                      "name": "firebaseDocId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 210,
                      "src": "2560:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2534:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2513:61:0"
                },
                {
                  "assignments": [
                    221
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 221,
                      "mutability": "mutable",
                      "name": "question",
                      "nodeType": "VariableDeclaration",
                      "scope": 271,
                      "src": "2584:25:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Question_$14_storage_ptr",
                        "typeString": "struct BuyAnAnswerContract.Question"
                      },
                      "typeName": {
                        "id": 220,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 219,
                          "name": "Question",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 14,
                          "src": "2584:8:0"
                        },
                        "referencedDeclaration": 14,
                        "src": "2584:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Question_$14_storage_ptr",
                          "typeString": "struct BuyAnAnswerContract.Question"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 225,
                  "initialValue": {
                    "baseExpression": {
                      "id": 222,
                      "name": "questions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "2612:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Question_$14_storage_$",
                        "typeString": "mapping(uint256 => struct BuyAnAnswerContract.Question storage ref)"
                      }
                    },
                    "id": 224,
                    "indexExpression": {
                      "id": 223,
                      "name": "questionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 214,
                      "src": "2622:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2612:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Question_$14_storage",
                      "typeString": "struct BuyAnAnswerContract.Question storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2584:49:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 231,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 227,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2651:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 228,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2651:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 229,
                            "name": "question",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 221,
                            "src": "2665:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Question_$14_storage_ptr",
                              "typeString": "struct BuyAnAnswerContract.Question storage pointer"
                            }
                          },
                          "id": 230,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "asker",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5,
                          "src": "2665:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2651:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c792061736b65722063616e2063616e63656c20746865207175657374696f6e",
                        "id": 232,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2681:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d14c7c0cd378a1e68de72ce0a4cdb595a50a544998ecd250be51ee2526373413",
                          "typeString": "literal_string \"Only asker can cancel the question\""
                        },
                        "value": "Only asker can cancel the question"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d14c7c0cd378a1e68de72ce0a4cdb595a50a544998ecd250be51ee2526373413",
                          "typeString": "literal_string \"Only asker can cancel the question\""
                        }
                      ],
                      "id": 226,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2643:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 233,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2643:75:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 234,
                  "nodeType": "ExpressionStatement",
                  "src": "2643:75:0"
                },
                {
                  "assignments": [
                    236
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 236,
                      "mutability": "mutable",
                      "name": "fee",
                      "nodeType": "VariableDeclaration",
                      "scope": 271,
                      "src": "2729:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 235,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2729:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 243,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 240,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 237,
                          "name": "question",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 221,
                          "src": "2743:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Question_$14_storage_ptr",
                            "typeString": "struct BuyAnAnswerContract.Question storage pointer"
                          }
                        },
                        "id": 238,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9,
                        "src": "2743:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "hexValue": "32",
                        "id": 239,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2761:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "src": "2743:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "313030",
                      "id": 241,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2765:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "2743:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2729:39:0"
                },
                {
                  "assignments": [
                    245
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 245,
                      "mutability": "mutable",
                      "name": "refund",
                      "nodeType": "VariableDeclaration",
                      "scope": 271,
                      "src": "2799:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 244,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2799:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 250,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 246,
                        "name": "question",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 221,
                        "src": "2816:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Question_$14_storage_ptr",
                          "typeString": "struct BuyAnAnswerContract.Question storage pointer"
                        }
                      },
                      "id": 247,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9,
                      "src": "2816:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 248,
                      "name": "fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 236,
                      "src": "2834:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2816:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2799:38:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 256,
                        "name": "refund",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 245,
                        "src": "2894:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 251,
                          "name": "question",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 221,
                          "src": "2870:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Question_$14_storage_ptr",
                            "typeString": "struct BuyAnAnswerContract.Question storage pointer"
                          }
                        },
                        "id": 254,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "asker",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5,
                        "src": "2870:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 255,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "2870:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2870:31:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 258,
                  "nodeType": "ExpressionStatement",
                  "src": "2870:31:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 262,
                        "name": "fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 236,
                        "src": "2931:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 259,
                        "name": "feeAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3,
                        "src": "2911:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 261,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "2911:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2911:24:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 264,
                  "nodeType": "ExpressionStatement",
                  "src": "2911:24:0"
                },
                {
                  "expression": {
                    "id": 269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 265,
                        "name": "question",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 221,
                        "src": "2946:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Question_$14_storage_ptr",
                          "typeString": "struct BuyAnAnswerContract.Question storage pointer"
                        }
                      },
                      "id": 267,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "cancelled",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13,
                      "src": "2946:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 268,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2967:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2946:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 270,
                  "nodeType": "ExpressionStatement",
                  "src": "2946:25:0"
                }
              ]
            },
            "functionSelector": "f4dbe94b",
            "id": 272,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cancelQuestion",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 211,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 210,
                  "mutability": "mutable",
                  "name": "firebaseDocId",
                  "nodeType": "VariableDeclaration",
                  "scope": 272,
                  "src": "2465:27:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 209,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2465:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2464:29:0"
            },
            "returnParameters": {
              "id": 212,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2503:0:0"
            },
            "scope": 273,
            "src": "2441:537:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 274,
        "src": "59:2921:0"
      }
    ],
    "src": "34:2947:0"
  },
  "legacyAST": {
    "absolutePath": "/Users/jayanthkomarraju/Documents/GitHub/buyananswer.eth/client/contracts/BuyAnAnswerContract.sol",
    "exportedSymbols": {
      "BuyAnAnswerContract": [
        273
      ]
    },
    "id": 274,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "34:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 273,
        "linearizedBaseContracts": [
          273
        ],
        "name": "BuyAnAnswerContract",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "41275358",
            "id": 3,
            "mutability": "mutable",
            "name": "feeAddress",
            "nodeType": "VariableDeclaration",
            "scope": 273,
            "src": "94:33:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 2,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "94:15:0",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "BuyAnAnswerContract.Question",
            "id": 14,
            "members": [
              {
                "constant": false,
                "id": 5,
                "mutability": "mutable",
                "name": "asker",
                "nodeType": "VariableDeclaration",
                "scope": 14,
                "src": "164:21:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 4,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "164:15:0",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7,
                "mutability": "mutable",
                "name": "answerer",
                "nodeType": "VariableDeclaration",
                "scope": 14,
                "src": "195:24:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 6,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "195:15:0",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9,
                "mutability": "mutable",
                "name": "amount",
                "nodeType": "VariableDeclaration",
                "scope": 14,
                "src": "229:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 8,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "229:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 11,
                "mutability": "mutable",
                "name": "answered",
                "nodeType": "VariableDeclaration",
                "scope": 14,
                "src": "253:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 10,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "253:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 13,
                "mutability": "mutable",
                "name": "cancelled",
                "nodeType": "VariableDeclaration",
                "scope": 14,
                "src": "276:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 12,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "276:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Question",
            "nodeType": "StructDefinition",
            "scope": 273,
            "src": "138:159:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ed24219e",
            "id": 16,
            "mutability": "mutable",
            "name": "latestQuestionId",
            "nodeType": "VariableDeclaration",
            "scope": 273,
            "src": "303:31:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 15,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "303:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "254d63d3",
            "id": 20,
            "mutability": "mutable",
            "name": "firebaseDocIdToQuestionId",
            "nodeType": "VariableDeclaration",
            "scope": 273,
            "src": "388:59:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
              "typeString": "mapping(string => uint256)"
            },
            "typeName": {
              "id": 19,
              "keyType": {
                "id": 17,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "396:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "388:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                "typeString": "mapping(string => uint256)"
              },
              "valueType": {
                "id": 18,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "406:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "31b1b978",
            "id": 25,
            "mutability": "mutable",
            "name": "questions",
            "nodeType": "VariableDeclaration",
            "scope": 273,
            "src": "508:45:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Question_$14_storage_$",
              "typeString": "mapping(uint256 => struct BuyAnAnswerContract.Question)"
            },
            "typeName": {
              "id": 24,
              "keyType": {
                "id": 21,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "516:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "508:28:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Question_$14_storage_$",
                "typeString": "mapping(uint256 => struct BuyAnAnswerContract.Question)"
              },
              "valueType": {
                "id": 23,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 22,
                  "name": "Question",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14,
                  "src": "527:8:0"
                },
                "referencedDeclaration": 14,
                "src": "527:8:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Question_$14_storage_ptr",
                  "typeString": "struct BuyAnAnswerContract.Question"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 34,
              "nodeType": "Block",
              "src": "651:41:0",
              "statements": [
                {
                  "expression": {
                    "id": 32,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 30,
                      "name": "feeAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "661:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 31,
                      "name": "_feeAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "674:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "661:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 33,
                  "nodeType": "ExpressionStatement",
                  "src": "661:24:0"
                }
              ]
            },
            "id": 35,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 28,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27,
                  "mutability": "mutable",
                  "name": "_feeAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 35,
                  "src": "622:27:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 26,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "622:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "621:29:0"
            },
            "returnParameters": {
              "id": 29,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "651:0:0"
            },
            "scope": 273,
            "src": "610:82:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 86,
              "nodeType": "Block",
              "src": "792:544:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 46,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 43,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "810:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 44,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "810:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 45,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "822:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "810:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e742073686f756c642062652067726561746572207468616e2030",
                        "id": 47,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "825:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
                          "typeString": "literal_string \"Amount should be greater than 0\""
                        },
                        "value": "Amount should be greater than 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
                          "typeString": "literal_string \"Amount should be greater than 0\""
                        }
                      ],
                      "id": 42,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "802:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 48,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "802:57:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49,
                  "nodeType": "ExpressionStatement",
                  "src": "802:57:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 54,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 51,
                          "name": "_answerer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39,
                          "src": "877:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "expression": {
                            "id": 52,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "890:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 53,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "890:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "877:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752063616e6e6f742061736b207175657374696f6e20746f20796f757273656c66",
                        "id": 55,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "902:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a91c9bcdc2d46ccfe3faf7ac5084f2c46d16fe5dfa67258337a9984f1eddcb5c",
                          "typeString": "literal_string \"You cannot ask question to yourself\""
                        },
                        "value": "You cannot ask question to yourself"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a91c9bcdc2d46ccfe3faf7ac5084f2c46d16fe5dfa67258337a9984f1eddcb5c",
                          "typeString": "literal_string \"You cannot ask question to yourself\""
                        }
                      ],
                      "id": 50,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "869:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 56,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "869:71:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 57,
                  "nodeType": "ExpressionStatement",
                  "src": "869:71:0"
                },
                {
                  "assignments": [
                    59
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 59,
                      "mutability": "mutable",
                      "name": "questionId",
                      "nodeType": "VariableDeclaration",
                      "scope": 86,
                      "src": "1024:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 58,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1024:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 62,
                  "initialValue": {
                    "id": 61,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": true,
                    "src": "1045:18:0",
                    "subExpression": {
                      "id": 60,
                      "name": "latestQuestionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16,
                      "src": "1047:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1024:39:0"
                },
                {
                  "expression": {
                    "id": 67,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 63,
                        "name": "firebaseDocIdToQuestionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "1145:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                          "typeString": "mapping(string memory => uint256)"
                        }
                      },
                      "id": 65,
                      "indexExpression": {
                        "id": 64,
                        "name": "firebaseDocId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37,
                        "src": "1171:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1145:40:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 66,
                      "name": "questionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59,
                      "src": "1188:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1145:53:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 68,
                  "nodeType": "ExpressionStatement",
                  "src": "1145:53:0"
                },
                {
                  "expression": {
                    "id": 84,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 69,
                        "name": "questions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "1240:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Question_$14_storage_$",
                          "typeString": "mapping(uint256 => struct BuyAnAnswerContract.Question storage ref)"
                        }
                      },
                      "id": 71,
                      "indexExpression": {
                        "id": 70,
                        "name": "questionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59,
                        "src": "1250:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1240:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Question_$14_storage",
                        "typeString": "struct BuyAnAnswerContract.Question storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 75,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1281:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 76,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1281:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 74,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1273:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 73,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1273:8:0",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 77,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1273:19:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "id": 78,
                          "name": "_answerer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39,
                          "src": "1294:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "expression": {
                            "id": 79,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1305:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 80,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "1305:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 81,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1316:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 82,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1323:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 72,
                        "name": "Question",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14,
                        "src": "1264:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Question_$14_storage_ptr_$",
                          "typeString": "type(struct BuyAnAnswerContract.Question storage pointer)"
                        }
                      },
                      "id": 83,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1264:65:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Question_$14_memory_ptr",
                        "typeString": "struct BuyAnAnswerContract.Question memory"
                      }
                    },
                    "src": "1240:89:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Question_$14_storage",
                      "typeString": "struct BuyAnAnswerContract.Question storage ref"
                    }
                  },
                  "id": 85,
                  "nodeType": "ExpressionStatement",
                  "src": "1240:89:0"
                }
              ]
            },
            "functionSelector": "149754c6",
            "id": 87,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "askQuestion",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 40,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37,
                  "mutability": "mutable",
                  "name": "firebaseDocId",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "719:27:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 36,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "719:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39,
                  "mutability": "mutable",
                  "name": "_answerer",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "748:25:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 38,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "748:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "718:56:0"
            },
            "returnParameters": {
              "id": 41,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "792:0:0"
            },
            "scope": 273,
            "src": "698:638:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 157,
              "nodeType": "Block",
              "src": "1404:569:0",
              "statements": [
                {
                  "assignments": [
                    93
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 93,
                      "mutability": "mutable",
                      "name": "questionId",
                      "nodeType": "VariableDeclaration",
                      "scope": 157,
                      "src": "1414:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 92,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1414:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 97,
                  "initialValue": {
                    "baseExpression": {
                      "id": 94,
                      "name": "firebaseDocIdToQuestionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20,
                      "src": "1435:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                        "typeString": "mapping(string memory => uint256)"
                      }
                    },
                    "id": 96,
                    "indexExpression": {
                      "id": 95,
                      "name": "firebaseDocId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89,
                      "src": "1461:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1435:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1414:61:0"
                },
                {
                  "assignments": [
                    100
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 100,
                      "mutability": "mutable",
                      "name": "question",
                      "nodeType": "VariableDeclaration",
                      "scope": 157,
                      "src": "1485:25:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Question_$14_storage_ptr",
                        "typeString": "struct BuyAnAnswerContract.Question"
                      },
                      "typeName": {
                        "id": 99,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 98,
                          "name": "Question",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 14,
                          "src": "1485:8:0"
                        },
                        "referencedDeclaration": 14,
                        "src": "1485:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Question_$14_storage_ptr",
                          "typeString": "struct BuyAnAnswerContract.Question"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 104,
                  "initialValue": {
                    "baseExpression": {
                      "id": 101,
                      "name": "questions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "1513:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Question_$14_storage_$",
                        "typeString": "mapping(uint256 => struct BuyAnAnswerContract.Question storage ref)"
                      }
                    },
                    "id": 103,
                    "indexExpression": {
                      "id": 102,
                      "name": "questionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 93,
                      "src": "1523:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1513:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Question_$14_storage",
                      "typeString": "struct BuyAnAnswerContract.Question storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1485:49:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 106,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1552:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1552:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 108,
                            "name": "question",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 100,
                            "src": "1566:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Question_$14_storage_ptr",
                              "typeString": "struct BuyAnAnswerContract.Question storage pointer"
                            }
                          },
                          "id": 109,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "answerer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7,
                          "src": "1566:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1552:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c792073656c656374656420757365722063616e20616e7377657220746865207175657374696f6e",
                        "id": 111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1585:44:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_288d98d7892def95345d8f72de4493b91ae333b71c5f3f25e91e3de657aed36b",
                          "typeString": "literal_string \"Only selected user can answer the question\""
                        },
                        "value": "Only selected user can answer the question"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_288d98d7892def95345d8f72de4493b91ae333b71c5f3f25e91e3de657aed36b",
                          "typeString": "literal_string \"Only selected user can answer the question\""
                        }
                      ],
                      "id": 105,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1544:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1544:86:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 113,
                  "nodeType": "ExpressionStatement",
                  "src": "1544:86:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1648:19:0",
                        "subExpression": {
                          "expression": {
                            "id": 115,
                            "name": "question",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 100,
                            "src": "1649:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Question_$14_storage_ptr",
                              "typeString": "struct BuyAnAnswerContract.Question storage pointer"
                            }
                          },
                          "id": 116,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "cancelled",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13,
                          "src": "1649:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546865207175657374696f6e20686173206265656e2063616e63656c6c6564",
                        "id": 118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1669:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ef7047970c45741381d84e64114f5d553ec2d7186fa55c3b9efc2007e153743c",
                          "typeString": "literal_string \"The question has been cancelled\""
                        },
                        "value": "The question has been cancelled"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ef7047970c45741381d84e64114f5d553ec2d7186fa55c3b9efc2007e153743c",
                          "typeString": "literal_string \"The question has been cancelled\""
                        }
                      ],
                      "id": 114,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1640:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1640:63:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 120,
                  "nodeType": "ExpressionStatement",
                  "src": "1640:63:0"
                },
                {
                  "assignments": [
                    122
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 122,
                      "mutability": "mutable",
                      "name": "fee",
                      "nodeType": "VariableDeclaration",
                      "scope": 157,
                      "src": "1722:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 121,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1722:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 129,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 126,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 123,
                          "name": "question",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 100,
                          "src": "1736:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Question_$14_storage_ptr",
                            "typeString": "struct BuyAnAnswerContract.Question storage pointer"
                          }
                        },
                        "id": 124,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9,
                        "src": "1736:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "hexValue": "35",
                        "id": 125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1754:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        },
                        "value": "5"
                      },
                      "src": "1736:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "313030",
                      "id": 127,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1758:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "1736:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1722:39:0"
                },
                {
                  "assignments": [
                    131
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 131,
                      "mutability": "mutable",
                      "name": "payout",
                      "nodeType": "VariableDeclaration",
                      "scope": 157,
                      "src": "1792:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 130,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1792:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 136,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 132,
                        "name": "question",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100,
                        "src": "1809:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Question_$14_storage_ptr",
                          "typeString": "struct BuyAnAnswerContract.Question storage pointer"
                        }
                      },
                      "id": 133,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9,
                      "src": "1809:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 134,
                      "name": "fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 122,
                      "src": "1827:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1809:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1792:38:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 142,
                        "name": "payout",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 131,
                        "src": "1890:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 137,
                          "name": "question",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 100,
                          "src": "1863:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Question_$14_storage_ptr",
                            "typeString": "struct BuyAnAnswerContract.Question storage pointer"
                          }
                        },
                        "id": 140,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "answerer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7,
                        "src": "1863:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 141,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "1863:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1863:34:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 144,
                  "nodeType": "ExpressionStatement",
                  "src": "1863:34:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 148,
                        "name": "fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 122,
                        "src": "1927:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 145,
                        "name": "feeAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3,
                        "src": "1907:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 147,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "1907:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1907:24:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 150,
                  "nodeType": "ExpressionStatement",
                  "src": "1907:24:0"
                },
                {
                  "expression": {
                    "id": 155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 151,
                        "name": "question",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100,
                        "src": "1942:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Question_$14_storage_ptr",
                          "typeString": "struct BuyAnAnswerContract.Question storage pointer"
                        }
                      },
                      "id": 153,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "answered",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11,
                      "src": "1942:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 154,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1962:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1942:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 156,
                  "nodeType": "ExpressionStatement",
                  "src": "1942:24:0"
                }
              ]
            },
            "functionSelector": "6995f2c9",
            "id": 158,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "answerQuestion",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 90,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89,
                  "mutability": "mutable",
                  "name": "firebaseDocId",
                  "nodeType": "VariableDeclaration",
                  "scope": 158,
                  "src": "1366:27:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 88,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1366:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1365:29:0"
            },
            "returnParameters": {
              "id": 91,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1404:0:0"
            },
            "scope": 273,
            "src": "1342:631:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 207,
              "nodeType": "Block",
              "src": "2042:393:0",
              "statements": [
                {
                  "assignments": [
                    164
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 164,
                      "mutability": "mutable",
                      "name": "questionId",
                      "nodeType": "VariableDeclaration",
                      "scope": 207,
                      "src": "2052:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 163,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2052:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 168,
                  "initialValue": {
                    "baseExpression": {
                      "id": 165,
                      "name": "firebaseDocIdToQuestionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20,
                      "src": "2073:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                        "typeString": "mapping(string memory => uint256)"
                      }
                    },
                    "id": 167,
                    "indexExpression": {
                      "id": 166,
                      "name": "firebaseDocId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 160,
                      "src": "2099:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2073:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2052:61:0"
                },
                {
                  "assignments": [
                    171
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 171,
                      "mutability": "mutable",
                      "name": "question",
                      "nodeType": "VariableDeclaration",
                      "scope": 207,
                      "src": "2123:25:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Question_$14_storage_ptr",
                        "typeString": "struct BuyAnAnswerContract.Question"
                      },
                      "typeName": {
                        "id": 170,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 169,
                          "name": "Question",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 14,
                          "src": "2123:8:0"
                        },
                        "referencedDeclaration": 14,
                        "src": "2123:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Question_$14_storage_ptr",
                          "typeString": "struct BuyAnAnswerContract.Question"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 175,
                  "initialValue": {
                    "baseExpression": {
                      "id": 172,
                      "name": "questions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "2151:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Question_$14_storage_$",
                        "typeString": "mapping(uint256 => struct BuyAnAnswerContract.Question storage ref)"
                      }
                    },
                    "id": 174,
                    "indexExpression": {
                      "id": 173,
                      "name": "questionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 164,
                      "src": "2161:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2151:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Question_$14_storage",
                      "typeString": "struct BuyAnAnswerContract.Question storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2123:49:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 177,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2190:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 178,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2190:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 179,
                            "name": "question",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 171,
                            "src": "2204:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Question_$14_storage_ptr",
                              "typeString": "struct BuyAnAnswerContract.Question storage pointer"
                            }
                          },
                          "id": 180,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "answerer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7,
                          "src": "2204:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2190:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c792073656c656374656420757365722063616e206465636c696e6520746865207175657374696f6e",
                        "id": 182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2223:45:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aab65f76069ac3e0351128f573e0d7bbb1c0b37e20a0945e007444be2907dfd7",
                          "typeString": "literal_string \"Only selected user can decline the question\""
                        },
                        "value": "Only selected user can decline the question"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aab65f76069ac3e0351128f573e0d7bbb1c0b37e20a0945e007444be2907dfd7",
                          "typeString": "literal_string \"Only selected user can decline the question\""
                        }
                      ],
                      "id": 176,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2182:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2182:87:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 184,
                  "nodeType": "ExpressionStatement",
                  "src": "2182:87:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2287:19:0",
                        "subExpression": {
                          "expression": {
                            "id": 186,
                            "name": "question",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 171,
                            "src": "2288:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Question_$14_storage_ptr",
                              "typeString": "struct BuyAnAnswerContract.Question storage pointer"
                            }
                          },
                          "id": 187,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "cancelled",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13,
                          "src": "2288:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546865207175657374696f6e20686173206265656e2063616e63656c6c6564",
                        "id": 189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2308:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ef7047970c45741381d84e64114f5d553ec2d7186fa55c3b9efc2007e153743c",
                          "typeString": "literal_string \"The question has been cancelled\""
                        },
                        "value": "The question has been cancelled"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ef7047970c45741381d84e64114f5d553ec2d7186fa55c3b9efc2007e153743c",
                          "typeString": "literal_string \"The question has been cancelled\""
                        }
                      ],
                      "id": 185,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2279:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2279:63:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 191,
                  "nodeType": "ExpressionStatement",
                  "src": "2279:63:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 197,
                          "name": "question",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 171,
                          "src": "2377:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Question_$14_storage_ptr",
                            "typeString": "struct BuyAnAnswerContract.Question storage pointer"
                          }
                        },
                        "id": 198,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9,
                        "src": "2377:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 192,
                          "name": "question",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 171,
                          "src": "2353:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Question_$14_storage_ptr",
                            "typeString": "struct BuyAnAnswerContract.Question storage pointer"
                          }
                        },
                        "id": 195,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "asker",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5,
                        "src": "2353:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 196,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "2353:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2353:40:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 200,
                  "nodeType": "ExpressionStatement",
                  "src": "2353:40:0"
                },
                {
                  "expression": {
                    "id": 205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 201,
                        "name": "question",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 171,
                        "src": "2404:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Question_$14_storage_ptr",
                          "typeString": "struct BuyAnAnswerContract.Question storage pointer"
                        }
                      },
                      "id": 203,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "answered",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11,
                      "src": "2404:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 204,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2424:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2404:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 206,
                  "nodeType": "ExpressionStatement",
                  "src": "2404:24:0"
                }
              ]
            },
            "functionSelector": "c4d0e2f6",
            "id": 208,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "declineQuestion",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 161,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 160,
                  "mutability": "mutable",
                  "name": "firebaseDocId",
                  "nodeType": "VariableDeclaration",
                  "scope": 208,
                  "src": "2004:27:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 159,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2004:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2003:29:0"
            },
            "returnParameters": {
              "id": 162,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2042:0:0"
            },
            "scope": 273,
            "src": "1979:456:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 271,
              "nodeType": "Block",
              "src": "2503:475:0",
              "statements": [
                {
                  "assignments": [
                    214
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 214,
                      "mutability": "mutable",
                      "name": "questionId",
                      "nodeType": "VariableDeclaration",
                      "scope": 271,
                      "src": "2513:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 213,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2513:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 218,
                  "initialValue": {
                    "baseExpression": {
                      "id": 215,
                      "name": "firebaseDocIdToQuestionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20,
                      "src": "2534:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                        "typeString": "mapping(string memory => uint256)"
                      }
                    },
                    "id": 217,
                    "indexExpression": {
                      "id": 216,
                      "name": "firebaseDocId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 210,
                      "src": "2560:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2534:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2513:61:0"
                },
                {
                  "assignments": [
                    221
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 221,
                      "mutability": "mutable",
                      "name": "question",
                      "nodeType": "VariableDeclaration",
                      "scope": 271,
                      "src": "2584:25:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Question_$14_storage_ptr",
                        "typeString": "struct BuyAnAnswerContract.Question"
                      },
                      "typeName": {
                        "id": 220,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 219,
                          "name": "Question",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 14,
                          "src": "2584:8:0"
                        },
                        "referencedDeclaration": 14,
                        "src": "2584:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Question_$14_storage_ptr",
                          "typeString": "struct BuyAnAnswerContract.Question"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 225,
                  "initialValue": {
                    "baseExpression": {
                      "id": 222,
                      "name": "questions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "2612:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Question_$14_storage_$",
                        "typeString": "mapping(uint256 => struct BuyAnAnswerContract.Question storage ref)"
                      }
                    },
                    "id": 224,
                    "indexExpression": {
                      "id": 223,
                      "name": "questionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 214,
                      "src": "2622:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2612:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Question_$14_storage",
                      "typeString": "struct BuyAnAnswerContract.Question storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2584:49:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 231,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 227,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2651:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 228,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2651:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 229,
                            "name": "question",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 221,
                            "src": "2665:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Question_$14_storage_ptr",
                              "typeString": "struct BuyAnAnswerContract.Question storage pointer"
                            }
                          },
                          "id": 230,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "asker",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5,
                          "src": "2665:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2651:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c792061736b65722063616e2063616e63656c20746865207175657374696f6e",
                        "id": 232,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2681:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d14c7c0cd378a1e68de72ce0a4cdb595a50a544998ecd250be51ee2526373413",
                          "typeString": "literal_string \"Only asker can cancel the question\""
                        },
                        "value": "Only asker can cancel the question"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d14c7c0cd378a1e68de72ce0a4cdb595a50a544998ecd250be51ee2526373413",
                          "typeString": "literal_string \"Only asker can cancel the question\""
                        }
                      ],
                      "id": 226,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2643:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 233,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2643:75:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 234,
                  "nodeType": "ExpressionStatement",
                  "src": "2643:75:0"
                },
                {
                  "assignments": [
                    236
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 236,
                      "mutability": "mutable",
                      "name": "fee",
                      "nodeType": "VariableDeclaration",
                      "scope": 271,
                      "src": "2729:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 235,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2729:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 243,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 240,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 237,
                          "name": "question",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 221,
                          "src": "2743:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Question_$14_storage_ptr",
                            "typeString": "struct BuyAnAnswerContract.Question storage pointer"
                          }
                        },
                        "id": 238,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9,
                        "src": "2743:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "hexValue": "32",
                        "id": 239,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2761:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "src": "2743:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "313030",
                      "id": 241,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2765:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "2743:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2729:39:0"
                },
                {
                  "assignments": [
                    245
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 245,
                      "mutability": "mutable",
                      "name": "refund",
                      "nodeType": "VariableDeclaration",
                      "scope": 271,
                      "src": "2799:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 244,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2799:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 250,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 246,
                        "name": "question",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 221,
                        "src": "2816:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Question_$14_storage_ptr",
                          "typeString": "struct BuyAnAnswerContract.Question storage pointer"
                        }
                      },
                      "id": 247,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9,
                      "src": "2816:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 248,
                      "name": "fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 236,
                      "src": "2834:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2816:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2799:38:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 256,
                        "name": "refund",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 245,
                        "src": "2894:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 251,
                          "name": "question",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 221,
                          "src": "2870:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Question_$14_storage_ptr",
                            "typeString": "struct BuyAnAnswerContract.Question storage pointer"
                          }
                        },
                        "id": 254,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "asker",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5,
                        "src": "2870:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 255,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "2870:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2870:31:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 258,
                  "nodeType": "ExpressionStatement",
                  "src": "2870:31:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 262,
                        "name": "fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 236,
                        "src": "2931:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 259,
                        "name": "feeAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3,
                        "src": "2911:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 261,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "2911:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2911:24:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 264,
                  "nodeType": "ExpressionStatement",
                  "src": "2911:24:0"
                },
                {
                  "expression": {
                    "id": 269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 265,
                        "name": "question",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 221,
                        "src": "2946:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Question_$14_storage_ptr",
                          "typeString": "struct BuyAnAnswerContract.Question storage pointer"
                        }
                      },
                      "id": 267,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "cancelled",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13,
                      "src": "2946:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 268,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2967:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2946:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 270,
                  "nodeType": "ExpressionStatement",
                  "src": "2946:25:0"
                }
              ]
            },
            "functionSelector": "f4dbe94b",
            "id": 272,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cancelQuestion",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 211,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 210,
                  "mutability": "mutable",
                  "name": "firebaseDocId",
                  "nodeType": "VariableDeclaration",
                  "scope": 272,
                  "src": "2465:27:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 209,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2465:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2464:29:0"
            },
            "returnParameters": {
              "id": 212,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2503:0:0"
            },
            "scope": 273,
            "src": "2441:537:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 274,
        "src": "59:2921:0"
      }
    ],
    "src": "34:2947:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0xCAF024Bd7fe69354AD50316cC9e84e5c1461063f",
      "transactionHash": "0xe65d3e61aaad78a66ee921be8c95635ea22a73aaae1e202281060459970aebdd"
    }
  },
  "schemaVersion": "3.2.3",
  "updatedAt": "2023-05-24T13:35:14.722Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}