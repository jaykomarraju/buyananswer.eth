{
  "contractName": "BuyAnAnswerContract",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_feeAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "feeAddress",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "questions",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "asker",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "answerer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "answered",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "cancelled",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_answerer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_questionId",
          "type": "uint256"
        }
      ],
      "name": "askQuestion",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_questionId",
          "type": "uint256"
        }
      ],
      "name": "answerQuestion",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_questionId",
          "type": "uint256"
        }
      ],
      "name": "declineQuestion",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_questionId",
          "type": "uint256"
        }
      ],
      "name": "cancelQuestion",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_feeAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_questionId\",\"type\":\"uint256\"}],\"name\":\"answerQuestion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_answerer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_questionId\",\"type\":\"uint256\"}],\"name\":\"askQuestion\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_questionId\",\"type\":\"uint256\"}],\"name\":\"cancelQuestion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_questionId\",\"type\":\"uint256\"}],\"name\":\"declineQuestion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeAddress\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"questions\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"asker\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"answerer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"answered\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"cancelled\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/jayanthkomarraju/Documents/GitHub/buyananswer.eth/client/contracts/BuyAnAnswerContract.sol\":\"BuyAnAnswerContract\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/jayanthkomarraju/Documents/GitHub/buyananswer.eth/client/contracts/BuyAnAnswerContract.sol\":{\"keccak256\":\"0xb79b64cf1f079697c52963132d174473cdc155cdab9bdc6964ac227f4516dfa7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f2f4cc45de37c63b54ee690baad5bd52702e51ccbf908c597c0529fff437b63c\",\"dweb:/ipfs/QmYAzAM38yabpYZBHCbLaVBaNtUxg27NHZxqxtaz2xXg9t\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405161107b38038061107b8339818101604052810190610032919061008d565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506100ff565b600081519050610087816100e8565b92915050565b60006020828403121561009f57600080fd5b60006100ad84828501610078565b91505092915050565b60006100c1826100c8565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6100f1816100b6565b81146100fc57600080fd5b50565b610f6d8061010e6000396000f3fe6080604052600436106100555760003560e01c80630b06ed781461005a57806331b1b9781461007657806341275358146100b7578063ad9f8c20146100e2578063aee412c01461010b578063c79ba53214610134575b600080fd5b610074600480360381019061006f91906109bb565b61015d565b005b34801561008257600080fd5b5061009d600480360381019061009891906109f7565b61035a565b6040516100ae959493929190610c80565b60405180910390f35b3480156100c357600080fd5b506100cc6103ea565b6040516100d99190610c65565b60405180910390f35b3480156100ee57600080fd5b50610109600480360381019061010491906109f7565b61040e565b005b34801561011757600080fd5b50610132600480360381019061012d91906109f7565b610633565b005b34801561014057600080fd5b5061015b600480360381019061015691906109f7565b6107be565b005b600034116101a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161019790610cf3565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561020f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161020690610d13565b60405180910390fd5b6040518060a001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff168152602001348152602001600015158152602001600015158152506001600083815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015560608201518160030160006101000a81548160ff02191690831515021790555060808201518160030160016101000a81548160ff0219169083151502179055509050505050565b60016020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030160009054906101000a900460ff16908060030160019054906101000a900460ff16905085565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006001600083815260200190815260200160002090508060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ae90610cd3565b60405180910390fd5b8060030160019054906101000a900460ff1615610509576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050090610d73565b60405180910390fd5b600060646005836002015461051e9190610dd5565b6105289190610da4565b9050600081836002015461053c9190610e2f565b90508260010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156105a8573d6000803e3d6000fd5b5060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f1935050505015801561060f573d6000803e3d6000fd5b5060018360030160006101000a81548160ff02191690831515021790555050505050565b60006001600083815260200190815260200160002090508060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d390610d33565b60405180910390fd5b8060030160019054906101000a900460ff161561072e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072590610d73565b60405180910390fd5b8060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc82600201549081150290604051600060405180830381858888f1935050505015801561079c573d6000803e3d6000fd5b5060018160030160006101000a81548160ff0219169083151502179055505050565b60006001600083815260200190815260200160002090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610867576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085e90610d53565b60405180910390fd5b600060646002836002015461087c9190610dd5565b6108869190610da4565b9050600081836002015461089a9190610e2f565b90508260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610906573d6000803e3d6000fd5b5060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f1935050505015801561096d573d6000803e3d6000fd5b5060018360030160016101000a81548160ff02191690831515021790555050505050565b6000813590506109a081610f09565b92915050565b6000813590506109b581610f20565b92915050565b600080604083850312156109ce57600080fd5b60006109dc85828601610991565b92505060206109ed858286016109a6565b9150509250929050565b600060208284031215610a0957600080fd5b6000610a17848285016109a6565b91505092915050565b610a2981610e63565b82525050565b610a3881610e75565b82525050565b6000610a4b602a83610d93565b91507f4f6e6c792073656c656374656420757365722063616e20616e7377657220746860008301527f65207175657374696f6e000000000000000000000000000000000000000000006020830152604082019050919050565b6000610ab1601f83610d93565b91507f416d6f756e742073686f756c642062652067726561746572207468616e2030006000830152602082019050919050565b6000610af1602383610d93565b91507f596f752063616e6e6f742061736b207175657374696f6e20746f20796f75727360008301527f656c6600000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610b57602b83610d93565b91507f4f6e6c792073656c656374656420757365722063616e206465636c696e65207460008301527f6865207175657374696f6e0000000000000000000000000000000000000000006020830152604082019050919050565b6000610bbd602283610d93565b91507f4f6e6c792061736b65722063616e2063616e63656c207468652071756573746960008301527f6f6e0000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610c23601f83610d93565b91507f546865207175657374696f6e20686173206265656e2063616e63656c6c6564006000830152602082019050919050565b610c5f81610ea1565b82525050565b6000602082019050610c7a6000830184610a20565b92915050565b600060a082019050610c956000830188610a20565b610ca26020830187610a20565b610caf6040830186610c56565b610cbc6060830185610a2f565b610cc96080830184610a2f565b9695505050505050565b60006020820190508181036000830152610cec81610a3e565b9050919050565b60006020820190508181036000830152610d0c81610aa4565b9050919050565b60006020820190508181036000830152610d2c81610ae4565b9050919050565b60006020820190508181036000830152610d4c81610b4a565b9050919050565b60006020820190508181036000830152610d6c81610bb0565b9050919050565b60006020820190508181036000830152610d8c81610c16565b9050919050565b600082825260208201905092915050565b6000610daf82610ea1565b9150610dba83610ea1565b925082610dca57610dc9610eda565b5b828204905092915050565b6000610de082610ea1565b9150610deb83610ea1565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e2457610e23610eab565b5b828202905092915050565b6000610e3a82610ea1565b9150610e4583610ea1565b925082821015610e5857610e57610eab565b5b828203905092915050565b6000610e6e82610e81565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b610f1281610e63565b8114610f1d57600080fd5b50565b610f2981610ea1565b8114610f3457600080fd5b5056fea2646970667358221220f06b9e4e576337d74ea1801e42b6e5b670816d5dc33a3c6474a180ff29911d1264736f6c63430008000033",
  "deployedBytecode": "0x6080604052600436106100555760003560e01c80630b06ed781461005a57806331b1b9781461007657806341275358146100b7578063ad9f8c20146100e2578063aee412c01461010b578063c79ba53214610134575b600080fd5b610074600480360381019061006f91906109bb565b61015d565b005b34801561008257600080fd5b5061009d600480360381019061009891906109f7565b61035a565b6040516100ae959493929190610c80565b60405180910390f35b3480156100c357600080fd5b506100cc6103ea565b6040516100d99190610c65565b60405180910390f35b3480156100ee57600080fd5b50610109600480360381019061010491906109f7565b61040e565b005b34801561011757600080fd5b50610132600480360381019061012d91906109f7565b610633565b005b34801561014057600080fd5b5061015b600480360381019061015691906109f7565b6107be565b005b600034116101a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161019790610cf3565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561020f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161020690610d13565b60405180910390fd5b6040518060a001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff168152602001348152602001600015158152602001600015158152506001600083815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015560608201518160030160006101000a81548160ff02191690831515021790555060808201518160030160016101000a81548160ff0219169083151502179055509050505050565b60016020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030160009054906101000a900460ff16908060030160019054906101000a900460ff16905085565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006001600083815260200190815260200160002090508060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ae90610cd3565b60405180910390fd5b8060030160019054906101000a900460ff1615610509576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050090610d73565b60405180910390fd5b600060646005836002015461051e9190610dd5565b6105289190610da4565b9050600081836002015461053c9190610e2f565b90508260010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156105a8573d6000803e3d6000fd5b5060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f1935050505015801561060f573d6000803e3d6000fd5b5060018360030160006101000a81548160ff02191690831515021790555050505050565b60006001600083815260200190815260200160002090508060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d390610d33565b60405180910390fd5b8060030160019054906101000a900460ff161561072e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072590610d73565b60405180910390fd5b8060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc82600201549081150290604051600060405180830381858888f1935050505015801561079c573d6000803e3d6000fd5b5060018160030160006101000a81548160ff0219169083151502179055505050565b60006001600083815260200190815260200160002090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610867576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085e90610d53565b60405180910390fd5b600060646002836002015461087c9190610dd5565b6108869190610da4565b9050600081836002015461089a9190610e2f565b90508260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610906573d6000803e3d6000fd5b5060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f1935050505015801561096d573d6000803e3d6000fd5b5060018360030160016101000a81548160ff02191690831515021790555050505050565b6000813590506109a081610f09565b92915050565b6000813590506109b581610f20565b92915050565b600080604083850312156109ce57600080fd5b60006109dc85828601610991565b92505060206109ed858286016109a6565b9150509250929050565b600060208284031215610a0957600080fd5b6000610a17848285016109a6565b91505092915050565b610a2981610e63565b82525050565b610a3881610e75565b82525050565b6000610a4b602a83610d93565b91507f4f6e6c792073656c656374656420757365722063616e20616e7377657220746860008301527f65207175657374696f6e000000000000000000000000000000000000000000006020830152604082019050919050565b6000610ab1601f83610d93565b91507f416d6f756e742073686f756c642062652067726561746572207468616e2030006000830152602082019050919050565b6000610af1602383610d93565b91507f596f752063616e6e6f742061736b207175657374696f6e20746f20796f75727360008301527f656c6600000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610b57602b83610d93565b91507f4f6e6c792073656c656374656420757365722063616e206465636c696e65207460008301527f6865207175657374696f6e0000000000000000000000000000000000000000006020830152604082019050919050565b6000610bbd602283610d93565b91507f4f6e6c792061736b65722063616e2063616e63656c207468652071756573746960008301527f6f6e0000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610c23601f83610d93565b91507f546865207175657374696f6e20686173206265656e2063616e63656c6c6564006000830152602082019050919050565b610c5f81610ea1565b82525050565b6000602082019050610c7a6000830184610a20565b92915050565b600060a082019050610c956000830188610a20565b610ca26020830187610a20565b610caf6040830186610c56565b610cbc6060830185610a2f565b610cc96080830184610a2f565b9695505050505050565b60006020820190508181036000830152610cec81610a3e565b9050919050565b60006020820190508181036000830152610d0c81610aa4565b9050919050565b60006020820190508181036000830152610d2c81610ae4565b9050919050565b60006020820190508181036000830152610d4c81610b4a565b9050919050565b60006020820190508181036000830152610d6c81610bb0565b9050919050565b60006020820190508181036000830152610d8c81610c16565b9050919050565b600082825260208201905092915050565b6000610daf82610ea1565b9150610dba83610ea1565b925082610dca57610dc9610eda565b5b828204905092915050565b6000610de082610ea1565b9150610deb83610ea1565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e2457610e23610eab565b5b828202905092915050565b6000610e3a82610ea1565b9150610e4583610ea1565b925082821015610e5857610e57610eab565b5b828203905092915050565b6000610e6e82610e81565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b610f1281610e63565b8114610f1d57600080fd5b50565b610f2981610ea1565b8114610f3457600080fd5b5056fea2646970667358221220f06b9e4e576337d74ea1801e42b6e5b670816d5dc33a3c6474a180ff29911d1264736f6c63430008000033",
  "immutableReferences": {},
  "sourceMap": "59:2135:0:-:0;;;355:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;419:11;406:10;;:24;;;;;;;;;;;;;;;;;;355:82;59:2135;;7:159:2;;103:6;97:13;88:22;;119:41;154:5;119:41;:::i;:::-;78:88;;;;:::o;172:300::-;;299:2;287:9;278:7;274:23;270:32;267:2;;;315:1;312;305:12;267:2;358:1;383:72;447:7;438:6;427:9;423:22;383:72;:::i;:::-;373:82;;329:136;257:215;;;;:::o;478:104::-;;552:24;570:5;552:24;:::i;:::-;541:35;;531:51;;;:::o;588:126::-;;665:42;658:5;654:54;643:65;;633:81;;;:::o;720:138::-;801:32;827:5;801:32;:::i;:::-;794:5;791:43;781:2;;848:1;845;838:12;781:2;771:87;:::o;59:2135:0:-;;;;;;;",
  "deployedSourceMap": "59:2135:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;443:341;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;303:45;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;94:33;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;790:553;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1349:378;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1733:459;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;443:341;559:1;547:9;:13;539:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;627:10;614:23;;:9;:23;;;;606:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;712:65;;;;;;;;729:10;712:65;;;;;;742:9;712:65;;;;;;753:9;712:65;;;;764:5;712:65;;;;;;771:5;712:65;;;;;687:9;:22;697:11;687:22;;;;;;;;;;;:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;443:341;;:::o;303:45::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;94:33::-;;;;;;;;;;;;:::o;790:553::-;854:25;882:9;:22;892:11;882:22;;;;;;;;;;;854:50;;936:8;:17;;;;;;;;;;;;922:31;;:10;:31;;;914:86;;;;;;;;;;;;:::i;:::-;;;;;;;;;1019:8;:18;;;;;;;;;;;;1018:19;1010:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1092:11;1128:3;1124:1;1106:8;:15;;;:19;;;;:::i;:::-;:25;;;;:::i;:::-;1092:39;;1162:14;1197:3;1179:8;:15;;;:21;;;;:::i;:::-;1162:38;;1233:8;:17;;;;;;;;;;;;:26;;:34;1260:6;1233:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1277:10;;;;;;;;;;:19;;:24;1297:3;1277:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1332:4;1312:8;:17;;;:24;;;;;;;;;;;;;;;;;;790:553;;;;:::o;1349:378::-;1414:25;1442:9;:22;1452:11;1442:22;;;;;;;;;;;1414:50;;1496:8;:17;;;;;;;;;;;;1482:31;;:10;:31;;;1474:87;;;;;;;;;;;;:::i;:::-;;;;;;;;;1580:8;:18;;;;;;;;;;;;1579:19;1571:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1645:8;:14;;;;;;;;;;;;:23;;:40;1669:8;:15;;;1645:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1716:4;1696:8;:17;;;:24;;;;;;;;;;;;;;;;;;1349:378;;:::o;1733:459::-;1797:25;1825:9;:22;1835:11;1825:22;;;;;;;;;;;1797:50;;1879:8;:14;;;;;;;;;;;;1865:28;;:10;:28;;;1857:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;1943:11;1979:3;1975:1;1957:8;:15;;;:19;;;;:::i;:::-;:25;;;;:::i;:::-;1943:39;;2013:14;2048:3;2030:8;:15;;;:21;;;;:::i;:::-;2013:38;;2084:8;:14;;;;;;;;;;;;:23;;:31;2108:6;2084:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2125:10;;;;;;;;;;:19;;:24;2145:3;2125:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2181:4;2160:8;:18;;;:25;;;;;;;;;;;;;;;;;;1733:459;;;;:::o;7:155:2:-;;99:6;86:20;77:29;;115:41;150:5;115:41;:::i;:::-;67:95;;;;:::o;168:139::-;;252:6;239:20;230:29;;268:33;295:5;268:33;:::i;:::-;220:87;;;;:::o;313:423::-;;;446:2;434:9;425:7;421:23;417:32;414:2;;;462:1;459;452:12;414:2;505:1;530:61;583:7;574:6;563:9;559:22;530:61;:::i;:::-;520:71;;476:125;640:2;666:53;711:7;702:6;691:9;687:22;666:53;:::i;:::-;656:63;;611:118;404:332;;;;;:::o;742:262::-;;850:2;838:9;829:7;825:23;821:32;818:2;;;866:1;863;856:12;818:2;909:1;934:53;979:7;970:6;959:9;955:22;934:53;:::i;:::-;924:63;;880:117;808:196;;;;:::o;1010:142::-;1113:32;1139:5;1113:32;:::i;:::-;1108:3;1101:45;1091:61;;:::o;1158:109::-;1239:21;1254:5;1239:21;:::i;:::-;1234:3;1227:34;1217:50;;:::o;1273:374::-;;1436:67;1500:2;1495:3;1436:67;:::i;:::-;1429:74;;1533:34;1529:1;1524:3;1520:11;1513:55;1599:12;1594:2;1589:3;1585:12;1578:34;1638:2;1633:3;1629:12;1622:19;;1419:228;;;:::o;1653:329::-;;1816:67;1880:2;1875:3;1816:67;:::i;:::-;1809:74;;1913:33;1909:1;1904:3;1900:11;1893:54;1973:2;1968:3;1964:12;1957:19;;1799:183;;;:::o;1988:367::-;;2151:67;2215:2;2210:3;2151:67;:::i;:::-;2144:74;;2248:34;2244:1;2239:3;2235:11;2228:55;2314:5;2309:2;2304:3;2300:12;2293:27;2346:2;2341:3;2337:12;2330:19;;2134:221;;;:::o;2361:375::-;;2524:67;2588:2;2583:3;2524:67;:::i;:::-;2517:74;;2621:34;2617:1;2612:3;2608:11;2601:55;2687:13;2682:2;2677:3;2673:12;2666:35;2727:2;2722:3;2718:12;2711:19;;2507:229;;;:::o;2742:366::-;;2905:67;2969:2;2964:3;2905:67;:::i;:::-;2898:74;;3002:34;2998:1;2993:3;2989:11;2982:55;3068:4;3063:2;3058:3;3054:12;3047:26;3099:2;3094:3;3090:12;3083:19;;2888:220;;;:::o;3114:329::-;;3277:67;3341:2;3336:3;3277:67;:::i;:::-;3270:74;;3374:33;3370:1;3365:3;3361:11;3354:54;3434:2;3429:3;3425:12;3418:19;;3260:183;;;:::o;3449:118::-;3536:24;3554:5;3536:24;:::i;:::-;3531:3;3524:37;3514:53;;:::o;3573:254::-;;3720:2;3709:9;3705:18;3697:26;;3733:87;3817:1;3806:9;3802:17;3793:6;3733:87;:::i;:::-;3687:140;;;;:::o;3833:704::-;;4096:3;4085:9;4081:19;4073:27;;4110:87;4194:1;4183:9;4179:17;4170:6;4110:87;:::i;:::-;4207:88;4291:2;4280:9;4276:18;4267:6;4207:88;:::i;:::-;4305:72;4373:2;4362:9;4358:18;4349:6;4305:72;:::i;:::-;4387:66;4449:2;4438:9;4434:18;4425:6;4387:66;:::i;:::-;4463:67;4525:3;4514:9;4510:19;4501:6;4463:67;:::i;:::-;4063:474;;;;;;;;:::o;4543:419::-;;4747:2;4736:9;4732:18;4724:26;;4796:9;4790:4;4786:20;4782:1;4771:9;4767:17;4760:47;4824:131;4950:4;4824:131;:::i;:::-;4816:139;;4714:248;;;:::o;4968:419::-;;5172:2;5161:9;5157:18;5149:26;;5221:9;5215:4;5211:20;5207:1;5196:9;5192:17;5185:47;5249:131;5375:4;5249:131;:::i;:::-;5241:139;;5139:248;;;:::o;5393:419::-;;5597:2;5586:9;5582:18;5574:26;;5646:9;5640:4;5636:20;5632:1;5621:9;5617:17;5610:47;5674:131;5800:4;5674:131;:::i;:::-;5666:139;;5564:248;;;:::o;5818:419::-;;6022:2;6011:9;6007:18;5999:26;;6071:9;6065:4;6061:20;6057:1;6046:9;6042:17;6035:47;6099:131;6225:4;6099:131;:::i;:::-;6091:139;;5989:248;;;:::o;6243:419::-;;6447:2;6436:9;6432:18;6424:26;;6496:9;6490:4;6486:20;6482:1;6471:9;6467:17;6460:47;6524:131;6650:4;6524:131;:::i;:::-;6516:139;;6414:248;;;:::o;6668:419::-;;6872:2;6861:9;6857:18;6849:26;;6921:9;6915:4;6911:20;6907:1;6896:9;6892:17;6885:47;6949:131;7075:4;6949:131;:::i;:::-;6941:139;;6839:248;;;:::o;7093:169::-;;7211:6;7206:3;7199:19;7251:4;7246:3;7242:14;7227:29;;7189:73;;;;:::o;7268:185::-;;7325:20;7343:1;7325:20;:::i;:::-;7320:25;;7359:20;7377:1;7359:20;:::i;:::-;7354:25;;7398:1;7388:2;;7403:18;;:::i;:::-;7388:2;7445:1;7442;7438:9;7433:14;;7310:143;;;;:::o;7459:348::-;;7522:20;7540:1;7522:20;:::i;:::-;7517:25;;7556:20;7574:1;7556:20;:::i;:::-;7551:25;;7744:1;7676:66;7672:74;7669:1;7666:81;7661:1;7654:9;7647:17;7643:105;7640:2;;;7751:18;;:::i;:::-;7640:2;7799:1;7796;7792:9;7781:20;;7507:300;;;;:::o;7813:191::-;;7873:20;7891:1;7873:20;:::i;:::-;7868:25;;7907:20;7925:1;7907:20;:::i;:::-;7902:25;;7946:1;7943;7940:8;7937:2;;;7951:18;;:::i;:::-;7937:2;7996:1;7993;7989:9;7981:17;;7858:146;;;;:::o;8010:104::-;;8084:24;8102:5;8084:24;:::i;:::-;8073:35;;8063:51;;;:::o;8120:90::-;;8197:5;8190:13;8183:21;8172:32;;8162:48;;;:::o;8216:126::-;;8293:42;8286:5;8282:54;8271:65;;8261:81;;;:::o;8348:77::-;;8414:5;8403:16;;8393:32;;;:::o;8431:180::-;8479:77;8476:1;8469:88;8576:4;8573:1;8566:15;8600:4;8597:1;8590:15;8617:180;8665:77;8662:1;8655:88;8762:4;8759:1;8752:15;8786:4;8783:1;8776:15;8803:138;8884:32;8910:5;8884:32;:::i;:::-;8877:5;8874:43;8864:2;;8931:1;8928;8921:12;8864:2;8854:87;:::o;8947:122::-;9020:24;9038:5;9020:24;:::i;:::-;9013:5;9010:35;9000:2;;9059:1;9056;9049:12;9000:2;8990:79;:::o",
  "source": "// SPDX-License-Identifier: MIT \n\npragma solidity ^0.8.0;\n\ncontract BuyAnAnswerContract {\n    address payable public feeAddress;\n    \n    struct Question {\n        address payable asker;\n        address payable answerer;\n        uint256 amount;\n        bool answered;\n        bool cancelled;\n    }\n\n    mapping(uint256 => Question) public questions;\n\n    constructor(address payable _feeAddress) {\n        feeAddress = _feeAddress;\n    }\n\n    function askQuestion(address payable _answerer, uint256 _questionId) external payable {\n        require(msg.value > 0, \"Amount should be greater than 0\");\n        require(_answerer != msg.sender, \"You cannot ask question to yourself\");\n        questions[_questionId] = Question(payable(msg.sender), _answerer, msg.value, false, false);\n    }\n\n    function answerQuestion(uint256 _questionId) external {\n        Question storage question = questions[_questionId];\n        require(msg.sender == question.answerer, \"Only selected user can answer the question\");\n        require(!question.cancelled, \"The question has been cancelled\");\n        \n        uint256 fee = question.amount * 5 / 100;  // Calculate 5% fee\n        uint256 payout = question.amount - fee;   // Calculate payout\n\n        question.answerer.transfer(payout);\n        feeAddress.transfer(fee);\n\n        question.answered = true;\n    }\n\n    function declineQuestion(uint256 _questionId) external {\n        Question storage question = questions[_questionId];\n        require(msg.sender == question.answerer, \"Only selected user can decline the question\");\n        require(!question.cancelled, \"The question has been cancelled\");\n\n        question.asker.transfer(question.amount);\n\n        question.answered = true;\n    }\n\n    function cancelQuestion(uint256 _questionId) external {\n        Question storage question = questions[_questionId];\n        require(msg.sender == question.asker, \"Only asker can cancel the question\");\n\n        uint256 fee = question.amount * 2 / 100;  // Calculate 2% fee\n        uint256 refund = question.amount - fee;   // Calculate refund\n\n        question.asker.transfer(refund);\n        feeAddress.transfer(fee);\n\n        question.cancelled = true;\n    }\n}\n",
  "sourcePath": "/Users/jayanthkomarraju/Documents/GitHub/buyananswer.eth/client/contracts/BuyAnAnswerContract.sol",
  "ast": {
    "absolutePath": "/Users/jayanthkomarraju/Documents/GitHub/buyananswer.eth/client/contracts/BuyAnAnswerContract.sol",
    "exportedSymbols": {
      "BuyAnAnswerContract": [
        238
      ]
    },
    "id": 239,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "34:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 238,
        "linearizedBaseContracts": [
          238
        ],
        "name": "BuyAnAnswerContract",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "41275358",
            "id": 3,
            "mutability": "mutable",
            "name": "feeAddress",
            "nodeType": "VariableDeclaration",
            "scope": 238,
            "src": "94:33:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 2,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "94:15:0",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "BuyAnAnswerContract.Question",
            "id": 14,
            "members": [
              {
                "constant": false,
                "id": 5,
                "mutability": "mutable",
                "name": "asker",
                "nodeType": "VariableDeclaration",
                "scope": 14,
                "src": "164:21:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 4,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "164:15:0",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7,
                "mutability": "mutable",
                "name": "answerer",
                "nodeType": "VariableDeclaration",
                "scope": 14,
                "src": "195:24:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 6,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "195:15:0",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9,
                "mutability": "mutable",
                "name": "amount",
                "nodeType": "VariableDeclaration",
                "scope": 14,
                "src": "229:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 8,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "229:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 11,
                "mutability": "mutable",
                "name": "answered",
                "nodeType": "VariableDeclaration",
                "scope": 14,
                "src": "253:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 10,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "253:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 13,
                "mutability": "mutable",
                "name": "cancelled",
                "nodeType": "VariableDeclaration",
                "scope": 14,
                "src": "276:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 12,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "276:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Question",
            "nodeType": "StructDefinition",
            "scope": 238,
            "src": "138:159:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "31b1b978",
            "id": 19,
            "mutability": "mutable",
            "name": "questions",
            "nodeType": "VariableDeclaration",
            "scope": 238,
            "src": "303:45:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Question_$14_storage_$",
              "typeString": "mapping(uint256 => struct BuyAnAnswerContract.Question)"
            },
            "typeName": {
              "id": 18,
              "keyType": {
                "id": 15,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "311:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "303:28:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Question_$14_storage_$",
                "typeString": "mapping(uint256 => struct BuyAnAnswerContract.Question)"
              },
              "valueType": {
                "id": 17,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 16,
                  "name": "Question",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14,
                  "src": "322:8:0"
                },
                "referencedDeclaration": 14,
                "src": "322:8:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Question_$14_storage_ptr",
                  "typeString": "struct BuyAnAnswerContract.Question"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 28,
              "nodeType": "Block",
              "src": "396:41:0",
              "statements": [
                {
                  "expression": {
                    "id": 26,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24,
                      "name": "feeAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "406:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 25,
                      "name": "_feeAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21,
                      "src": "419:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "406:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 27,
                  "nodeType": "ExpressionStatement",
                  "src": "406:24:0"
                }
              ]
            },
            "id": 29,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 22,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21,
                  "mutability": "mutable",
                  "name": "_feeAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 29,
                  "src": "367:27:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "367:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "366:29:0"
            },
            "returnParameters": {
              "id": 23,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "396:0:0"
            },
            "scope": 238,
            "src": "355:82:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 69,
              "nodeType": "Block",
              "src": "529:255:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 40,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 37,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "547:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 38,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "547:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 39,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "559:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "547:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e742073686f756c642062652067726561746572207468616e2030",
                        "id": 41,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "562:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
                          "typeString": "literal_string \"Amount should be greater than 0\""
                        },
                        "value": "Amount should be greater than 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
                          "typeString": "literal_string \"Amount should be greater than 0\""
                        }
                      ],
                      "id": 36,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "539:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 42,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "539:57:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43,
                  "nodeType": "ExpressionStatement",
                  "src": "539:57:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 48,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 45,
                          "name": "_answerer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31,
                          "src": "614:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "expression": {
                            "id": 46,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "627:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 47,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "627:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "614:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752063616e6e6f742061736b207175657374696f6e20746f20796f757273656c66",
                        "id": 49,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "639:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a91c9bcdc2d46ccfe3faf7ac5084f2c46d16fe5dfa67258337a9984f1eddcb5c",
                          "typeString": "literal_string \"You cannot ask question to yourself\""
                        },
                        "value": "You cannot ask question to yourself"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a91c9bcdc2d46ccfe3faf7ac5084f2c46d16fe5dfa67258337a9984f1eddcb5c",
                          "typeString": "literal_string \"You cannot ask question to yourself\""
                        }
                      ],
                      "id": 44,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "606:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 50,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "606:71:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51,
                  "nodeType": "ExpressionStatement",
                  "src": "606:71:0"
                },
                {
                  "expression": {
                    "id": 67,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 52,
                        "name": "questions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19,
                        "src": "687:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Question_$14_storage_$",
                          "typeString": "mapping(uint256 => struct BuyAnAnswerContract.Question storage ref)"
                        }
                      },
                      "id": 54,
                      "indexExpression": {
                        "id": 53,
                        "name": "_questionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "697:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "687:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Question_$14_storage",
                        "typeString": "struct BuyAnAnswerContract.Question storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 58,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "729:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 59,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "729:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 57,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "721:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 56,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "721:8:0",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 60,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "721:19:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "id": 61,
                          "name": "_answerer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31,
                          "src": "742:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "expression": {
                            "id": 62,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "753:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 63,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "753:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 64,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "764:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 65,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "771:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 55,
                        "name": "Question",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14,
                        "src": "712:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Question_$14_storage_ptr_$",
                          "typeString": "type(struct BuyAnAnswerContract.Question storage pointer)"
                        }
                      },
                      "id": 66,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "712:65:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Question_$14_memory_ptr",
                        "typeString": "struct BuyAnAnswerContract.Question memory"
                      }
                    },
                    "src": "687:90:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Question_$14_storage",
                      "typeString": "struct BuyAnAnswerContract.Question storage ref"
                    }
                  },
                  "id": 68,
                  "nodeType": "ExpressionStatement",
                  "src": "687:90:0"
                }
              ]
            },
            "functionSelector": "0b06ed78",
            "id": 70,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "askQuestion",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 34,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31,
                  "mutability": "mutable",
                  "name": "_answerer",
                  "nodeType": "VariableDeclaration",
                  "scope": 70,
                  "src": "464:25:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 30,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "464:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33,
                  "mutability": "mutable",
                  "name": "_questionId",
                  "nodeType": "VariableDeclaration",
                  "scope": 70,
                  "src": "491:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "491:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "463:48:0"
            },
            "returnParameters": {
              "id": 35,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "529:0:0"
            },
            "scope": 238,
            "src": "443:341:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 134,
              "nodeType": "Block",
              "src": "844:499:0",
              "statements": [
                {
                  "assignments": [
                    77
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 77,
                      "mutability": "mutable",
                      "name": "question",
                      "nodeType": "VariableDeclaration",
                      "scope": 134,
                      "src": "854:25:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Question_$14_storage_ptr",
                        "typeString": "struct BuyAnAnswerContract.Question"
                      },
                      "typeName": {
                        "id": 76,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 75,
                          "name": "Question",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 14,
                          "src": "854:8:0"
                        },
                        "referencedDeclaration": 14,
                        "src": "854:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Question_$14_storage_ptr",
                          "typeString": "struct BuyAnAnswerContract.Question"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 81,
                  "initialValue": {
                    "baseExpression": {
                      "id": 78,
                      "name": "questions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "882:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Question_$14_storage_$",
                        "typeString": "mapping(uint256 => struct BuyAnAnswerContract.Question storage ref)"
                      }
                    },
                    "id": 80,
                    "indexExpression": {
                      "id": 79,
                      "name": "_questionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72,
                      "src": "892:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "882:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Question_$14_storage",
                      "typeString": "struct BuyAnAnswerContract.Question storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "854:50:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 87,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 83,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "922:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 84,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "922:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 85,
                            "name": "question",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 77,
                            "src": "936:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Question_$14_storage_ptr",
                              "typeString": "struct BuyAnAnswerContract.Question storage pointer"
                            }
                          },
                          "id": 86,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "answerer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7,
                          "src": "936:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "922:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c792073656c656374656420757365722063616e20616e7377657220746865207175657374696f6e",
                        "id": 88,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "955:44:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_288d98d7892def95345d8f72de4493b91ae333b71c5f3f25e91e3de657aed36b",
                          "typeString": "literal_string \"Only selected user can answer the question\""
                        },
                        "value": "Only selected user can answer the question"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_288d98d7892def95345d8f72de4493b91ae333b71c5f3f25e91e3de657aed36b",
                          "typeString": "literal_string \"Only selected user can answer the question\""
                        }
                      ],
                      "id": 82,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "914:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 89,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "914:86:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 90,
                  "nodeType": "ExpressionStatement",
                  "src": "914:86:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 94,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1018:19:0",
                        "subExpression": {
                          "expression": {
                            "id": 92,
                            "name": "question",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 77,
                            "src": "1019:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Question_$14_storage_ptr",
                              "typeString": "struct BuyAnAnswerContract.Question storage pointer"
                            }
                          },
                          "id": 93,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "cancelled",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13,
                          "src": "1019:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546865207175657374696f6e20686173206265656e2063616e63656c6c6564",
                        "id": 95,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1039:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ef7047970c45741381d84e64114f5d553ec2d7186fa55c3b9efc2007e153743c",
                          "typeString": "literal_string \"The question has been cancelled\""
                        },
                        "value": "The question has been cancelled"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ef7047970c45741381d84e64114f5d553ec2d7186fa55c3b9efc2007e153743c",
                          "typeString": "literal_string \"The question has been cancelled\""
                        }
                      ],
                      "id": 91,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1010:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 96,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1010:63:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 97,
                  "nodeType": "ExpressionStatement",
                  "src": "1010:63:0"
                },
                {
                  "assignments": [
                    99
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 99,
                      "mutability": "mutable",
                      "name": "fee",
                      "nodeType": "VariableDeclaration",
                      "scope": 134,
                      "src": "1092:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 98,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1092:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 106,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 103,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 100,
                          "name": "question",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 77,
                          "src": "1106:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Question_$14_storage_ptr",
                            "typeString": "struct BuyAnAnswerContract.Question storage pointer"
                          }
                        },
                        "id": 101,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9,
                        "src": "1106:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "hexValue": "35",
                        "id": 102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1124:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        },
                        "value": "5"
                      },
                      "src": "1106:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "313030",
                      "id": 104,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1128:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "1106:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1092:39:0"
                },
                {
                  "assignments": [
                    108
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 108,
                      "mutability": "mutable",
                      "name": "payout",
                      "nodeType": "VariableDeclaration",
                      "scope": 134,
                      "src": "1162:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 107,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1162:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 113,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 109,
                        "name": "question",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77,
                        "src": "1179:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Question_$14_storage_ptr",
                          "typeString": "struct BuyAnAnswerContract.Question storage pointer"
                        }
                      },
                      "id": 110,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9,
                      "src": "1179:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 111,
                      "name": "fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99,
                      "src": "1197:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1179:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1162:38:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 119,
                        "name": "payout",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 108,
                        "src": "1260:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 114,
                          "name": "question",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 77,
                          "src": "1233:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Question_$14_storage_ptr",
                            "typeString": "struct BuyAnAnswerContract.Question storage pointer"
                          }
                        },
                        "id": 117,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "answerer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7,
                        "src": "1233:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 118,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "1233:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1233:34:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 121,
                  "nodeType": "ExpressionStatement",
                  "src": "1233:34:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 125,
                        "name": "fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99,
                        "src": "1297:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 122,
                        "name": "feeAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3,
                        "src": "1277:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 124,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "1277:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1277:24:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 127,
                  "nodeType": "ExpressionStatement",
                  "src": "1277:24:0"
                },
                {
                  "expression": {
                    "id": 132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 128,
                        "name": "question",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77,
                        "src": "1312:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Question_$14_storage_ptr",
                          "typeString": "struct BuyAnAnswerContract.Question storage pointer"
                        }
                      },
                      "id": 130,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "answered",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11,
                      "src": "1312:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 131,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1332:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1312:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 133,
                  "nodeType": "ExpressionStatement",
                  "src": "1312:24:0"
                }
              ]
            },
            "functionSelector": "ad9f8c20",
            "id": 135,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "answerQuestion",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 73,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72,
                  "mutability": "mutable",
                  "name": "_questionId",
                  "nodeType": "VariableDeclaration",
                  "scope": 135,
                  "src": "814:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 71,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "814:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "813:21:0"
            },
            "returnParameters": {
              "id": 74,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "844:0:0"
            },
            "scope": 238,
            "src": "790:553:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 178,
              "nodeType": "Block",
              "src": "1404:323:0",
              "statements": [
                {
                  "assignments": [
                    142
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 142,
                      "mutability": "mutable",
                      "name": "question",
                      "nodeType": "VariableDeclaration",
                      "scope": 178,
                      "src": "1414:25:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Question_$14_storage_ptr",
                        "typeString": "struct BuyAnAnswerContract.Question"
                      },
                      "typeName": {
                        "id": 141,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 140,
                          "name": "Question",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 14,
                          "src": "1414:8:0"
                        },
                        "referencedDeclaration": 14,
                        "src": "1414:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Question_$14_storage_ptr",
                          "typeString": "struct BuyAnAnswerContract.Question"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 146,
                  "initialValue": {
                    "baseExpression": {
                      "id": 143,
                      "name": "questions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "1442:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Question_$14_storage_$",
                        "typeString": "mapping(uint256 => struct BuyAnAnswerContract.Question storage ref)"
                      }
                    },
                    "id": 145,
                    "indexExpression": {
                      "id": 144,
                      "name": "_questionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 137,
                      "src": "1452:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1442:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Question_$14_storage",
                      "typeString": "struct BuyAnAnswerContract.Question storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1414:50:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 148,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1482:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1482:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 150,
                            "name": "question",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 142,
                            "src": "1496:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Question_$14_storage_ptr",
                              "typeString": "struct BuyAnAnswerContract.Question storage pointer"
                            }
                          },
                          "id": 151,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "answerer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7,
                          "src": "1496:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1482:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c792073656c656374656420757365722063616e206465636c696e6520746865207175657374696f6e",
                        "id": 153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1515:45:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aab65f76069ac3e0351128f573e0d7bbb1c0b37e20a0945e007444be2907dfd7",
                          "typeString": "literal_string \"Only selected user can decline the question\""
                        },
                        "value": "Only selected user can decline the question"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aab65f76069ac3e0351128f573e0d7bbb1c0b37e20a0945e007444be2907dfd7",
                          "typeString": "literal_string \"Only selected user can decline the question\""
                        }
                      ],
                      "id": 147,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1474:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1474:87:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 155,
                  "nodeType": "ExpressionStatement",
                  "src": "1474:87:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1579:19:0",
                        "subExpression": {
                          "expression": {
                            "id": 157,
                            "name": "question",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 142,
                            "src": "1580:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Question_$14_storage_ptr",
                              "typeString": "struct BuyAnAnswerContract.Question storage pointer"
                            }
                          },
                          "id": 158,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "cancelled",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13,
                          "src": "1580:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546865207175657374696f6e20686173206265656e2063616e63656c6c6564",
                        "id": 160,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1600:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ef7047970c45741381d84e64114f5d553ec2d7186fa55c3b9efc2007e153743c",
                          "typeString": "literal_string \"The question has been cancelled\""
                        },
                        "value": "The question has been cancelled"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ef7047970c45741381d84e64114f5d553ec2d7186fa55c3b9efc2007e153743c",
                          "typeString": "literal_string \"The question has been cancelled\""
                        }
                      ],
                      "id": 156,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1571:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1571:63:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 162,
                  "nodeType": "ExpressionStatement",
                  "src": "1571:63:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 168,
                          "name": "question",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 142,
                          "src": "1669:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Question_$14_storage_ptr",
                            "typeString": "struct BuyAnAnswerContract.Question storage pointer"
                          }
                        },
                        "id": 169,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9,
                        "src": "1669:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 163,
                          "name": "question",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 142,
                          "src": "1645:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Question_$14_storage_ptr",
                            "typeString": "struct BuyAnAnswerContract.Question storage pointer"
                          }
                        },
                        "id": 166,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "asker",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5,
                        "src": "1645:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 167,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "1645:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1645:40:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 171,
                  "nodeType": "ExpressionStatement",
                  "src": "1645:40:0"
                },
                {
                  "expression": {
                    "id": 176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 172,
                        "name": "question",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 142,
                        "src": "1696:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Question_$14_storage_ptr",
                          "typeString": "struct BuyAnAnswerContract.Question storage pointer"
                        }
                      },
                      "id": 174,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "answered",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11,
                      "src": "1696:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 175,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1716:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1696:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 177,
                  "nodeType": "ExpressionStatement",
                  "src": "1696:24:0"
                }
              ]
            },
            "functionSelector": "aee412c0",
            "id": 179,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "declineQuestion",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 138,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 137,
                  "mutability": "mutable",
                  "name": "_questionId",
                  "nodeType": "VariableDeclaration",
                  "scope": 179,
                  "src": "1374:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 136,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1374:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1373:21:0"
            },
            "returnParameters": {
              "id": 139,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1404:0:0"
            },
            "scope": 238,
            "src": "1349:378:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 236,
              "nodeType": "Block",
              "src": "1787:405:0",
              "statements": [
                {
                  "assignments": [
                    186
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 186,
                      "mutability": "mutable",
                      "name": "question",
                      "nodeType": "VariableDeclaration",
                      "scope": 236,
                      "src": "1797:25:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Question_$14_storage_ptr",
                        "typeString": "struct BuyAnAnswerContract.Question"
                      },
                      "typeName": {
                        "id": 185,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 184,
                          "name": "Question",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 14,
                          "src": "1797:8:0"
                        },
                        "referencedDeclaration": 14,
                        "src": "1797:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Question_$14_storage_ptr",
                          "typeString": "struct BuyAnAnswerContract.Question"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 190,
                  "initialValue": {
                    "baseExpression": {
                      "id": 187,
                      "name": "questions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "1825:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Question_$14_storage_$",
                        "typeString": "mapping(uint256 => struct BuyAnAnswerContract.Question storage ref)"
                      }
                    },
                    "id": 189,
                    "indexExpression": {
                      "id": 188,
                      "name": "_questionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 181,
                      "src": "1835:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1825:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Question_$14_storage",
                      "typeString": "struct BuyAnAnswerContract.Question storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1797:50:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 192,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1865:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 193,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1865:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 194,
                            "name": "question",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 186,
                            "src": "1879:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Question_$14_storage_ptr",
                              "typeString": "struct BuyAnAnswerContract.Question storage pointer"
                            }
                          },
                          "id": 195,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "asker",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5,
                          "src": "1879:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1865:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c792061736b65722063616e2063616e63656c20746865207175657374696f6e",
                        "id": 197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1895:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d14c7c0cd378a1e68de72ce0a4cdb595a50a544998ecd250be51ee2526373413",
                          "typeString": "literal_string \"Only asker can cancel the question\""
                        },
                        "value": "Only asker can cancel the question"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d14c7c0cd378a1e68de72ce0a4cdb595a50a544998ecd250be51ee2526373413",
                          "typeString": "literal_string \"Only asker can cancel the question\""
                        }
                      ],
                      "id": 191,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1857:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1857:75:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 199,
                  "nodeType": "ExpressionStatement",
                  "src": "1857:75:0"
                },
                {
                  "assignments": [
                    201
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 201,
                      "mutability": "mutable",
                      "name": "fee",
                      "nodeType": "VariableDeclaration",
                      "scope": 236,
                      "src": "1943:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 200,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1943:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 208,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 205,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 202,
                          "name": "question",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 186,
                          "src": "1957:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Question_$14_storage_ptr",
                            "typeString": "struct BuyAnAnswerContract.Question storage pointer"
                          }
                        },
                        "id": 203,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9,
                        "src": "1957:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "hexValue": "32",
                        "id": 204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1975:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "src": "1957:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "313030",
                      "id": 206,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1979:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "1957:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1943:39:0"
                },
                {
                  "assignments": [
                    210
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 210,
                      "mutability": "mutable",
                      "name": "refund",
                      "nodeType": "VariableDeclaration",
                      "scope": 236,
                      "src": "2013:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 209,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2013:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 215,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 211,
                        "name": "question",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 186,
                        "src": "2030:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Question_$14_storage_ptr",
                          "typeString": "struct BuyAnAnswerContract.Question storage pointer"
                        }
                      },
                      "id": 212,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9,
                      "src": "2030:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 213,
                      "name": "fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 201,
                      "src": "2048:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2030:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2013:38:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 221,
                        "name": "refund",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 210,
                        "src": "2108:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 216,
                          "name": "question",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 186,
                          "src": "2084:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Question_$14_storage_ptr",
                            "typeString": "struct BuyAnAnswerContract.Question storage pointer"
                          }
                        },
                        "id": 219,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "asker",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5,
                        "src": "2084:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 220,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "2084:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2084:31:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 223,
                  "nodeType": "ExpressionStatement",
                  "src": "2084:31:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 227,
                        "name": "fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 201,
                        "src": "2145:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 224,
                        "name": "feeAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3,
                        "src": "2125:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 226,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "2125:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2125:24:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 229,
                  "nodeType": "ExpressionStatement",
                  "src": "2125:24:0"
                },
                {
                  "expression": {
                    "id": 234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 230,
                        "name": "question",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 186,
                        "src": "2160:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Question_$14_storage_ptr",
                          "typeString": "struct BuyAnAnswerContract.Question storage pointer"
                        }
                      },
                      "id": 232,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "cancelled",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13,
                      "src": "2160:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 233,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2181:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2160:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 235,
                  "nodeType": "ExpressionStatement",
                  "src": "2160:25:0"
                }
              ]
            },
            "functionSelector": "c79ba532",
            "id": 237,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cancelQuestion",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 182,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 181,
                  "mutability": "mutable",
                  "name": "_questionId",
                  "nodeType": "VariableDeclaration",
                  "scope": 237,
                  "src": "1757:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 180,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1757:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1756:21:0"
            },
            "returnParameters": {
              "id": 183,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1787:0:0"
            },
            "scope": 238,
            "src": "1733:459:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 239,
        "src": "59:2135:0"
      }
    ],
    "src": "34:2161:0"
  },
  "legacyAST": {
    "absolutePath": "/Users/jayanthkomarraju/Documents/GitHub/buyananswer.eth/client/contracts/BuyAnAnswerContract.sol",
    "exportedSymbols": {
      "BuyAnAnswerContract": [
        238
      ]
    },
    "id": 239,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "34:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 238,
        "linearizedBaseContracts": [
          238
        ],
        "name": "BuyAnAnswerContract",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "41275358",
            "id": 3,
            "mutability": "mutable",
            "name": "feeAddress",
            "nodeType": "VariableDeclaration",
            "scope": 238,
            "src": "94:33:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 2,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "94:15:0",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "BuyAnAnswerContract.Question",
            "id": 14,
            "members": [
              {
                "constant": false,
                "id": 5,
                "mutability": "mutable",
                "name": "asker",
                "nodeType": "VariableDeclaration",
                "scope": 14,
                "src": "164:21:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 4,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "164:15:0",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7,
                "mutability": "mutable",
                "name": "answerer",
                "nodeType": "VariableDeclaration",
                "scope": 14,
                "src": "195:24:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 6,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "195:15:0",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9,
                "mutability": "mutable",
                "name": "amount",
                "nodeType": "VariableDeclaration",
                "scope": 14,
                "src": "229:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 8,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "229:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 11,
                "mutability": "mutable",
                "name": "answered",
                "nodeType": "VariableDeclaration",
                "scope": 14,
                "src": "253:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 10,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "253:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 13,
                "mutability": "mutable",
                "name": "cancelled",
                "nodeType": "VariableDeclaration",
                "scope": 14,
                "src": "276:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 12,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "276:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Question",
            "nodeType": "StructDefinition",
            "scope": 238,
            "src": "138:159:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "31b1b978",
            "id": 19,
            "mutability": "mutable",
            "name": "questions",
            "nodeType": "VariableDeclaration",
            "scope": 238,
            "src": "303:45:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Question_$14_storage_$",
              "typeString": "mapping(uint256 => struct BuyAnAnswerContract.Question)"
            },
            "typeName": {
              "id": 18,
              "keyType": {
                "id": 15,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "311:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "303:28:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Question_$14_storage_$",
                "typeString": "mapping(uint256 => struct BuyAnAnswerContract.Question)"
              },
              "valueType": {
                "id": 17,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 16,
                  "name": "Question",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14,
                  "src": "322:8:0"
                },
                "referencedDeclaration": 14,
                "src": "322:8:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Question_$14_storage_ptr",
                  "typeString": "struct BuyAnAnswerContract.Question"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 28,
              "nodeType": "Block",
              "src": "396:41:0",
              "statements": [
                {
                  "expression": {
                    "id": 26,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24,
                      "name": "feeAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "406:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 25,
                      "name": "_feeAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21,
                      "src": "419:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "406:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 27,
                  "nodeType": "ExpressionStatement",
                  "src": "406:24:0"
                }
              ]
            },
            "id": 29,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 22,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21,
                  "mutability": "mutable",
                  "name": "_feeAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 29,
                  "src": "367:27:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "367:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "366:29:0"
            },
            "returnParameters": {
              "id": 23,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "396:0:0"
            },
            "scope": 238,
            "src": "355:82:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 69,
              "nodeType": "Block",
              "src": "529:255:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 40,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 37,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "547:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 38,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "547:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 39,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "559:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "547:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e742073686f756c642062652067726561746572207468616e2030",
                        "id": 41,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "562:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
                          "typeString": "literal_string \"Amount should be greater than 0\""
                        },
                        "value": "Amount should be greater than 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f525d2a9200f69a45f8de883051eac35bddb35241cec9b8986fc11471c25580",
                          "typeString": "literal_string \"Amount should be greater than 0\""
                        }
                      ],
                      "id": 36,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "539:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 42,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "539:57:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43,
                  "nodeType": "ExpressionStatement",
                  "src": "539:57:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 48,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 45,
                          "name": "_answerer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31,
                          "src": "614:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "expression": {
                            "id": 46,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "627:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 47,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "627:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "614:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752063616e6e6f742061736b207175657374696f6e20746f20796f757273656c66",
                        "id": 49,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "639:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a91c9bcdc2d46ccfe3faf7ac5084f2c46d16fe5dfa67258337a9984f1eddcb5c",
                          "typeString": "literal_string \"You cannot ask question to yourself\""
                        },
                        "value": "You cannot ask question to yourself"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a91c9bcdc2d46ccfe3faf7ac5084f2c46d16fe5dfa67258337a9984f1eddcb5c",
                          "typeString": "literal_string \"You cannot ask question to yourself\""
                        }
                      ],
                      "id": 44,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "606:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 50,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "606:71:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51,
                  "nodeType": "ExpressionStatement",
                  "src": "606:71:0"
                },
                {
                  "expression": {
                    "id": 67,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 52,
                        "name": "questions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19,
                        "src": "687:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Question_$14_storage_$",
                          "typeString": "mapping(uint256 => struct BuyAnAnswerContract.Question storage ref)"
                        }
                      },
                      "id": 54,
                      "indexExpression": {
                        "id": 53,
                        "name": "_questionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "697:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "687:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Question_$14_storage",
                        "typeString": "struct BuyAnAnswerContract.Question storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 58,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "729:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 59,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "729:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 57,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "721:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 56,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "721:8:0",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 60,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "721:19:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "id": 61,
                          "name": "_answerer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31,
                          "src": "742:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "expression": {
                            "id": 62,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "753:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 63,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "753:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 64,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "764:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 65,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "771:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 55,
                        "name": "Question",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14,
                        "src": "712:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Question_$14_storage_ptr_$",
                          "typeString": "type(struct BuyAnAnswerContract.Question storage pointer)"
                        }
                      },
                      "id": 66,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "712:65:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Question_$14_memory_ptr",
                        "typeString": "struct BuyAnAnswerContract.Question memory"
                      }
                    },
                    "src": "687:90:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Question_$14_storage",
                      "typeString": "struct BuyAnAnswerContract.Question storage ref"
                    }
                  },
                  "id": 68,
                  "nodeType": "ExpressionStatement",
                  "src": "687:90:0"
                }
              ]
            },
            "functionSelector": "0b06ed78",
            "id": 70,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "askQuestion",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 34,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31,
                  "mutability": "mutable",
                  "name": "_answerer",
                  "nodeType": "VariableDeclaration",
                  "scope": 70,
                  "src": "464:25:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 30,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "464:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33,
                  "mutability": "mutable",
                  "name": "_questionId",
                  "nodeType": "VariableDeclaration",
                  "scope": 70,
                  "src": "491:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "491:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "463:48:0"
            },
            "returnParameters": {
              "id": 35,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "529:0:0"
            },
            "scope": 238,
            "src": "443:341:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 134,
              "nodeType": "Block",
              "src": "844:499:0",
              "statements": [
                {
                  "assignments": [
                    77
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 77,
                      "mutability": "mutable",
                      "name": "question",
                      "nodeType": "VariableDeclaration",
                      "scope": 134,
                      "src": "854:25:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Question_$14_storage_ptr",
                        "typeString": "struct BuyAnAnswerContract.Question"
                      },
                      "typeName": {
                        "id": 76,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 75,
                          "name": "Question",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 14,
                          "src": "854:8:0"
                        },
                        "referencedDeclaration": 14,
                        "src": "854:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Question_$14_storage_ptr",
                          "typeString": "struct BuyAnAnswerContract.Question"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 81,
                  "initialValue": {
                    "baseExpression": {
                      "id": 78,
                      "name": "questions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "882:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Question_$14_storage_$",
                        "typeString": "mapping(uint256 => struct BuyAnAnswerContract.Question storage ref)"
                      }
                    },
                    "id": 80,
                    "indexExpression": {
                      "id": 79,
                      "name": "_questionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72,
                      "src": "892:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "882:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Question_$14_storage",
                      "typeString": "struct BuyAnAnswerContract.Question storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "854:50:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 87,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 83,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "922:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 84,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "922:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 85,
                            "name": "question",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 77,
                            "src": "936:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Question_$14_storage_ptr",
                              "typeString": "struct BuyAnAnswerContract.Question storage pointer"
                            }
                          },
                          "id": 86,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "answerer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7,
                          "src": "936:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "922:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c792073656c656374656420757365722063616e20616e7377657220746865207175657374696f6e",
                        "id": 88,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "955:44:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_288d98d7892def95345d8f72de4493b91ae333b71c5f3f25e91e3de657aed36b",
                          "typeString": "literal_string \"Only selected user can answer the question\""
                        },
                        "value": "Only selected user can answer the question"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_288d98d7892def95345d8f72de4493b91ae333b71c5f3f25e91e3de657aed36b",
                          "typeString": "literal_string \"Only selected user can answer the question\""
                        }
                      ],
                      "id": 82,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "914:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 89,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "914:86:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 90,
                  "nodeType": "ExpressionStatement",
                  "src": "914:86:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 94,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1018:19:0",
                        "subExpression": {
                          "expression": {
                            "id": 92,
                            "name": "question",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 77,
                            "src": "1019:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Question_$14_storage_ptr",
                              "typeString": "struct BuyAnAnswerContract.Question storage pointer"
                            }
                          },
                          "id": 93,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "cancelled",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13,
                          "src": "1019:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546865207175657374696f6e20686173206265656e2063616e63656c6c6564",
                        "id": 95,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1039:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ef7047970c45741381d84e64114f5d553ec2d7186fa55c3b9efc2007e153743c",
                          "typeString": "literal_string \"The question has been cancelled\""
                        },
                        "value": "The question has been cancelled"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ef7047970c45741381d84e64114f5d553ec2d7186fa55c3b9efc2007e153743c",
                          "typeString": "literal_string \"The question has been cancelled\""
                        }
                      ],
                      "id": 91,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1010:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 96,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1010:63:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 97,
                  "nodeType": "ExpressionStatement",
                  "src": "1010:63:0"
                },
                {
                  "assignments": [
                    99
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 99,
                      "mutability": "mutable",
                      "name": "fee",
                      "nodeType": "VariableDeclaration",
                      "scope": 134,
                      "src": "1092:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 98,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1092:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 106,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 103,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 100,
                          "name": "question",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 77,
                          "src": "1106:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Question_$14_storage_ptr",
                            "typeString": "struct BuyAnAnswerContract.Question storage pointer"
                          }
                        },
                        "id": 101,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9,
                        "src": "1106:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "hexValue": "35",
                        "id": 102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1124:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        },
                        "value": "5"
                      },
                      "src": "1106:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "313030",
                      "id": 104,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1128:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "1106:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1092:39:0"
                },
                {
                  "assignments": [
                    108
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 108,
                      "mutability": "mutable",
                      "name": "payout",
                      "nodeType": "VariableDeclaration",
                      "scope": 134,
                      "src": "1162:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 107,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1162:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 113,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 109,
                        "name": "question",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77,
                        "src": "1179:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Question_$14_storage_ptr",
                          "typeString": "struct BuyAnAnswerContract.Question storage pointer"
                        }
                      },
                      "id": 110,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9,
                      "src": "1179:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 111,
                      "name": "fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99,
                      "src": "1197:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1179:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1162:38:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 119,
                        "name": "payout",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 108,
                        "src": "1260:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 114,
                          "name": "question",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 77,
                          "src": "1233:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Question_$14_storage_ptr",
                            "typeString": "struct BuyAnAnswerContract.Question storage pointer"
                          }
                        },
                        "id": 117,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "answerer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7,
                        "src": "1233:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 118,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "1233:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1233:34:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 121,
                  "nodeType": "ExpressionStatement",
                  "src": "1233:34:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 125,
                        "name": "fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99,
                        "src": "1297:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 122,
                        "name": "feeAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3,
                        "src": "1277:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 124,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "1277:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1277:24:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 127,
                  "nodeType": "ExpressionStatement",
                  "src": "1277:24:0"
                },
                {
                  "expression": {
                    "id": 132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 128,
                        "name": "question",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77,
                        "src": "1312:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Question_$14_storage_ptr",
                          "typeString": "struct BuyAnAnswerContract.Question storage pointer"
                        }
                      },
                      "id": 130,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "answered",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11,
                      "src": "1312:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 131,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1332:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1312:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 133,
                  "nodeType": "ExpressionStatement",
                  "src": "1312:24:0"
                }
              ]
            },
            "functionSelector": "ad9f8c20",
            "id": 135,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "answerQuestion",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 73,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72,
                  "mutability": "mutable",
                  "name": "_questionId",
                  "nodeType": "VariableDeclaration",
                  "scope": 135,
                  "src": "814:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 71,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "814:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "813:21:0"
            },
            "returnParameters": {
              "id": 74,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "844:0:0"
            },
            "scope": 238,
            "src": "790:553:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 178,
              "nodeType": "Block",
              "src": "1404:323:0",
              "statements": [
                {
                  "assignments": [
                    142
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 142,
                      "mutability": "mutable",
                      "name": "question",
                      "nodeType": "VariableDeclaration",
                      "scope": 178,
                      "src": "1414:25:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Question_$14_storage_ptr",
                        "typeString": "struct BuyAnAnswerContract.Question"
                      },
                      "typeName": {
                        "id": 141,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 140,
                          "name": "Question",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 14,
                          "src": "1414:8:0"
                        },
                        "referencedDeclaration": 14,
                        "src": "1414:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Question_$14_storage_ptr",
                          "typeString": "struct BuyAnAnswerContract.Question"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 146,
                  "initialValue": {
                    "baseExpression": {
                      "id": 143,
                      "name": "questions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "1442:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Question_$14_storage_$",
                        "typeString": "mapping(uint256 => struct BuyAnAnswerContract.Question storage ref)"
                      }
                    },
                    "id": 145,
                    "indexExpression": {
                      "id": 144,
                      "name": "_questionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 137,
                      "src": "1452:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1442:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Question_$14_storage",
                      "typeString": "struct BuyAnAnswerContract.Question storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1414:50:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 148,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1482:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1482:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 150,
                            "name": "question",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 142,
                            "src": "1496:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Question_$14_storage_ptr",
                              "typeString": "struct BuyAnAnswerContract.Question storage pointer"
                            }
                          },
                          "id": 151,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "answerer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7,
                          "src": "1496:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1482:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c792073656c656374656420757365722063616e206465636c696e6520746865207175657374696f6e",
                        "id": 153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1515:45:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aab65f76069ac3e0351128f573e0d7bbb1c0b37e20a0945e007444be2907dfd7",
                          "typeString": "literal_string \"Only selected user can decline the question\""
                        },
                        "value": "Only selected user can decline the question"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aab65f76069ac3e0351128f573e0d7bbb1c0b37e20a0945e007444be2907dfd7",
                          "typeString": "literal_string \"Only selected user can decline the question\""
                        }
                      ],
                      "id": 147,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1474:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1474:87:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 155,
                  "nodeType": "ExpressionStatement",
                  "src": "1474:87:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1579:19:0",
                        "subExpression": {
                          "expression": {
                            "id": 157,
                            "name": "question",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 142,
                            "src": "1580:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Question_$14_storage_ptr",
                              "typeString": "struct BuyAnAnswerContract.Question storage pointer"
                            }
                          },
                          "id": 158,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "cancelled",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13,
                          "src": "1580:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546865207175657374696f6e20686173206265656e2063616e63656c6c6564",
                        "id": 160,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1600:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ef7047970c45741381d84e64114f5d553ec2d7186fa55c3b9efc2007e153743c",
                          "typeString": "literal_string \"The question has been cancelled\""
                        },
                        "value": "The question has been cancelled"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ef7047970c45741381d84e64114f5d553ec2d7186fa55c3b9efc2007e153743c",
                          "typeString": "literal_string \"The question has been cancelled\""
                        }
                      ],
                      "id": 156,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1571:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1571:63:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 162,
                  "nodeType": "ExpressionStatement",
                  "src": "1571:63:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 168,
                          "name": "question",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 142,
                          "src": "1669:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Question_$14_storage_ptr",
                            "typeString": "struct BuyAnAnswerContract.Question storage pointer"
                          }
                        },
                        "id": 169,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9,
                        "src": "1669:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 163,
                          "name": "question",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 142,
                          "src": "1645:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Question_$14_storage_ptr",
                            "typeString": "struct BuyAnAnswerContract.Question storage pointer"
                          }
                        },
                        "id": 166,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "asker",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5,
                        "src": "1645:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 167,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "1645:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1645:40:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 171,
                  "nodeType": "ExpressionStatement",
                  "src": "1645:40:0"
                },
                {
                  "expression": {
                    "id": 176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 172,
                        "name": "question",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 142,
                        "src": "1696:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Question_$14_storage_ptr",
                          "typeString": "struct BuyAnAnswerContract.Question storage pointer"
                        }
                      },
                      "id": 174,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "answered",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11,
                      "src": "1696:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 175,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1716:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1696:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 177,
                  "nodeType": "ExpressionStatement",
                  "src": "1696:24:0"
                }
              ]
            },
            "functionSelector": "aee412c0",
            "id": 179,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "declineQuestion",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 138,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 137,
                  "mutability": "mutable",
                  "name": "_questionId",
                  "nodeType": "VariableDeclaration",
                  "scope": 179,
                  "src": "1374:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 136,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1374:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1373:21:0"
            },
            "returnParameters": {
              "id": 139,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1404:0:0"
            },
            "scope": 238,
            "src": "1349:378:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 236,
              "nodeType": "Block",
              "src": "1787:405:0",
              "statements": [
                {
                  "assignments": [
                    186
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 186,
                      "mutability": "mutable",
                      "name": "question",
                      "nodeType": "VariableDeclaration",
                      "scope": 236,
                      "src": "1797:25:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Question_$14_storage_ptr",
                        "typeString": "struct BuyAnAnswerContract.Question"
                      },
                      "typeName": {
                        "id": 185,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 184,
                          "name": "Question",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 14,
                          "src": "1797:8:0"
                        },
                        "referencedDeclaration": 14,
                        "src": "1797:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Question_$14_storage_ptr",
                          "typeString": "struct BuyAnAnswerContract.Question"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 190,
                  "initialValue": {
                    "baseExpression": {
                      "id": 187,
                      "name": "questions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "1825:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Question_$14_storage_$",
                        "typeString": "mapping(uint256 => struct BuyAnAnswerContract.Question storage ref)"
                      }
                    },
                    "id": 189,
                    "indexExpression": {
                      "id": 188,
                      "name": "_questionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 181,
                      "src": "1835:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1825:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Question_$14_storage",
                      "typeString": "struct BuyAnAnswerContract.Question storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1797:50:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 192,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1865:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 193,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1865:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 194,
                            "name": "question",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 186,
                            "src": "1879:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Question_$14_storage_ptr",
                              "typeString": "struct BuyAnAnswerContract.Question storage pointer"
                            }
                          },
                          "id": 195,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "asker",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5,
                          "src": "1879:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1865:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c792061736b65722063616e2063616e63656c20746865207175657374696f6e",
                        "id": 197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1895:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d14c7c0cd378a1e68de72ce0a4cdb595a50a544998ecd250be51ee2526373413",
                          "typeString": "literal_string \"Only asker can cancel the question\""
                        },
                        "value": "Only asker can cancel the question"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d14c7c0cd378a1e68de72ce0a4cdb595a50a544998ecd250be51ee2526373413",
                          "typeString": "literal_string \"Only asker can cancel the question\""
                        }
                      ],
                      "id": 191,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1857:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1857:75:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 199,
                  "nodeType": "ExpressionStatement",
                  "src": "1857:75:0"
                },
                {
                  "assignments": [
                    201
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 201,
                      "mutability": "mutable",
                      "name": "fee",
                      "nodeType": "VariableDeclaration",
                      "scope": 236,
                      "src": "1943:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 200,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1943:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 208,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 205,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 202,
                          "name": "question",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 186,
                          "src": "1957:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Question_$14_storage_ptr",
                            "typeString": "struct BuyAnAnswerContract.Question storage pointer"
                          }
                        },
                        "id": 203,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9,
                        "src": "1957:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "hexValue": "32",
                        "id": 204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1975:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "src": "1957:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "313030",
                      "id": 206,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1979:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "1957:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1943:39:0"
                },
                {
                  "assignments": [
                    210
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 210,
                      "mutability": "mutable",
                      "name": "refund",
                      "nodeType": "VariableDeclaration",
                      "scope": 236,
                      "src": "2013:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 209,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2013:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 215,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 211,
                        "name": "question",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 186,
                        "src": "2030:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Question_$14_storage_ptr",
                          "typeString": "struct BuyAnAnswerContract.Question storage pointer"
                        }
                      },
                      "id": 212,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9,
                      "src": "2030:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 213,
                      "name": "fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 201,
                      "src": "2048:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2030:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2013:38:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 221,
                        "name": "refund",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 210,
                        "src": "2108:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 216,
                          "name": "question",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 186,
                          "src": "2084:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Question_$14_storage_ptr",
                            "typeString": "struct BuyAnAnswerContract.Question storage pointer"
                          }
                        },
                        "id": 219,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "asker",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5,
                        "src": "2084:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 220,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "2084:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2084:31:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 223,
                  "nodeType": "ExpressionStatement",
                  "src": "2084:31:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 227,
                        "name": "fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 201,
                        "src": "2145:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 224,
                        "name": "feeAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3,
                        "src": "2125:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 226,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "2125:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2125:24:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 229,
                  "nodeType": "ExpressionStatement",
                  "src": "2125:24:0"
                },
                {
                  "expression": {
                    "id": 234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 230,
                        "name": "question",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 186,
                        "src": "2160:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Question_$14_storage_ptr",
                          "typeString": "struct BuyAnAnswerContract.Question storage pointer"
                        }
                      },
                      "id": 232,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "cancelled",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13,
                      "src": "2160:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 233,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2181:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2160:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 235,
                  "nodeType": "ExpressionStatement",
                  "src": "2160:25:0"
                }
              ]
            },
            "functionSelector": "c79ba532",
            "id": 237,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cancelQuestion",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 182,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 181,
                  "mutability": "mutable",
                  "name": "_questionId",
                  "nodeType": "VariableDeclaration",
                  "scope": 237,
                  "src": "1757:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 180,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1757:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1756:21:0"
            },
            "returnParameters": {
              "id": 183,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1787:0:0"
            },
            "scope": 238,
            "src": "1733:459:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 239,
        "src": "59:2135:0"
      }
    ],
    "src": "34:2161:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0xd50aD5dFCA3e6410b4cBE364CFdccd2ac9E39DC8",
      "transactionHash": "0x75ccdf186973da1fb3ce971b0e11c70d7e72da29f1d5b2c3797037da304e7084"
    }
  },
  "schemaVersion": "3.2.3",
  "updatedAt": "2023-05-24T01:59:57.105Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}