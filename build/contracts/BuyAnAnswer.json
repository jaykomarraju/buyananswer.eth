{
  "contractName": "BuyAnAnswer",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "answeredQuestions",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "questionID",
              "type": "bytes32"
            },
            {
              "internalType": "string",
              "name": "questionText",
              "type": "string"
            },
            {
              "internalType": "bytes32",
              "name": "boardID",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "priorityBonus",
              "type": "uint256"
            },
            {
              "internalType": "address payable",
              "name": "askUser",
              "type": "address"
            },
            {
              "internalType": "address payable",
              "name": "answerUser",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "isAnswered",
              "type": "bool"
            }
          ],
          "internalType": "struct BuyAnAnswer.Question",
          "name": "question",
          "type": "tuple"
        },
        {
          "internalType": "string",
          "name": "answerText",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "declinedQuestions",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "questionID",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "questionText",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "boardID",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "priorityBonus",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "askUser",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "answerUser",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isAnswered",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "history",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "questionID",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "questionText",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "boardID",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "priorityBonus",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "askUser",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "answerUser",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isAnswered",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "questions",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "questionID",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "questionText",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "boardID",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "priorityBonus",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "askUser",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "answerUser",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isAnswered",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "receivedQuestions",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "questionID",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "questionText",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "boardID",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "priorityBonus",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "askUser",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "answerUser",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isAnswered",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "unansweredQuestions",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "questionID",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "questionText",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "boardID",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "priorityBonus",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "askUser",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "answerUser",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isAnswered",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "users",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "userAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "username",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "email",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "password",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "boardID",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "headline",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "bio",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "minimumPrice",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "usersByUsername",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "userAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "username",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "email",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "password",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "boardID",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "headline",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "bio",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "minimumPrice",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "_username",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_email",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_password",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_headline",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_bio",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_minimumPrice",
          "type": "uint256"
        }
      ],
      "name": "createUser",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_userAddress",
          "type": "address"
        }
      ],
      "name": "getUser",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address payable",
              "name": "userAddress",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "username",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "email",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "password",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "boardID",
              "type": "bytes32"
            },
            {
              "internalType": "string",
              "name": "headline",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "bio",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "minimumPrice",
              "type": "uint256"
            }
          ],
          "internalType": "struct BuyAnAnswer.User",
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "_headline",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_bio",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_minimumPrice",
          "type": "uint256"
        }
      ],
      "name": "updateUser",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "_questionText",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_priorityBonus",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "_answerUser",
          "type": "address"
        }
      ],
      "name": "postQuestion",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_questionID",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_answerText",
          "type": "string"
        }
      ],
      "name": "postAnswer",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_questionID",
          "type": "bytes32"
        }
      ],
      "name": "declineQuestion",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_userAddress",
          "type": "address"
        }
      ],
      "name": "getUserHistory",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "questionID",
              "type": "bytes32"
            },
            {
              "internalType": "string",
              "name": "questionText",
              "type": "string"
            },
            {
              "internalType": "bytes32",
              "name": "boardID",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "priorityBonus",
              "type": "uint256"
            },
            {
              "internalType": "address payable",
              "name": "askUser",
              "type": "address"
            },
            {
              "internalType": "address payable",
              "name": "answerUser",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "isAnswered",
              "type": "bool"
            }
          ],
          "internalType": "struct BuyAnAnswer.Question[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getUnansweredQuestions",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "questionID",
              "type": "bytes32"
            },
            {
              "internalType": "string",
              "name": "questionText",
              "type": "string"
            },
            {
              "internalType": "bytes32",
              "name": "boardID",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "priorityBonus",
              "type": "uint256"
            },
            {
              "internalType": "address payable",
              "name": "askUser",
              "type": "address"
            },
            {
              "internalType": "address payable",
              "name": "answerUser",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "isAnswered",
              "type": "bool"
            }
          ],
          "internalType": "struct BuyAnAnswer.Question[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_userAddress",
          "type": "address"
        }
      ],
      "name": "getUserReceivedQuestions",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "questionID",
              "type": "bytes32"
            },
            {
              "internalType": "string",
              "name": "questionText",
              "type": "string"
            },
            {
              "internalType": "bytes32",
              "name": "boardID",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "priorityBonus",
              "type": "uint256"
            },
            {
              "internalType": "address payable",
              "name": "askUser",
              "type": "address"
            },
            {
              "internalType": "address payable",
              "name": "answerUser",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "isAnswered",
              "type": "bool"
            }
          ],
          "internalType": "struct BuyAnAnswer.Question[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_userAddress",
          "type": "address"
        }
      ],
      "name": "getUserDeclinedQuestions",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "questionID",
              "type": "bytes32"
            },
            {
              "internalType": "string",
              "name": "questionText",
              "type": "string"
            },
            {
              "internalType": "bytes32",
              "name": "boardID",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "priorityBonus",
              "type": "uint256"
            },
            {
              "internalType": "address payable",
              "name": "askUser",
              "type": "address"
            },
            {
              "internalType": "address payable",
              "name": "answerUser",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "isAnswered",
              "type": "bool"
            }
          ],
          "internalType": "struct BuyAnAnswer.Question[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_userAddress",
          "type": "address"
        }
      ],
      "name": "getUserAnsweredQuestions",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "questionID",
                  "type": "bytes32"
                },
                {
                  "internalType": "string",
                  "name": "questionText",
                  "type": "string"
                },
                {
                  "internalType": "bytes32",
                  "name": "boardID",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "priorityBonus",
                  "type": "uint256"
                },
                {
                  "internalType": "address payable",
                  "name": "askUser",
                  "type": "address"
                },
                {
                  "internalType": "address payable",
                  "name": "answerUser",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "isAnswered",
                  "type": "bool"
                }
              ],
              "internalType": "struct BuyAnAnswer.Question",
              "name": "question",
              "type": "tuple"
            },
            {
              "internalType": "string",
              "name": "answerText",
              "type": "string"
            }
          ],
          "internalType": "struct BuyAnAnswer.Answer[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_userAddress",
          "type": "address"
        }
      ],
      "name": "getUserBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_userAddress",
          "type": "address"
        }
      ],
      "name": "getUserBoardID",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_userAddress",
          "type": "address"
        }
      ],
      "name": "getUserHeadline",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_userAddress",
          "type": "address"
        }
      ],
      "name": "getUserBio",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_userAddress",
          "type": "address"
        }
      ],
      "name": "getUserMinimumPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "string",
          "name": "_username",
          "type": "string"
        }
      ],
      "name": "getUserByUsername",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address payable",
              "name": "userAddress",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "username",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "email",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "password",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "boardID",
              "type": "bytes32"
            },
            {
              "internalType": "string",
              "name": "headline",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "bio",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "minimumPrice",
              "type": "uint256"
            }
          ],
          "internalType": "struct BuyAnAnswer.User",
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"answeredQuestions\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"questionID\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"questionText\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"boardID\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"priorityBonus\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"askUser\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"answerUser\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isAnswered\",\"type\":\"bool\"}],\"internalType\":\"struct BuyAnAnswer.Question\",\"name\":\"question\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"answerText\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_username\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_email\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_password\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_headline\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_bio\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_minimumPrice\",\"type\":\"uint256\"}],\"name\":\"createUser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_questionID\",\"type\":\"bytes32\"}],\"name\":\"declineQuestion\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"declinedQuestions\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"questionID\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"questionText\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"boardID\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"priorityBonus\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"askUser\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"answerUser\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isAnswered\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getUnansweredQuestions\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"questionID\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"questionText\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"boardID\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"priorityBonus\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"askUser\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"answerUser\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isAnswered\",\"type\":\"bool\"}],\"internalType\":\"struct BuyAnAnswer.Question[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"getUser\",\"outputs\":[{\"components\":[{\"internalType\":\"address payable\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"username\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"email\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"password\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"boardID\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"headline\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"bio\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"minimumPrice\",\"type\":\"uint256\"}],\"internalType\":\"struct BuyAnAnswer.User\",\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"getUserAnsweredQuestions\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"questionID\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"questionText\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"boardID\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"priorityBonus\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"askUser\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"answerUser\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isAnswered\",\"type\":\"bool\"}],\"internalType\":\"struct BuyAnAnswer.Question\",\"name\":\"question\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"answerText\",\"type\":\"string\"}],\"internalType\":\"struct BuyAnAnswer.Answer[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"getUserBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"getUserBio\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"getUserBoardID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_username\",\"type\":\"string\"}],\"name\":\"getUserByUsername\",\"outputs\":[{\"components\":[{\"internalType\":\"address payable\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"username\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"email\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"password\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"boardID\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"headline\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"bio\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"minimumPrice\",\"type\":\"uint256\"}],\"internalType\":\"struct BuyAnAnswer.User\",\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"getUserDeclinedQuestions\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"questionID\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"questionText\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"boardID\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"priorityBonus\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"askUser\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"answerUser\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isAnswered\",\"type\":\"bool\"}],\"internalType\":\"struct BuyAnAnswer.Question[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"getUserHeadline\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"getUserHistory\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"questionID\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"questionText\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"boardID\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"priorityBonus\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"askUser\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"answerUser\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isAnswered\",\"type\":\"bool\"}],\"internalType\":\"struct BuyAnAnswer.Question[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"getUserMinimumPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"getUserReceivedQuestions\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"questionID\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"questionText\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"boardID\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"priorityBonus\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"askUser\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"answerUser\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isAnswered\",\"type\":\"bool\"}],\"internalType\":\"struct BuyAnAnswer.Question[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"history\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"questionID\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"questionText\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"boardID\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"priorityBonus\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"askUser\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"answerUser\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isAnswered\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_questionID\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_answerText\",\"type\":\"string\"}],\"name\":\"postAnswer\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_questionText\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_priorityBonus\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"_answerUser\",\"type\":\"address\"}],\"name\":\"postQuestion\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"questions\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"questionID\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"questionText\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"boardID\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"priorityBonus\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"askUser\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"answerUser\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isAnswered\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"receivedQuestions\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"questionID\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"questionText\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"boardID\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"priorityBonus\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"askUser\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"answerUser\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isAnswered\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"unansweredQuestions\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"questionID\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"questionText\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"boardID\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"priorityBonus\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"askUser\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"answerUser\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isAnswered\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_headline\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_bio\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_minimumPrice\",\"type\":\"uint256\"}],\"name\":\"updateUser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"users\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"username\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"email\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"password\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"boardID\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"headline\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"bio\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"minimumPrice\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"usersByUsername\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"username\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"email\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"password\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"boardID\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"headline\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"bio\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"minimumPrice\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/jayanthkomarraju/Documents/GitHub/buyananswer.eth/contracts/BuyAnAnswer.sol\":\"BuyAnAnswer\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/jayanthkomarraju/Documents/GitHub/buyananswer.eth/contracts/BuyAnAnswer.sol\":{\"keccak256\":\"0xb2e7678f5c7d29591c8d3ab467c58735a73a658f0d98d703121eb659201c753b\",\"urls\":[\"bzz-raw://82e92f5a6e1e90f5987c3e8d0b67313736a0d177a283448fba65d28706b7f35a\",\"dweb:/ipfs/QmaxniwZJuKMynTk4KnPLpQNpijBrM4ZRBgMtxr2HxmRRJ\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "sourceMap": "99:9823:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;99:9823:0;;;;;;;",
  "deployedSourceMap": "99:9823:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8909:165;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8909:165:0;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;3901:1399;;;;;;;;;;;;;;;;:::i;:::-;;7948:177;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7948:177:0;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;3573:274;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3573:274:0;;;;;;;;;;;;;;;;:::i;:::-;;5348:958;;;;;;;;;;;;;;;;:::i;:::-;;1677:53;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1677:53:0;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;8156:155;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8156:155:0;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;7025:159;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7025:159:0;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;7727:179;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7727:179:0;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;8719:153;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8719:153:0;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1452:46;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1452:46:0;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;3388:116;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3388:116:0;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;7335:129;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7335:129:0;;;:::i;:::-;;;;;;;;;;;;;;;;1504:45;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1504:45:0;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1616:55;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1616:55:0;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;7506:179;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7506:179:0;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1736:45;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1736:45:0;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;9756:164;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9756:164:0;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1409:37;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1409:37:0;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;6359:635;;;;;;;;;;;;;;;;:::i;:::-;;8342:155;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8342:155:0;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;8529:163;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8529:163:0;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2261:1104;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2261:1104:0;;;;;;;;;;;;;;;;:::i;:::-;;7238:57;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7238:57:0;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1555:55;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1555:55:0;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;8909:165;9005:7;9035:5;:19;9041:12;9035:19;;;;;;;;;;;;;;;:32;;;9028:39;;8909:165;;;:::o;3901:1399::-;4060:27;;:::i;:::-;4090:598;;;;;;;;4177:13;4212:20;4220:11;4212:7;:20::i;:::-;:28;;;4299:14;4263:20;4271:11;4263:7;:20::i;:::-;:33;;;:50;4336:14;4372:10;4404:11;4139:294;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;4139:294:0;;;4112:335;;;;;;4090:598;;;;4461:13;4090:598;;;;4488:20;4496:11;4488:7;:20::i;:::-;:28;;;4090:598;;;;4567:14;4531:20;4539:11;4531:7;:20::i;:::-;:33;;;:50;4090:598;;;;4596:14;4090:598;;;;4624:10;4090:598;;;;;;4648:11;4090:598;;;;;;4673:5;4090:598;;;;;4060:628;;4698:7;:19;4706:10;4698:19;;;;;;;;;;;;;;;4723:11;4698:37;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;4698:37:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4745:7;:20;4753:11;4745:20;;;;;;;;;;;;;;;4771:11;4745:38;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;4745:38:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4793:19;:32;4813:11;4793:32;;;;;;;;;;;;;;;4831:11;4793:50;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;4793:50:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5224:11;4853:9;:368;4941:13;4976:20;4984:11;4976:7;:20::i;:::-;:28;;;5063:14;5027:20;5035:11;5027:7;:20::i;:::-;:33;;;:50;5100:14;5136:10;5168:11;4903:294;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;4903:294:0;;;4876:335;;;;;;4853:368;;;;;;;;;;;:382;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5245:17;:30;5263:11;5245:30;;;;;;;;;;;;;;;5281:11;5245:48;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;5245:48:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3901:1399;;;;:::oo;3573:274::-;3737:9;3708:5;:17;3714:10;3708:17;;;;;;;;;;;;;;;:26;;:38;;;;;;;;;;;;:::i;:::-;;3780:4;3756:5;:17;3762:10;3756:17;;;;;;;;;;;;;;;:21;;:28;;;;;;;;;;;;:::i;:::-;;3827:13;3794:5;:17;3800:10;3794:17;;;;;;;;;;;;;;;:30;;:46;;;;3573:274;;;:::o;5348:958::-;5461:24;;:::i;:::-;5500:9;5512:1;5500:13;;5495:254;5519:17;:29;5537:10;5519:29;;;;;;;;;;;;;;;:36;;;;5515:1;:40;5495:254;;;5627:11;5580:17;:29;5598:10;5580:29;;;;;;;;;;;;;;;5610:1;5580:32;;;;;;;;;;;;;;;;;;:43;;;:58;5576:163;;;5669:17;:29;5687:10;5669:29;;;;;;;;;;;;;;;5699:1;5669:32;;;;;;;;;;;;;;;;;;5658:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5719:5;;5576:163;5557:3;;;;;;;5495:254;;;;5758:23;;:::i;:::-;5784:29;;;;;;;;5791:8;5784:29;;;;5801:11;5784:29;;;5758:55;;5824:17;:29;5842:10;5824:29;;;;;;;;;;;;;;;5859:9;5824:45;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;5824:45:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;5902:4;5880:8;:19;;:26;;;;;;;;;;;5938:10;5916:8;:19;;:32;;;;;;;;;;;5958:7;:25;5966:8;:16;;;5958:25;;;;;;;;;;;;;;;5989:8;5958:40;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;5958:40:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6008:7;:28;6016:8;:19;;;6008:28;;;;;;;;;;;;;;;6042:8;6008:43;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;6008:43:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5348:958;;;;:::o;1677:53::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;8156:155::-;8247:7;8277:5;:19;8283:12;8277:19;;;;;;;;;;;;;;;:27;;;8270:34;;8156:155;;;:::o;7025:159::-;7116:17;7156:7;:21;7164:12;7156:21;;;;;;;;;;;;;;;7149:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7025:159;;;:::o;7727:179::-;7828:17;7868;:31;7886:12;7868:31;;;;;;;;;;;;;;;7861:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7727:179;;;:::o;8719:153::-;8806:13;8842:5;:19;8848:12;8842:19;;;;;;;;;;;;;;;:23;;8835:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8719:153;;;:::o;1452:46::-;;;28:7:-1;22:14;169:4;160:7;156:18;147:7;143:32;204:13;198:20;246:8;231:13;224:31;316:4;307:7;303:18;296:4;287:7;283:18;273:49;350:9;335:13;328:32;378:4;366:16;;0:388;;;;1452:46:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3388:116::-;3448:11;;:::io;7335:129::-;7390:17;7426:19;:31;7446:10;7426:31;;;;;;;;;;;;;;;7419:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7335:129;:::o;1504:45::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1616:55::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7506:179::-;7607:17;7647;:31;7665:12;7647:31;;;;;;;;;;;;;;;7640:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7506:179;;;:::o;1736:45::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;9756:164::-;9853:11;;:::i;:::-;9887:15;9903:9;9887:26;;;;;;;;;;;;;;;;;;;;9880:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9756:164;;;:::oo;6359:635::-;6430:24;;:::i;:::-;6469:9;6481:1;6469:13;;6464:254;6488:17;:29;6506:10;6488:29;;;;;;;;;;;;;;;:36;;;;6484:1;:40;6464:254;;;6596:11;6549:17;:29;6567:10;6549:29;;;;;;;;;;;;;;;6579:1;6549:32;;;;;;;;;;;;;;;;;;:43;;;:58;6545:163;;;6638:17;:29;6656:10;6638:29;;;;;;;;;;;;;;;6668:1;6638:32;;;;;;;;;;;;;;;;;;6627:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6688:5;;6545:163;6526:3;;;;;;;6464:254;;;;6727:17;:29;6745:10;6727:29;;;;;;;;;;;;;;;6762:8;6727:44;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;6727:44:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6781:7;:25;6789:8;:16;;;6781:25;;;;;;;;;;;;;;;6812:8;6781:40;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;6781:40:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6831:7;:28;6839:8;:19;;;6831:28;;;;;;;;;;;;;;;6865:8;6831:43;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;6831:43:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6884:8;:19;;;:28;;:44;6913:8;:14;;;6884:44;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6884:44:0;6938:8;:16;;;:25;;:49;6964:8;:22;;;6938:49;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6938:49:0;6359:635;;:::o;8342:155::-;8433:7;8463:5;:19;8469:12;8463:19;;;;;;;;;;;;;;;:27;;;8456:34;;8342:155;;;:::o;8529:163::-;8621:13;8657:5;:19;8663:12;8657:19;;;;;;;;;;;;;;;:28;;8650:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8529:163;;;:::o;2261:1104::-;2853:16;2872:32;2886:9;2897:6;2872:13;:32::i;:::-;2853:51;;2915:27;2945:10;2915:40;;2966:19;;:::i;:::-;2988:287;;;;;;;;3006:11;2988:287;;;;;;3031:9;2988:287;;;;3054:5;2988:287;;;;3073:6;2988:287;;;;3093:9;2988:287;;;;3116:1;2988:287;;;;3131:8;2988:287;;;;3153:9;2988:287;;;;3176:4;2988:287;;;;3194:13;2988:287;;;2966:309;;3305:7;3285:5;:17;3291:10;3285:17;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3351:7;3322:15;3338:9;3322:26;;;;;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2261:1104;;;;;;;;;;:::o;7238:57::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1555:55::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2062:173::-;2159:7;2216:5;2223:3;2199:28;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2199:28:0;;;2189:39;;;;;;2182:46;;2062:173;;;;:::o;99:9823::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130:-1:-;;85:6;72:20;63:29;;97:33;124:5;97:33;;;57:78;;;;;142:146;;230:6;217:20;208:29;;242:41;277:5;242:41;;;202:86;;;;;295:130;;375:6;362:20;353:29;;387:33;414:5;387:33;;;347:78;;;;;433:434;;531:3;524:4;516:6;512:17;508:27;498:2;;549:1;546;539:12;498:2;586:6;573:20;608:61;623:45;661:6;623:45;;;608:61;;;599:70;;689:6;682:5;675:21;725:4;717:6;713:17;758:4;751:5;747:16;793:3;784:6;779:3;775:16;772:25;769:2;;;810:1;807;800:12;769:2;820:41;854:6;849:3;844;820:41;;;491:376;;;;;;;;876:442;;978:3;971:4;963:6;959:17;955:27;945:2;;996:1;993;986:12;945:2;1033:6;1020:20;1055:65;1070:49;1112:6;1070:49;;;1055:65;;;1046:74;;1140:6;1133:5;1126:21;1176:4;1168:6;1164:17;1209:4;1202:5;1198:16;1244:3;1235:6;1230:3;1226:16;1223:25;1220:2;;;1261:1;1258;1251:12;1220:2;1271:41;1305:6;1300:3;1295;1271:41;;;938:380;;;;;;;;1326:130;;1406:6;1393:20;1384:29;;1418:33;1445:5;1418:33;;;1378:78;;;;;1463:241;;1567:2;1555:9;1546:7;1542:23;1538:32;1535:2;;;1583:1;1580;1573:12;1535:2;1618:1;1635:53;1680:7;1671:6;1660:9;1656:22;1635:53;;;1625:63;;1597:97;1529:175;;;;;1711:366;;;1832:2;1820:9;1811:7;1807:23;1803:32;1800:2;;;1848:1;1845;1838:12;1800:2;1883:1;1900:53;1945:7;1936:6;1925:9;1921:22;1900:53;;;1890:63;;1862:97;1990:2;2008:53;2053:7;2044:6;2033:9;2029:22;2008:53;;;1998:63;;1969:98;1794:283;;;;;;2084:241;;2188:2;2176:9;2167:7;2163:23;2159:32;2156:2;;;2204:1;2201;2194:12;2156:2;2239:1;2256:53;2301:7;2292:6;2281:9;2277:22;2256:53;;;2246:63;;2218:97;2150:175;;;;;2332:472;;;2463:2;2451:9;2442:7;2438:23;2434:32;2431:2;;;2479:1;2476;2469:12;2431:2;2514:1;2531:53;2576:7;2567:6;2556:9;2552:22;2531:53;;;2521:63;;2493:97;2649:2;2638:9;2634:18;2621:32;2673:18;2665:6;2662:30;2659:2;;;2705:1;2702;2695:12;2659:2;2725:63;2780:7;2771:6;2760:9;2756:22;2725:63;;;2715:73;;2600:194;2425:379;;;;;;2811:339;;2921:2;2909:9;2900:7;2896:23;2892:32;2889:2;;;2937:1;2934;2927:12;2889:2;3000:1;2989:9;2985:17;2972:31;3023:18;3015:6;3012:30;3009:2;;;3055:1;3052;3045:12;3009:2;3075:59;3126:7;3117:6;3106:9;3102:22;3075:59;;;3065:69;;2951:189;2883:267;;;;;3157:347;;3271:2;3259:9;3250:7;3246:23;3242:32;3239:2;;;3287:1;3284;3277:12;3239:2;3350:1;3339:9;3335:17;3322:31;3373:18;3365:6;3362:30;3359:2;;;3405:1;3402;3395:12;3359:2;3425:63;3480:7;3471:6;3460:9;3456:22;3425:63;;;3415:73;;3301:193;3233:271;;;;;3511:1631;;;;;;;;3777:3;3765:9;3756:7;3752:23;3748:33;3745:2;;;3794:1;3791;3784:12;3745:2;3857:1;3846:9;3842:17;3829:31;3880:18;3872:6;3869:30;3866:2;;;3912:1;3909;3902:12;3866:2;3932:63;3987:7;3978:6;3967:9;3963:22;3932:63;;;3922:73;;3808:193;4060:2;4049:9;4045:18;4032:32;4084:18;4076:6;4073:30;4070:2;;;4116:1;4113;4106:12;4070:2;4136:63;4191:7;4182:6;4171:9;4167:22;4136:63;;;4126:73;;4011:194;4264:2;4253:9;4249:18;4236:32;4288:18;4280:6;4277:30;4274:2;;;4320:1;4317;4310:12;4274:2;4340:63;4395:7;4386:6;4375:9;4371:22;4340:63;;;4330:73;;4215:194;4468:2;4457:9;4453:18;4440:32;4492:18;4484:6;4481:30;4478:2;;;4524:1;4521;4514:12;4478:2;4544:63;4599:7;4590:6;4579:9;4575:22;4544:63;;;4534:73;;4419:194;4672:3;4661:9;4657:19;4644:33;4697:18;4689:6;4686:30;4683:2;;;4729:1;4726;4719:12;4683:2;4749:63;4804:7;4795:6;4784:9;4780:22;4749:63;;;4739:73;;4623:195;4877:3;4866:9;4862:19;4849:33;4902:18;4894:6;4891:30;4888:2;;;4934:1;4931;4924:12;4888:2;4954:63;5009:7;5000:6;4989:9;4985:22;4954:63;;;4944:73;;4828:195;5054:3;5073:53;5118:7;5109:6;5098:9;5094:22;5073:53;;;5063:63;;5033:99;3739:1403;;;;;;;;;;;5149:703;;;;5307:2;5295:9;5286:7;5282:23;5278:32;5275:2;;;5323:1;5320;5313:12;5275:2;5386:1;5375:9;5371:17;5358:31;5409:18;5401:6;5398:30;5395:2;;;5441:1;5438;5431:12;5395:2;5461:63;5516:7;5507:6;5496:9;5492:22;5461:63;;;5451:73;;5337:193;5589:2;5578:9;5574:18;5561:32;5613:18;5605:6;5602:30;5599:2;;;5645:1;5642;5635:12;5599:2;5665:63;5720:7;5711:6;5700:9;5696:22;5665:63;;;5655:73;;5540:194;5765:2;5783:53;5828:7;5819:6;5808:9;5804:22;5783:53;;;5773:63;;5744:98;5269:583;;;;;;5859:613;;;;6015:2;6003:9;5994:7;5990:23;5986:32;5983:2;;;6031:1;6028;6021:12;5983:2;6094:1;6083:9;6079:17;6066:31;6117:18;6109:6;6106:30;6103:2;;;6149:1;6146;6139:12;6103:2;6169:63;6224:7;6215:6;6204:9;6200:22;6169:63;;;6159:73;;6045:193;6269:2;6287:53;6332:7;6323:6;6312:9;6308:22;6287:53;;;6277:63;;6248:98;6377:2;6395:61;6448:7;6439:6;6428:9;6424:22;6395:61;;;6385:71;;6356:106;5977:495;;;;;;6480:229;;6617:86;6699:3;6691:6;6617:86;;;6603:100;;6596:113;;;;;6718:237;;6859:90;6945:3;6937:6;6859:90;;;6845:104;;6838:117;;;;;6963:127;7052:32;7078:5;7052:32;;;7047:3;7040:45;7034:56;;;7097:137;7196:32;7222:5;7196:32;;;7191:3;7184:45;7178:56;;;7241:184;7358:61;7386:32;7412:5;7386:32;;;7358:61;;;7353:3;7346:74;7340:85;;;7499:992;;7680:72;7746:5;7680:72;;;7765:104;7862:6;7857:3;7765:104;;;7758:111;;7892:3;7934:4;7926:6;7922:17;7917:3;7913:27;7961:74;8029:5;7961:74;;;8055:7;8083:1;8068:384;8093:6;8090:1;8087:13;8068:384;;;8155:9;8149:4;8145:20;8140:3;8133:33;8200:6;8194:13;8222:100;8317:4;8302:13;8222:100;;;8214:108;;8339:78;8410:6;8339:78;;;8329:88;;8440:4;8435:3;8431:14;8424:21;;8125:327;8115:1;8112;8108:9;8103:14;;8068:384;;;8072:14;8465:4;8458:11;;8482:3;8475:10;;7659:832;;;;;;;;;;8570:1008;;8755:74;8823:5;8755:74;;;8842:106;8941:6;8936:3;8842:106;;;8835:113;;8971:3;9013:4;9005:6;9001:17;8996:3;8992:27;9040:76;9110:5;9040:76;;;9136:7;9164:1;9149:390;9174:6;9171:1;9168:13;9149:390;;;9236:9;9230:4;9226:20;9221:3;9214:33;9281:6;9275:13;9303:104;9402:4;9387:13;9303:104;;;9295:112;;9424:80;9497:6;9424:80;;;9414:90;;9527:4;9522:3;9518:14;9511:21;;9206:333;9196:1;9193;9189:9;9184:14;;9149:390;;;9153:14;9552:4;9545:11;;9569:3;9562:10;;8734:844;;;;;;;;;;9586:94;9653:21;9668:5;9653:21;;;9648:3;9641:34;9635:45;;;9687:104;9764:21;9779:5;9764:21;;;9759:3;9752:34;9746:45;;;9798:103;9871:24;9889:5;9871:24;;;9866:3;9859:37;9853:48;;;9908:113;9991:24;10009:5;9991:24;;;9986:3;9979:37;9973:48;;;10028:152;10129:45;10149:24;10167:5;10149:24;;;10129:45;;;10124:3;10117:58;10111:69;;;10187:347;;10299:39;10332:5;10299:39;;;10350:71;10414:6;10409:3;10350:71;;;10343:78;;10426:52;10471:6;10466:3;10459:4;10452:5;10448:16;10426:52;;;10499:29;10521:6;10499:29;;;10494:3;10490:39;10483:46;;10279:255;;;;;;10541:360;;10671:39;10704:5;10671:39;;;10722:89;10804:6;10799:3;10722:89;;;10715:96;;10816:52;10861:6;10856:3;10849:4;10842:5;10838:16;10816:52;;;10889:6;10884:3;10880:16;10873:23;;10651:250;;;;;;10908:319;;11006:35;11035:5;11006:35;;;11053:61;11107:6;11102:3;11053:61;;;11046:68;;11119:52;11164:6;11159:3;11152:4;11145:5;11141:16;11119:52;;;11192:29;11214:6;11192:29;;;11187:3;11183:39;11176:46;;10986:241;;;;;;11234:339;;11342:35;11371:5;11342:35;;;11389:71;11453:6;11448:3;11389:71;;;11382:78;;11465:52;11510:6;11505:3;11498:4;11491:5;11487:16;11465:52;;;11538:29;11560:6;11538:29;;;11533:3;11529:39;11522:46;;11322:251;;;;;;11641:657;;11772:4;11767:3;11763:14;11859:4;11852:5;11848:16;11842:23;11911:3;11905:4;11901:14;11894:4;11889:3;11885:14;11878:38;11931:97;12023:4;12009:12;11931:97;;;11923:105;;11792:248;12119:4;12112:5;12108:16;12102:23;12171:3;12165:4;12161:14;12154:4;12149:3;12145:14;12138:38;12191:69;12255:4;12241:12;12191:69;;;12183:77;;12050:222;12289:4;12282:11;;11745:553;;;;;;12370:1545;;12505:6;12500:3;12496:16;12596:4;12589:5;12585:16;12579:23;12608:63;12665:4;12660:3;12656:14;12642:12;12608:63;;;12527:150;12758:4;12751:5;12747:16;12741:23;12810:3;12804:4;12800:14;12793:4;12788:3;12784:14;12777:38;12830:69;12894:4;12880:12;12830:69;;;12822:77;;12687:224;12987:4;12980:5;12976:16;12970:23;12999:63;13056:4;13051:3;13047:14;13033:12;12999:63;;;12921:147;13142:4;13135:5;13131:16;13125:23;13154:63;13211:4;13206:3;13202:14;13188:12;13154:63;;;13078:145;13305:4;13298:5;13294:16;13288:23;13317:63;13374:4;13369:3;13365:14;13351:12;13317:63;;;13233:153;13462:4;13455:5;13451:16;13445:23;13474:79;13547:4;13542:3;13538:14;13524:12;13474:79;;;13396:163;13638:4;13631:5;13627:16;13621:23;13650:79;13723:4;13718:3;13714:14;13700:12;13650:79;;;13569:166;13814:4;13807:5;13803:16;13797:23;13826:57;13877:4;13872:3;13868:14;13854:12;13826:57;;;13745:144;13906:4;13899:11;;12478:1437;;;;;;13987:1555;;14132:6;14127:3;14123:16;14223:4;14216:5;14212:16;14206:23;14235:63;14292:4;14287:3;14283:14;14269:12;14235:63;;;14154:150;14385:4;14378:5;14374:16;14368:23;14437:3;14431:4;14427:14;14420:4;14415:3;14411:14;14404:38;14457:69;14521:4;14507:12;14457:69;;;14449:77;;14314:224;14614:4;14607:5;14603:16;14597:23;14626:63;14683:4;14678:3;14674:14;14660:12;14626:63;;;14548:147;14769:4;14762:5;14758:16;14752:23;14781:63;14838:4;14833:3;14829:14;14815:12;14781:63;;;14705:145;14932:4;14925:5;14921:16;14915:23;14944:63;15001:4;14996:3;14992:14;14978:12;14944:63;;;14860:153;15089:4;15082:5;15078:16;15072:23;15101:79;15174:4;15169:3;15165:14;15151:12;15101:79;;;15023:163;15265:4;15258:5;15254:16;15248:23;15277:79;15350:4;15345:3;15341:14;15327:12;15277:79;;;15196:166;15441:4;15434:5;15430:16;15424:23;15453:57;15504:4;15499:3;15495:14;15481:12;15453:57;;;15372:144;15533:4;15526:11;;14105:1437;;;;;;15606:2208;;15747:6;15742:3;15738:16;15839:4;15832:5;15828:16;15822:23;15851:79;15924:4;15919:3;15915:14;15901:12;15851:79;;;15769:167;16013:4;16006:5;16002:16;15996:23;16065:3;16059:4;16055:14;16048:4;16043:3;16039:14;16032:38;16085:69;16149:4;16135:12;16085:69;;;16077:77;;15946:220;16239:4;16232:5;16228:16;16222:23;16291:3;16285:4;16281:14;16274:4;16269:3;16265:14;16258:38;16311:69;16375:4;16361:12;16311:69;;;16303:77;;16176:216;16466:4;16459:5;16455:16;16449:23;16518:3;16512:4;16508:14;16501:4;16496:3;16492:14;16485:38;16538:69;16602:4;16588:12;16538:69;;;16530:77;;16402:217;16696:4;16689:5;16685:16;16679:23;16748:3;16742:4;16738:14;16731:4;16726:3;16722:14;16715:38;16768:69;16832:4;16818:12;16768:69;;;16760:77;;16629:220;16925:4;16918:5;16914:16;16908:23;16937:63;16994:4;16989:3;16985:14;16971:12;16937:63;;;16859:147;17082:4;17075:5;17071:16;17065:23;17094:63;17151:4;17146:3;17142:14;17128:12;17094:63;;;17016:147;17240:4;17233:5;17229:16;17223:23;17292:3;17286:4;17282:14;17275:4;17270:3;17266:14;17259:38;17312:69;17376:4;17362:12;17312:69;;;17304:77;;17173:220;17465:6;17458:5;17454:18;17448:25;17521:3;17515:4;17511:14;17502:6;17497:3;17493:16;17486:40;17541:69;17605:4;17591:12;17541:69;;;17533:77;;17403:219;17703:6;17696:5;17692:18;17686:25;17717:65;17774:6;17769:3;17765:16;17751:12;17717:65;;;17632:156;17805:4;17798:11;;15720:2094;;;;;;17821:103;17894:24;17912:5;17894:24;;;17889:3;17882:37;17876:48;;;17931:113;18014:24;18032:5;18014:24;;;18009:3;18002:37;17996:48;;;18051:152;18152:45;18172:24;18190:5;18172:24;;;18152:45;;;18147:3;18140:58;18134:69;;;18210:266;;18356:95;18447:3;18438:6;18356:95;;;18349:102;;18468:3;18461:10;;18337:139;;;;;18483:1025;;18801:95;18892:3;18883:6;18801:95;;;18794:102;;18907:75;18978:3;18969:6;18907:75;;;19004:2;18999:3;18995:12;18988:19;;19018:75;19089:3;19080:6;19018:75;;;19115:2;19110:3;19106:12;19099:19;;19129:75;19200:3;19191:6;19129:75;;;19226:2;19221:3;19217:12;19210:19;;19240:91;19327:3;19318:6;19240:91;;;19353:2;19348:3;19344:12;19337:19;;19367:91;19454:3;19445:6;19367:91;;;19480:2;19475:3;19471:12;19464:19;;19500:3;19493:10;;18782:726;;;;;;;;;;19515:427;;19709:95;19800:3;19791:6;19709:95;;;19702:102;;19822:95;19913:3;19904:6;19822:95;;;19815:102;;19934:3;19927:10;;19690:252;;;;;;19949:1731;;20431:3;20420:9;20416:19;20408:27;;20446:87;20530:1;20519:9;20515:17;20506:6;20446:87;;;20581:9;20575:4;20571:20;20566:2;20555:9;20551:18;20544:48;20606:74;20675:4;20666:6;20606:74;;;20598:82;;20728:9;20722:4;20718:20;20713:2;20702:9;20698:18;20691:48;20753:74;20822:4;20813:6;20753:74;;;20745:82;;20875:9;20869:4;20865:20;20860:2;20849:9;20845:18;20838:48;20900:74;20969:4;20960:6;20900:74;;;20892:82;;21023:9;21017:4;21013:20;21007:3;20996:9;20992:19;20985:49;21048:74;21117:4;21108:6;21048:74;;;21040:82;;21133:73;21201:3;21190:9;21186:19;21177:6;21133:73;;;21217;21285:3;21274:9;21270:19;21261:6;21217:73;;;21339:9;21333:4;21329:20;21323:3;21312:9;21308:19;21301:49;21364:74;21433:4;21424:6;21364:74;;;21356:82;;21487:9;21481:4;21477:20;21471:3;21460:9;21456:19;21449:49;21512:74;21581:4;21572:6;21512:74;;;21504:82;;21597:73;21665:3;21654:9;21650:19;21641:6;21597:73;;;20402:1278;;;;;;;;;;;;;;21687:433;;21891:2;21880:9;21876:18;21868:26;;21941:9;21935:4;21931:20;21927:1;21916:9;21912:17;21905:47;21966:144;22105:4;22096:6;21966:144;;;21958:152;;21862:258;;;;;22127:441;;22335:2;22324:9;22320:18;22312:26;;22385:9;22379:4;22375:20;22371:1;22360:9;22356:17;22349:47;22410:148;22553:4;22544:6;22410:148;;;22402:156;;22306:262;;;;;22575:213;;22693:2;22682:9;22678:18;22670:26;;22707:71;22775:1;22764:9;22760:17;22751:6;22707:71;;;22664:124;;;;;22795:1127;;23151:3;23140:9;23136:19;23128:27;;23166:71;23234:1;23223:9;23219:17;23210:6;23166:71;;;23285:9;23279:4;23275:20;23270:2;23259:9;23255:18;23248:48;23310:74;23379:4;23370:6;23310:74;;;23302:82;;23395:72;23463:2;23452:9;23448:18;23439:6;23395:72;;;23478;23546:2;23535:9;23531:18;23522:6;23478:72;;;23561:73;23629:3;23618:9;23614:19;23605:6;23561:73;;;23645:89;23729:3;23718:9;23714:19;23705:6;23645:89;;;23745;23829:3;23818:9;23814:19;23805:6;23745:89;;;23845:67;23907:3;23896:9;23892:19;23883:6;23845:67;;;23122:800;;;;;;;;;;;;23929:301;;24067:2;24056:9;24052:18;24044:26;;24117:9;24111:4;24107:20;24103:1;24092:9;24088:17;24081:47;24142:78;24215:4;24206:6;24142:78;;;24134:86;;24038:192;;;;;24237:540;;24443:2;24432:9;24428:18;24420:26;;24493:9;24487:4;24483:20;24479:1;24468:9;24464:17;24457:47;24518:102;24615:4;24606:6;24518:102;;;24510:110;;24668:9;24662:4;24658:20;24653:2;24642:9;24638:18;24631:48;24693:74;24762:4;24753:6;24693:74;;;24685:82;;24414:363;;;;;;24784:341;;24942:2;24931:9;24927:18;24919:26;;24992:9;24986:4;24982:20;24978:1;24967:9;24963:17;24956:47;25017:98;25110:4;25101:6;25017:98;;;25009:106;;24913:212;;;;;25132:213;;25250:2;25239:9;25235:18;25227:26;;25264:71;25332:1;25321:9;25317:17;25308:6;25264:71;;;25221:124;;;;;25352:256;;25414:2;25408:9;25398:19;;25452:4;25444:6;25440:17;25551:6;25539:10;25536:22;25515:18;25503:10;25500:34;25497:62;25494:2;;;25572:1;25569;25562:12;25494:2;25592:10;25588:2;25581:22;25392:216;;;;;25615:318;;25755:18;25747:6;25744:30;25741:2;;;25787:1;25784;25777:12;25741:2;25854:4;25850:9;25843:4;25835:6;25831:17;25827:33;25819:41;;25918:4;25912;25908:15;25900:23;;25678:255;;;;25940:322;;26084:18;26076:6;26073:30;26070:2;;;26116:1;26113;26106:12;26070:2;26183:4;26179:9;26172:4;26164:6;26160:17;26156:33;26148:41;;26247:4;26241;26237:15;26229:23;;26007:255;;;;26269:169;;26373:3;26365:11;;26411:4;26406:3;26402:14;26394:22;;26359:79;;;;26445:171;;26551:3;26543:11;;26589:4;26584:3;26580:14;26572:22;;26537:79;;;;26623:155;;26750:5;26744:12;26734:22;;26715:63;;;;26785:157;;26914:5;26908:12;26898:22;;26879:63;;;;26949:118;;27039:5;27033:12;27023:22;;27004:63;;;;27074:122;;27168:5;27162:12;27152:22;;27133:63;;;;27203:126;;27319:4;27314:3;27310:14;27302:22;;27296:33;;;;27336:128;;27454:4;27449:3;27445:14;27437:22;;27431:33;;;;27472:196;;27620:6;27615:3;27608:19;27657:4;27652:3;27648:14;27633:29;;27601:67;;;;;27677:198;;27827:6;27822:3;27815:19;27864:4;27859:3;27855:14;27840:29;;27808:67;;;;;27884:153;;27989:6;27984:3;27977:19;28026:4;28021:3;28017:14;28002:29;;27970:67;;;;;28046:163;;28161:6;28156:3;28149:19;28198:4;28193:3;28189:14;28174:29;;28142:67;;;;;28218:145;;28354:3;28339:18;;28332:31;;;;;28371:91;;28433:24;28451:5;28433:24;;;28422:35;;28416:46;;;;28469:99;;28539:24;28557:5;28539:24;;;28528:35;;28522:46;;;;28575:85;;28648:5;28641:13;28634:21;28623:32;;28617:43;;;;28667:72;;28729:5;28718:16;;28712:27;;;;28746:121;;28819:42;28812:5;28808:54;28797:65;;28791:76;;;;28874:72;;28936:5;28925:16;;28919:27;;;;28954:145;29035:6;29030:3;29025;29012:30;29091:1;29082:6;29077:3;29073:16;29066:27;29005:94;;;;29108:268;29173:1;29180:101;29194:6;29191:1;29188:13;29180:101;;;29270:1;29265:3;29261:11;29255:18;29251:1;29246:3;29242:11;29235:39;29216:2;29213:1;29209:10;29204:15;;29180:101;;;29296:6;29293:1;29290:13;29287:2;;;29361:1;29352:6;29347:3;29343:16;29336:27;29287:2;29157:219;;;;;29384:103;;29456:26;29476:5;29456:26;;;29445:37;;29439:48;;;;29494:74;;29558:5;29547:16;;29541:27;;;;29575:89;;29639:20;29653:5;29639:20;;;29628:31;;29622:42;;;;29671:74;;29735:5;29724:16;;29718:27;;;;29752:97;;29840:2;29836:7;29831:2;29824:5;29820:14;29816:28;29806:38;;29800:49;;;;29857:94;;29935:5;29931:2;29927:14;29905:36;;29899:52;;;;29959:117;30028:24;30046:5;30028:24;;;30021:5;30018:35;30008:2;;30067:1;30064;30057:12;30008:2;30002:74;;30083:133;30160:32;30186:5;30160:32;;;30153:5;30150:43;30140:2;;30207:1;30204;30197:12;30140:2;30134:82;;30223:117;30292:24;30310:5;30292:24;;;30285:5;30282:35;30272:2;;30331:1;30328;30321:12;30272:2;30266:74;;30347:117;30416:24;30434:5;30416:24;;;30409:5;30406:35;30396:2;;30455:1;30452;30445:12;30396:2;30390:74;",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.5.0 <0.9.0;\npragma experimental ABIEncoderV2;\n\ncontract BuyAnAnswer {\n    // the front end will be able to call the following:\n    // - create user\n    // - update user\n    //  - get user by username\n    // - post question to user by choosing user address\n    // - post answer to question received by choosing questionID\n    // - decline question received by choosing questionID\n    // - get user history (all questions and answers)\n    // - get unanswered questions\n    // - get received questions\n    // - get declined questions\n    // - get answered questions\n    // - get user balance\n\n    // CREATE ALL NECESSARY EVENTS\n\n    struct User {\n        address payable userAddress;\n        string username;\n        string name;\n        string email;\n        string password;\n        uint256 balance;\n        bytes32 boardID;\n        string headline;\n        string bio;\n        uint256 minimumPrice;\n        // Social[] socials;\n    }\n\n    struct Social {\n        string platform;\n        string socialUrl;\n    }\n\n    struct Question {\n        bytes32 questionID;\n        string questionText;\n        bytes32 boardID;\n        uint256 price;\n        uint256 priorityBonus;\n        address payable askUser;\n        address payable answerUser;\n        bool isAnswered;\n    }\n\n    struct Answer {\n        Question question;\n        string answerText;\n    }\n\n    mapping(address => User) public users;\n    mapping(string => User) public usersByUsername;\n    mapping(address => Question[]) public history;\n    mapping(address => Question[]) public receivedQuestions;\n    mapping(address => Question[]) public declinedQuestions;\n    mapping(address => Answer[]) public answeredQuestions;\n    mapping(bytes32 => Question) public questions;\n\n    // create social\n\n    // function createSocial(\n    //     string memory _platform,\n    //     string memory _socialUrl\n    // ) public {\n    //     Social memory newSocial = Social(_platform, _socialUrl);\n    //     users[msg.sender].socials.push(newSocial);\n    // }\n\n    function createBoardID(string memory usrnm, string memory eml)\n        internal\n        returns (bytes32)\n    {\n        return keccak256(abi.encodePacked(usrnm, eml));\n    }\n\n    // create user\n\n    function createUser(\n        string memory _username,\n        string memory _name,\n        string memory _email,\n        string memory _password,\n        // bytes32 _boardID,\n        string memory _headline,\n        string memory _bio,\n        uint256 _minimumPrice\n    ) public // Social[] memory _socials\n    {\n        // check if there is already a user with this address\n        // if yes, throw error\n        // if no, create user\n\n        // checking if user exists\n\n        // if (users[msg.sender].username != \"\") {\n        //     revert(\"User already exists\");\n        // }\n\n        bytes32 _boardID = createBoardID(_username, _email);\n\n        address payable userAddress = msg.sender;\n\n        User memory newUser = User(\n            userAddress,\n            _username,\n            _name,\n            _email,\n            _password,\n            0,\n            _boardID,\n            _headline,\n            _bio,\n            _minimumPrice\n            // _socials,\n            // new Question[](0)\n        );\n        users[msg.sender] = newUser;\n        usersByUsername[_username] = newUser;\n    }\n\n    // get user\n\n    function getUser(address _userAddress) public view returns (User memory) {\n        return users[_userAddress];\n    }\n\n    // update user (only update headline, bio, minimum price)\n\n    function updateUser(\n        string memory _headline,\n        string memory _bio,\n        uint256 _minimumPrice\n    ) public {\n        users[msg.sender].headline = _headline;\n        users[msg.sender].bio = _bio;\n        users[msg.sender].minimumPrice = _minimumPrice;\n    }\n\n    // post question from user to another user\n\n    function postQuestion(\n        string memory _questionText,\n        uint256 _priorityBonus,\n        address payable _answerUser\n    ) public payable {\n        Question memory newQuestion = Question(\n            keccak256(\n                abi.encodePacked(\n                    _questionText,\n                    getUser(_answerUser).boardID,\n                    (getUser(_answerUser).minimumPrice + _priorityBonus),\n                    _priorityBonus,\n                    msg.sender,\n                    _answerUser\n                )\n            ),\n            _questionText,\n            getUser(_answerUser).boardID,\n            (getUser(_answerUser).minimumPrice + _priorityBonus),\n            _priorityBonus,\n            msg.sender,\n            _answerUser,\n            false\n        );\n        history[msg.sender].push(newQuestion);\n        history[_answerUser].push(newQuestion);\n        unansweredQuestions[_answerUser].push(newQuestion);\n        questions[\n            keccak256(\n                abi.encodePacked(\n                    _questionText,\n                    getUser(_answerUser).boardID,\n                    (getUser(_answerUser).minimumPrice + _priorityBonus),\n                    _priorityBonus,\n                    msg.sender,\n                    _answerUser\n                )\n            )\n        ] = newQuestion;\n        receivedQuestions[_answerUser].push(newQuestion);\n    }\n\n    // post answer from user to question\n\n    function postAnswer(bytes32 _questionID, string memory _answerText)\n        public\n        payable\n    {\n        Question memory question;\n        for (uint256 i = 0; i < receivedQuestions[msg.sender].length; i++) {\n            if (receivedQuestions[msg.sender][i].questionID == _questionID) {\n                question = receivedQuestions[msg.sender][i];\n                break;\n            }\n        }\n        Answer memory newAnswer = Answer(question, _answerText);\n\n        answeredQuestions[msg.sender].push(newAnswer);\n\n        question.isAnswered = true;\n        question.answerUser = msg.sender;\n        history[question.askUser].push(question);\n        history[question.answerUser].push(question);\n        // question.answerUser.transfer(question.price);\n        // question.askUser.transfer(question.priorityBonus);\n        // payable(question.answerUser).transfer(question.price);\n        // payable(question.askUser).transfer(question.price);\n    }\n\n    // decline question from user to question\n\n    function declineQuestion(bytes32 _questionID) public payable {\n        Question memory question;\n        for (uint256 i = 0; i < receivedQuestions[msg.sender].length; i++) {\n            if (receivedQuestions[msg.sender][i].questionID == _questionID) {\n                question = receivedQuestions[msg.sender][i];\n                break;\n            }\n        }\n        declinedQuestions[msg.sender].push(question);\n        history[question.askUser].push(question);\n        history[question.answerUser].push(question);\n        question.answerUser.transfer(question.price);\n        question.askUser.transfer(question.priorityBonus);\n    }\n\n    // get user history\n\n    function getUserHistory(address _userAddress)\n        public\n        view\n        returns (Question[] memory)\n    {\n        return history[_userAddress];\n    }\n\n    // create mapping for unanswered questions\n\n    mapping(address => Question[]) public unansweredQuestions;\n\n    // get unanswered questions\n\n    function getUnansweredQuestions() public view returns (Question[] memory) {\n        return unansweredQuestions[msg.sender];\n    }\n\n    // get user received questions\n\n    function getUserReceivedQuestions(address _userAddress)\n        public\n        view\n        returns (Question[] memory)\n    {\n        return receivedQuestions[_userAddress];\n    }\n\n    // get user declined questions\n\n    function getUserDeclinedQuestions(address _userAddress)\n        public\n        view\n        returns (Question[] memory)\n    {\n        return declinedQuestions[_userAddress];\n    }\n\n    // get user answered questions\n\n    function getUserAnsweredQuestions(address _userAddress)\n        public\n        view\n        returns (Answer[] memory)\n    {\n        return answeredQuestions[_userAddress];\n    }\n\n    // get user balance\n\n    function getUserBalance(address _userAddress)\n        public\n        view\n        returns (uint256)\n    {\n        return users[_userAddress].balance;\n    }\n\n    // get user boardID\n\n    function getUserBoardID(address _userAddress)\n        public\n        view\n        returns (bytes32)\n    {\n        return users[_userAddress].boardID;\n    }\n\n    // get user headline\n\n    function getUserHeadline(address _userAddress)\n        public\n        view\n        returns (string memory)\n    {\n        return users[_userAddress].headline;\n    }\n\n    // get user bio\n\n    function getUserBio(address _userAddress)\n        public\n        view\n        returns (string memory)\n    {\n        return users[_userAddress].bio;\n    }\n\n    // get user minimum price\n\n    function getUserMinimumPrice(address _userAddress)\n        public\n        view\n        returns (uint256)\n    {\n        return users[_userAddress].minimumPrice;\n    }\n\n    // get user socials\n\n    // function getUserSocials(address _userAddress) public view returns (Social[] memory) {\n    //     return users[_userAddress].socials;\n    // }\n\n    // get user socials by platform\n\n    // function getUserSocialsByPlatform(address _userAddress, string memory _platform) public view returns (Social memory) {\n    //     for (uint256 i = 0; i < users[_userAddress].socials.length; i++) {\n    //         if (keccak256(abi.encodePacked(users[_userAddress].socials[i].platform)) == keccak256(abi.encodePacked(_platform))) {\n    //             return users[_userAddress].socials[i];\n    //         }\n    //     }\n    // }\n\n    // get user by username\n\n    function getUserByUsername(string memory _username)\n        public\n        view\n        returns (User memory)\n    {\n        return usersByUsername[_username];\n    }\n}\n",
  "sourcePath": "/Users/jayanthkomarraju/Documents/GitHub/buyananswer.eth/contracts/BuyAnAnswer.sol",
  "ast": {
    "absolutePath": "/Users/jayanthkomarraju/Documents/GitHub/buyananswer.eth/contracts/BuyAnAnswer.sol",
    "exportedSymbols": {
      "BuyAnAnswer": [
        639
      ]
    },
    "id": 640,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:31:0"
      },
      {
        "id": 2,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "64:33:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 639,
        "linearizedBaseContracts": [
          639
        ],
        "name": "BuyAnAnswer",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "BuyAnAnswer.User",
            "id": 23,
            "members": [
              {
                "constant": false,
                "id": 4,
                "name": "userAddress",
                "nodeType": "VariableDeclaration",
                "scope": 23,
                "src": "704:27:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 3,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "704:15:0",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 6,
                "name": "username",
                "nodeType": "VariableDeclaration",
                "scope": 23,
                "src": "741:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 5,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "741:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8,
                "name": "name",
                "nodeType": "VariableDeclaration",
                "scope": 23,
                "src": "766:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 7,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "766:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 10,
                "name": "email",
                "nodeType": "VariableDeclaration",
                "scope": 23,
                "src": "787:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 9,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "787:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 12,
                "name": "password",
                "nodeType": "VariableDeclaration",
                "scope": 23,
                "src": "809:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 11,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "809:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 14,
                "name": "balance",
                "nodeType": "VariableDeclaration",
                "scope": 23,
                "src": "834:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 13,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "834:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 16,
                "name": "boardID",
                "nodeType": "VariableDeclaration",
                "scope": 23,
                "src": "859:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 15,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "859:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 18,
                "name": "headline",
                "nodeType": "VariableDeclaration",
                "scope": 23,
                "src": "884:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 17,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "884:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 20,
                "name": "bio",
                "nodeType": "VariableDeclaration",
                "scope": 23,
                "src": "909:10:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 19,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "909:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 22,
                "name": "minimumPrice",
                "nodeType": "VariableDeclaration",
                "scope": 23,
                "src": "929:20:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 21,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "929:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "User",
            "nodeType": "StructDefinition",
            "scope": 639,
            "src": "682:303:0",
            "visibility": "public"
          },
          {
            "canonicalName": "BuyAnAnswer.Social",
            "id": 28,
            "members": [
              {
                "constant": false,
                "id": 25,
                "name": "platform",
                "nodeType": "VariableDeclaration",
                "scope": 28,
                "src": "1015:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 24,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1015:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 27,
                "name": "socialUrl",
                "nodeType": "VariableDeclaration",
                "scope": 28,
                "src": "1040:16:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 26,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1040:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Social",
            "nodeType": "StructDefinition",
            "scope": 639,
            "src": "991:72:0",
            "visibility": "public"
          },
          {
            "canonicalName": "BuyAnAnswer.Question",
            "id": 45,
            "members": [
              {
                "constant": false,
                "id": 30,
                "name": "questionID",
                "nodeType": "VariableDeclaration",
                "scope": 45,
                "src": "1095:18:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 29,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1095:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 32,
                "name": "questionText",
                "nodeType": "VariableDeclaration",
                "scope": 45,
                "src": "1123:19:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 31,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1123:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 34,
                "name": "boardID",
                "nodeType": "VariableDeclaration",
                "scope": 45,
                "src": "1152:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 33,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1152:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 36,
                "name": "price",
                "nodeType": "VariableDeclaration",
                "scope": 45,
                "src": "1177:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 35,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1177:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 38,
                "name": "priorityBonus",
                "nodeType": "VariableDeclaration",
                "scope": 45,
                "src": "1200:21:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 37,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1200:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 40,
                "name": "askUser",
                "nodeType": "VariableDeclaration",
                "scope": 45,
                "src": "1231:23:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 39,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1231:15:0",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 42,
                "name": "answerUser",
                "nodeType": "VariableDeclaration",
                "scope": 45,
                "src": "1264:26:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 41,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1264:15:0",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 44,
                "name": "isAnswered",
                "nodeType": "VariableDeclaration",
                "scope": 45,
                "src": "1300:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 43,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1300:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Question",
            "nodeType": "StructDefinition",
            "scope": 639,
            "src": "1069:253:0",
            "visibility": "public"
          },
          {
            "canonicalName": "BuyAnAnswer.Answer",
            "id": 50,
            "members": [
              {
                "constant": false,
                "id": 47,
                "name": "question",
                "nodeType": "VariableDeclaration",
                "scope": 50,
                "src": "1352:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Question_$45_storage_ptr",
                  "typeString": "struct BuyAnAnswer.Question"
                },
                "typeName": {
                  "contractScope": null,
                  "id": 46,
                  "name": "Question",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 45,
                  "src": "1352:8:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Question_$45_storage_ptr",
                    "typeString": "struct BuyAnAnswer.Question"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 49,
                "name": "answerText",
                "nodeType": "VariableDeclaration",
                "scope": 50,
                "src": "1379:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 48,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1379:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Answer",
            "nodeType": "StructDefinition",
            "scope": 639,
            "src": "1328:75:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 54,
            "name": "users",
            "nodeType": "VariableDeclaration",
            "scope": 639,
            "src": "1409:37:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$23_storage_$",
              "typeString": "mapping(address => struct BuyAnAnswer.User)"
            },
            "typeName": {
              "id": 53,
              "keyType": {
                "id": 51,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1417:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1409:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$23_storage_$",
                "typeString": "mapping(address => struct BuyAnAnswer.User)"
              },
              "valueType": {
                "contractScope": null,
                "id": 52,
                "name": "User",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 23,
                "src": "1428:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_User_$23_storage_ptr",
                  "typeString": "struct BuyAnAnswer.User"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 58,
            "name": "usersByUsername",
            "nodeType": "VariableDeclaration",
            "scope": 639,
            "src": "1452:46:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_User_$23_storage_$",
              "typeString": "mapping(string => struct BuyAnAnswer.User)"
            },
            "typeName": {
              "id": 57,
              "keyType": {
                "id": 55,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "1460:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "1452:23:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_User_$23_storage_$",
                "typeString": "mapping(string => struct BuyAnAnswer.User)"
              },
              "valueType": {
                "contractScope": null,
                "id": 56,
                "name": "User",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 23,
                "src": "1470:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_User_$23_storage_ptr",
                  "typeString": "struct BuyAnAnswer.User"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 63,
            "name": "history",
            "nodeType": "VariableDeclaration",
            "scope": 639,
            "src": "1504:45:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Question_$45_storage_$dyn_storage_$",
              "typeString": "mapping(address => struct BuyAnAnswer.Question[])"
            },
            "typeName": {
              "id": 62,
              "keyType": {
                "id": 59,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1512:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1504:30:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Question_$45_storage_$dyn_storage_$",
                "typeString": "mapping(address => struct BuyAnAnswer.Question[])"
              },
              "valueType": {
                "baseType": {
                  "contractScope": null,
                  "id": 60,
                  "name": "Question",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 45,
                  "src": "1523:8:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Question_$45_storage_ptr",
                    "typeString": "struct BuyAnAnswer.Question"
                  }
                },
                "id": 61,
                "length": null,
                "nodeType": "ArrayTypeName",
                "src": "1523:10:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_Question_$45_storage_$dyn_storage_ptr",
                  "typeString": "struct BuyAnAnswer.Question[]"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 68,
            "name": "receivedQuestions",
            "nodeType": "VariableDeclaration",
            "scope": 639,
            "src": "1555:55:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Question_$45_storage_$dyn_storage_$",
              "typeString": "mapping(address => struct BuyAnAnswer.Question[])"
            },
            "typeName": {
              "id": 67,
              "keyType": {
                "id": 64,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1563:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1555:30:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Question_$45_storage_$dyn_storage_$",
                "typeString": "mapping(address => struct BuyAnAnswer.Question[])"
              },
              "valueType": {
                "baseType": {
                  "contractScope": null,
                  "id": 65,
                  "name": "Question",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 45,
                  "src": "1574:8:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Question_$45_storage_ptr",
                    "typeString": "struct BuyAnAnswer.Question"
                  }
                },
                "id": 66,
                "length": null,
                "nodeType": "ArrayTypeName",
                "src": "1574:10:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_Question_$45_storage_$dyn_storage_ptr",
                  "typeString": "struct BuyAnAnswer.Question[]"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 73,
            "name": "declinedQuestions",
            "nodeType": "VariableDeclaration",
            "scope": 639,
            "src": "1616:55:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Question_$45_storage_$dyn_storage_$",
              "typeString": "mapping(address => struct BuyAnAnswer.Question[])"
            },
            "typeName": {
              "id": 72,
              "keyType": {
                "id": 69,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1624:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1616:30:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Question_$45_storage_$dyn_storage_$",
                "typeString": "mapping(address => struct BuyAnAnswer.Question[])"
              },
              "valueType": {
                "baseType": {
                  "contractScope": null,
                  "id": 70,
                  "name": "Question",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 45,
                  "src": "1635:8:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Question_$45_storage_ptr",
                    "typeString": "struct BuyAnAnswer.Question"
                  }
                },
                "id": 71,
                "length": null,
                "nodeType": "ArrayTypeName",
                "src": "1635:10:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_Question_$45_storage_$dyn_storage_ptr",
                  "typeString": "struct BuyAnAnswer.Question[]"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 78,
            "name": "answeredQuestions",
            "nodeType": "VariableDeclaration",
            "scope": 639,
            "src": "1677:53:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Answer_$50_storage_$dyn_storage_$",
              "typeString": "mapping(address => struct BuyAnAnswer.Answer[])"
            },
            "typeName": {
              "id": 77,
              "keyType": {
                "id": 74,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1685:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1677:28:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Answer_$50_storage_$dyn_storage_$",
                "typeString": "mapping(address => struct BuyAnAnswer.Answer[])"
              },
              "valueType": {
                "baseType": {
                  "contractScope": null,
                  "id": 75,
                  "name": "Answer",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 50,
                  "src": "1696:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Answer_$50_storage_ptr",
                    "typeString": "struct BuyAnAnswer.Answer"
                  }
                },
                "id": 76,
                "length": null,
                "nodeType": "ArrayTypeName",
                "src": "1696:8:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_Answer_$50_storage_$dyn_storage_ptr",
                  "typeString": "struct BuyAnAnswer.Answer[]"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 82,
            "name": "questions",
            "nodeType": "VariableDeclaration",
            "scope": 639,
            "src": "1736:45:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Question_$45_storage_$",
              "typeString": "mapping(bytes32 => struct BuyAnAnswer.Question)"
            },
            "typeName": {
              "id": 81,
              "keyType": {
                "id": 79,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1744:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1736:28:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Question_$45_storage_$",
                "typeString": "mapping(bytes32 => struct BuyAnAnswer.Question)"
              },
              "valueType": {
                "contractScope": null,
                "id": 80,
                "name": "Question",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 45,
                "src": "1755:8:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Question_$45_storage_ptr",
                  "typeString": "struct BuyAnAnswer.Question"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 99,
              "nodeType": "Block",
              "src": "2172:63:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 94,
                            "name": "usrnm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84,
                            "src": "2216:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 95,
                            "name": "eml",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86,
                            "src": "2223:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 92,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 674,
                            "src": "2199:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 93,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2199:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 96,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2199:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 91,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 681,
                      "src": "2189:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 97,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2189:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 90,
                  "id": 98,
                  "nodeType": "Return",
                  "src": "2182:46:0"
                }
              ]
            },
            "documentation": null,
            "id": 100,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createBoardID",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 87,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 84,
                  "name": "usrnm",
                  "nodeType": "VariableDeclaration",
                  "scope": 100,
                  "src": "2085:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 83,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2085:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86,
                  "name": "eml",
                  "nodeType": "VariableDeclaration",
                  "scope": 100,
                  "src": "2106:17:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 85,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2106:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2084:40:0"
            },
            "returnParameters": {
              "id": 90,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 100,
                  "src": "2159:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 88,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2159:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2158:9:0"
            },
            "scope": 639,
            "src": "2062:173:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 157,
              "nodeType": "Block",
              "src": "2572:793:0",
              "statements": [
                {
                  "assignments": [
                    118
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 118,
                      "name": "_boardID",
                      "nodeType": "VariableDeclaration",
                      "scope": 157,
                      "src": "2853:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 117,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2853:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 123,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 120,
                        "name": "_username",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102,
                        "src": "2886:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 121,
                        "name": "_email",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 106,
                        "src": "2897:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 119,
                      "name": "createBoardID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100,
                      "src": "2872:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (string memory,string memory) returns (bytes32)"
                      }
                    },
                    "id": 122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2872:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2853:51:0"
                },
                {
                  "assignments": [
                    125
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 125,
                      "name": "userAddress",
                      "nodeType": "VariableDeclaration",
                      "scope": 157,
                      "src": "2915:27:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 124,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2915:15:0",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 128,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 126,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 687,
                      "src": "2945:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "2945:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2915:40:0"
                },
                {
                  "assignments": [
                    130
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 130,
                      "name": "newUser",
                      "nodeType": "VariableDeclaration",
                      "scope": 157,
                      "src": "2966:19:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_User_$23_memory_ptr",
                        "typeString": "struct BuyAnAnswer.User"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 129,
                        "name": "User",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 23,
                        "src": "2966:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$23_storage_ptr",
                          "typeString": "struct BuyAnAnswer.User"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 143,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 132,
                        "name": "userAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 125,
                        "src": "3006:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 133,
                        "name": "_username",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102,
                        "src": "3031:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 134,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 104,
                        "src": "3054:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 135,
                        "name": "_email",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 106,
                        "src": "3073:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 136,
                        "name": "_password",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 108,
                        "src": "3093:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3116:1:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "argumentTypes": null,
                        "id": 138,
                        "name": "_boardID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 118,
                        "src": "3131:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 139,
                        "name": "_headline",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 110,
                        "src": "3153:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 140,
                        "name": "_bio",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 112,
                        "src": "3176:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 141,
                        "name": "_minimumPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 114,
                        "src": "3194:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 131,
                      "name": "User",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23,
                      "src": "2988:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_User_$23_storage_ptr_$",
                        "typeString": "type(struct BuyAnAnswer.User storage pointer)"
                      }
                    },
                    "id": 142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2988:287:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_User_$23_memory",
                      "typeString": "struct BuyAnAnswer.User memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2966:309:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 144,
                        "name": "users",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54,
                        "src": "3285:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$23_storage_$",
                          "typeString": "mapping(address => struct BuyAnAnswer.User storage ref)"
                        }
                      },
                      "id": 147,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 145,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 687,
                          "src": "3291:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3291:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3285:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_User_$23_storage",
                        "typeString": "struct BuyAnAnswer.User storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 148,
                      "name": "newUser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 130,
                      "src": "3305:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_User_$23_memory_ptr",
                        "typeString": "struct BuyAnAnswer.User memory"
                      }
                    },
                    "src": "3285:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_User_$23_storage",
                      "typeString": "struct BuyAnAnswer.User storage ref"
                    }
                  },
                  "id": 150,
                  "nodeType": "ExpressionStatement",
                  "src": "3285:27:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 151,
                        "name": "usersByUsername",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "3322:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_User_$23_storage_$",
                          "typeString": "mapping(string memory => struct BuyAnAnswer.User storage ref)"
                        }
                      },
                      "id": 153,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 152,
                        "name": "_username",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102,
                        "src": "3338:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3322:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_User_$23_storage",
                        "typeString": "struct BuyAnAnswer.User storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 154,
                      "name": "newUser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 130,
                      "src": "3351:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_User_$23_memory_ptr",
                        "typeString": "struct BuyAnAnswer.User memory"
                      }
                    },
                    "src": "3322:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_User_$23_storage",
                      "typeString": "struct BuyAnAnswer.User storage ref"
                    }
                  },
                  "id": 156,
                  "nodeType": "ExpressionStatement",
                  "src": "3322:36:0"
                }
              ]
            },
            "documentation": null,
            "id": 158,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createUser",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 115,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102,
                  "name": "_username",
                  "nodeType": "VariableDeclaration",
                  "scope": 158,
                  "src": "2290:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 101,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2290:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 104,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 158,
                  "src": "2323:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 103,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2323:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 106,
                  "name": "_email",
                  "nodeType": "VariableDeclaration",
                  "scope": 158,
                  "src": "2352:20:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 105,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2352:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 108,
                  "name": "_password",
                  "nodeType": "VariableDeclaration",
                  "scope": 158,
                  "src": "2382:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 107,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2382:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 110,
                  "name": "_headline",
                  "nodeType": "VariableDeclaration",
                  "scope": 158,
                  "src": "2444:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 109,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2444:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 112,
                  "name": "_bio",
                  "nodeType": "VariableDeclaration",
                  "scope": 158,
                  "src": "2477:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 111,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2477:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 114,
                  "name": "_minimumPrice",
                  "nodeType": "VariableDeclaration",
                  "scope": 158,
                  "src": "2505:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 113,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2505:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2280:252:0"
            },
            "returnParameters": {
              "id": 116,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2572:0:0"
            },
            "scope": 639,
            "src": "2261:1104:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 169,
              "nodeType": "Block",
              "src": "3461:43:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 165,
                      "name": "users",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54,
                      "src": "3478:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$23_storage_$",
                        "typeString": "mapping(address => struct BuyAnAnswer.User storage ref)"
                      }
                    },
                    "id": 167,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 166,
                      "name": "_userAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 160,
                      "src": "3484:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3478:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_User_$23_storage",
                      "typeString": "struct BuyAnAnswer.User storage ref"
                    }
                  },
                  "functionReturnParameters": 164,
                  "id": 168,
                  "nodeType": "Return",
                  "src": "3471:26:0"
                }
              ]
            },
            "documentation": null,
            "id": 170,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUser",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 161,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 160,
                  "name": "_userAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 170,
                  "src": "3405:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 159,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3405:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3404:22:0"
            },
            "returnParameters": {
              "id": 164,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 163,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 170,
                  "src": "3448:11:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_User_$23_memory_ptr",
                    "typeString": "struct BuyAnAnswer.User"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 162,
                    "name": "User",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 23,
                    "src": "3448:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_User_$23_storage_ptr",
                      "typeString": "struct BuyAnAnswer.User"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3447:13:0"
            },
            "scope": 639,
            "src": "3388:116:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 203,
              "nodeType": "Block",
              "src": "3698:149:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 179,
                          "name": "users",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54,
                          "src": "3708:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$23_storage_$",
                            "typeString": "mapping(address => struct BuyAnAnswer.User storage ref)"
                          }
                        },
                        "id": 182,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 180,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 687,
                            "src": "3714:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3714:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3708:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$23_storage",
                          "typeString": "struct BuyAnAnswer.User storage ref"
                        }
                      },
                      "id": 183,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "headline",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18,
                      "src": "3708:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 184,
                      "name": "_headline",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 172,
                      "src": "3737:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3708:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 186,
                  "nodeType": "ExpressionStatement",
                  "src": "3708:38:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 187,
                          "name": "users",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54,
                          "src": "3756:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$23_storage_$",
                            "typeString": "mapping(address => struct BuyAnAnswer.User storage ref)"
                          }
                        },
                        "id": 190,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 188,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 687,
                            "src": "3762:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3762:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3756:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$23_storage",
                          "typeString": "struct BuyAnAnswer.User storage ref"
                        }
                      },
                      "id": 191,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "bio",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20,
                      "src": "3756:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 192,
                      "name": "_bio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 174,
                      "src": "3780:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3756:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 194,
                  "nodeType": "ExpressionStatement",
                  "src": "3756:28:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 195,
                          "name": "users",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54,
                          "src": "3794:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$23_storage_$",
                            "typeString": "mapping(address => struct BuyAnAnswer.User storage ref)"
                          }
                        },
                        "id": 198,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 196,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 687,
                            "src": "3800:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 197,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3800:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3794:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$23_storage",
                          "typeString": "struct BuyAnAnswer.User storage ref"
                        }
                      },
                      "id": 199,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "minimumPrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22,
                      "src": "3794:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 200,
                      "name": "_minimumPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 176,
                      "src": "3827:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3794:46:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 202,
                  "nodeType": "ExpressionStatement",
                  "src": "3794:46:0"
                }
              ]
            },
            "documentation": null,
            "id": 204,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateUser",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 177,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 172,
                  "name": "_headline",
                  "nodeType": "VariableDeclaration",
                  "scope": 204,
                  "src": "3602:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 171,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3602:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 174,
                  "name": "_bio",
                  "nodeType": "VariableDeclaration",
                  "scope": 204,
                  "src": "3635:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 173,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3635:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 176,
                  "name": "_minimumPrice",
                  "nodeType": "VariableDeclaration",
                  "scope": 204,
                  "src": "3663:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 175,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3663:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3592:98:0"
            },
            "returnParameters": {
              "id": 178,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3698:0:0"
            },
            "scope": 639,
            "src": "3573:274:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 311,
              "nodeType": "Block",
              "src": "4050:1250:0",
              "statements": [
                {
                  "assignments": [
                    214
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 214,
                      "name": "newQuestion",
                      "nodeType": "VariableDeclaration",
                      "scope": 311,
                      "src": "4060:27:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Question_$45_memory_ptr",
                        "typeString": "struct BuyAnAnswer.Question"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 213,
                        "name": "Question",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 45,
                        "src": "4060:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Question_$45_storage_ptr",
                          "typeString": "struct BuyAnAnswer.Question"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 255,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 219,
                                "name": "_questionText",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 206,
                                "src": "4177:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 221,
                                      "name": "_answerUser",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 210,
                                      "src": "4220:11:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      }
                                    ],
                                    "id": 220,
                                    "name": "getUser",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 170,
                                    "src": "4212:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_struct$_User_$23_memory_ptr_$",
                                      "typeString": "function (address) view returns (struct BuyAnAnswer.User memory)"
                                    }
                                  },
                                  "id": 222,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4212:20:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_User_$23_memory_ptr",
                                    "typeString": "struct BuyAnAnswer.User memory"
                                  }
                                },
                                "id": 223,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "boardID",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 16,
                                "src": "4212:28:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "components": [
                                  {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 229,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "arguments": [
                                          {
                                            "argumentTypes": null,
                                            "id": 225,
                                            "name": "_answerUser",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 210,
                                            "src": "4271:11:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address_payable",
                                              "typeString": "address payable"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address_payable",
                                              "typeString": "address payable"
                                            }
                                          ],
                                          "id": 224,
                                          "name": "getUser",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 170,
                                          "src": "4263:7:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_struct$_User_$23_memory_ptr_$",
                                            "typeString": "function (address) view returns (struct BuyAnAnswer.User memory)"
                                          }
                                        },
                                        "id": 226,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4263:20:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_User_$23_memory_ptr",
                                          "typeString": "struct BuyAnAnswer.User memory"
                                        }
                                      },
                                      "id": 227,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "minimumPrice",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 22,
                                      "src": "4263:33:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "id": 228,
                                      "name": "_priorityBonus",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 208,
                                      "src": "4299:14:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "4263:50:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 230,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "4262:52:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 231,
                                "name": "_priorityBonus",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 208,
                                "src": "4336:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 232,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 687,
                                  "src": "4372:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 233,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "4372:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 234,
                                "name": "_answerUser",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 210,
                                "src": "4404:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 217,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 674,
                                "src": "4139:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 218,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "4139:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 235,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4139:294:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 216,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 681,
                          "src": "4112:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 236,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4112:335:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 237,
                        "name": "_questionText",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 206,
                        "src": "4461:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 239,
                              "name": "_answerUser",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 210,
                              "src": "4496:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 238,
                            "name": "getUser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 170,
                            "src": "4488:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_struct$_User_$23_memory_ptr_$",
                              "typeString": "function (address) view returns (struct BuyAnAnswer.User memory)"
                            }
                          },
                          "id": 240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4488:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$23_memory_ptr",
                            "typeString": "struct BuyAnAnswer.User memory"
                          }
                        },
                        "id": 241,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "boardID",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 16,
                        "src": "4488:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 247,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 243,
                                    "name": "_answerUser",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 210,
                                    "src": "4539:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  ],
                                  "id": 242,
                                  "name": "getUser",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 170,
                                  "src": "4531:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_struct$_User_$23_memory_ptr_$",
                                    "typeString": "function (address) view returns (struct BuyAnAnswer.User memory)"
                                  }
                                },
                                "id": 244,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4531:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_User_$23_memory_ptr",
                                  "typeString": "struct BuyAnAnswer.User memory"
                                }
                              },
                              "id": 245,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "minimumPrice",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 22,
                              "src": "4531:33:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 246,
                              "name": "_priorityBonus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 208,
                              "src": "4567:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "4531:50:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 248,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "4530:52:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 249,
                        "name": "_priorityBonus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 208,
                        "src": "4596:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 250,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 687,
                          "src": "4624:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4624:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 252,
                        "name": "_answerUser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 210,
                        "src": "4648:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "66616c7365",
                        "id": 253,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4673:5:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 215,
                      "name": "Question",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45,
                      "src": "4090:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Question_$45_storage_ptr_$",
                        "typeString": "type(struct BuyAnAnswer.Question storage pointer)"
                      }
                    },
                    "id": 254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4090:598:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Question_$45_memory",
                      "typeString": "struct BuyAnAnswer.Question memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4060:628:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 261,
                        "name": "newQuestion",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 214,
                        "src": "4723:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Question_$45_memory_ptr",
                          "typeString": "struct BuyAnAnswer.Question memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Question_$45_memory_ptr",
                          "typeString": "struct BuyAnAnswer.Question memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 256,
                          "name": "history",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63,
                          "src": "4698:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Question_$45_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct BuyAnAnswer.Question storage ref[] storage ref)"
                          }
                        },
                        "id": 259,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 257,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 687,
                            "src": "4706:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 258,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4706:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4698:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Question_$45_storage_$dyn_storage",
                          "typeString": "struct BuyAnAnswer.Question storage ref[] storage ref"
                        }
                      },
                      "id": 260,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4698:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Question_$45_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct BuyAnAnswer.Question storage ref) returns (uint256)"
                      }
                    },
                    "id": 262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4698:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 263,
                  "nodeType": "ExpressionStatement",
                  "src": "4698:37:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 268,
                        "name": "newQuestion",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 214,
                        "src": "4771:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Question_$45_memory_ptr",
                          "typeString": "struct BuyAnAnswer.Question memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Question_$45_memory_ptr",
                          "typeString": "struct BuyAnAnswer.Question memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 264,
                          "name": "history",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63,
                          "src": "4745:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Question_$45_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct BuyAnAnswer.Question storage ref[] storage ref)"
                          }
                        },
                        "id": 266,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 265,
                          "name": "_answerUser",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 210,
                          "src": "4753:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4745:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Question_$45_storage_$dyn_storage",
                          "typeString": "struct BuyAnAnswer.Question storage ref[] storage ref"
                        }
                      },
                      "id": 267,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4745:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Question_$45_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct BuyAnAnswer.Question storage ref) returns (uint256)"
                      }
                    },
                    "id": 269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4745:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 270,
                  "nodeType": "ExpressionStatement",
                  "src": "4745:38:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 275,
                        "name": "newQuestion",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 214,
                        "src": "4831:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Question_$45_memory_ptr",
                          "typeString": "struct BuyAnAnswer.Question memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Question_$45_memory_ptr",
                          "typeString": "struct BuyAnAnswer.Question memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 271,
                          "name": "unansweredQuestions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 510,
                          "src": "4793:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Question_$45_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct BuyAnAnswer.Question storage ref[] storage ref)"
                          }
                        },
                        "id": 273,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 272,
                          "name": "_answerUser",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 210,
                          "src": "4813:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4793:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Question_$45_storage_$dyn_storage",
                          "typeString": "struct BuyAnAnswer.Question storage ref[] storage ref"
                        }
                      },
                      "id": 274,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4793:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Question_$45_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct BuyAnAnswer.Question storage ref) returns (uint256)"
                      }
                    },
                    "id": 276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4793:50:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 277,
                  "nodeType": "ExpressionStatement",
                  "src": "4793:50:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 278,
                        "name": "questions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82,
                        "src": "4853:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Question_$45_storage_$",
                          "typeString": "mapping(bytes32 => struct BuyAnAnswer.Question storage ref)"
                        }
                      },
                      "id": 300,
                      "indexExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 282,
                                "name": "_questionText",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 206,
                                "src": "4941:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 284,
                                      "name": "_answerUser",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 210,
                                      "src": "4984:11:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      }
                                    ],
                                    "id": 283,
                                    "name": "getUser",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 170,
                                    "src": "4976:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_struct$_User_$23_memory_ptr_$",
                                      "typeString": "function (address) view returns (struct BuyAnAnswer.User memory)"
                                    }
                                  },
                                  "id": 285,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4976:20:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_User_$23_memory_ptr",
                                    "typeString": "struct BuyAnAnswer.User memory"
                                  }
                                },
                                "id": 286,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "boardID",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 16,
                                "src": "4976:28:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "components": [
                                  {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 292,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "arguments": [
                                          {
                                            "argumentTypes": null,
                                            "id": 288,
                                            "name": "_answerUser",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 210,
                                            "src": "5035:11:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address_payable",
                                              "typeString": "address payable"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address_payable",
                                              "typeString": "address payable"
                                            }
                                          ],
                                          "id": 287,
                                          "name": "getUser",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 170,
                                          "src": "5027:7:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_struct$_User_$23_memory_ptr_$",
                                            "typeString": "function (address) view returns (struct BuyAnAnswer.User memory)"
                                          }
                                        },
                                        "id": 289,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "5027:20:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_User_$23_memory_ptr",
                                          "typeString": "struct BuyAnAnswer.User memory"
                                        }
                                      },
                                      "id": 290,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "minimumPrice",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 22,
                                      "src": "5027:33:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "id": 291,
                                      "name": "_priorityBonus",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 208,
                                      "src": "5063:14:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "5027:50:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 293,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "5026:52:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 294,
                                "name": "_priorityBonus",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 208,
                                "src": "5100:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 295,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 687,
                                  "src": "5136:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 296,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "5136:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 297,
                                "name": "_answerUser",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 210,
                                "src": "5168:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 280,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 674,
                                "src": "4903:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 281,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "4903:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 298,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4903:294:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 279,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 681,
                          "src": "4876:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 299,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4876:335:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4853:368:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Question_$45_storage",
                        "typeString": "struct BuyAnAnswer.Question storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 301,
                      "name": "newQuestion",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 214,
                      "src": "5224:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Question_$45_memory_ptr",
                        "typeString": "struct BuyAnAnswer.Question memory"
                      }
                    },
                    "src": "4853:382:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Question_$45_storage",
                      "typeString": "struct BuyAnAnswer.Question storage ref"
                    }
                  },
                  "id": 303,
                  "nodeType": "ExpressionStatement",
                  "src": "4853:382:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 308,
                        "name": "newQuestion",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 214,
                        "src": "5281:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Question_$45_memory_ptr",
                          "typeString": "struct BuyAnAnswer.Question memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Question_$45_memory_ptr",
                          "typeString": "struct BuyAnAnswer.Question memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 304,
                          "name": "receivedQuestions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68,
                          "src": "5245:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Question_$45_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct BuyAnAnswer.Question storage ref[] storage ref)"
                          }
                        },
                        "id": 306,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 305,
                          "name": "_answerUser",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 210,
                          "src": "5263:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5245:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Question_$45_storage_$dyn_storage",
                          "typeString": "struct BuyAnAnswer.Question storage ref[] storage ref"
                        }
                      },
                      "id": 307,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5245:35:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Question_$45_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct BuyAnAnswer.Question storage ref) returns (uint256)"
                      }
                    },
                    "id": 309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5245:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 310,
                  "nodeType": "ExpressionStatement",
                  "src": "5245:48:0"
                }
              ]
            },
            "documentation": null,
            "id": 312,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "postQuestion",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 211,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 206,
                  "name": "_questionText",
                  "nodeType": "VariableDeclaration",
                  "scope": 312,
                  "src": "3932:27:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 205,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3932:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 208,
                  "name": "_priorityBonus",
                  "nodeType": "VariableDeclaration",
                  "scope": 312,
                  "src": "3969:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 207,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3969:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 210,
                  "name": "_answerUser",
                  "nodeType": "VariableDeclaration",
                  "scope": 312,
                  "src": "4001:27:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 209,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4001:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3922:112:0"
            },
            "returnParameters": {
              "id": 212,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4050:0:0"
            },
            "scope": 639,
            "src": "3901:1399:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 403,
              "nodeType": "Block",
              "src": "5451:855:0",
              "statements": [
                {
                  "assignments": [
                    320
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 320,
                      "name": "question",
                      "nodeType": "VariableDeclaration",
                      "scope": 403,
                      "src": "5461:24:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Question_$45_memory_ptr",
                        "typeString": "struct BuyAnAnswer.Question"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 319,
                        "name": "Question",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 45,
                        "src": "5461:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Question_$45_storage_ptr",
                          "typeString": "struct BuyAnAnswer.Question"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 321,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5461:24:0"
                },
                {
                  "body": {
                    "id": 357,
                    "nodeType": "Block",
                    "src": "5562:187:0",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 344,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 336,
                                  "name": "receivedQuestions",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 68,
                                  "src": "5580:17:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Question_$45_storage_$dyn_storage_$",
                                    "typeString": "mapping(address => struct BuyAnAnswer.Question storage ref[] storage ref)"
                                  }
                                },
                                "id": 339,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 337,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 687,
                                    "src": "5598:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 338,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "5598:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5580:29:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Question_$45_storage_$dyn_storage",
                                  "typeString": "struct BuyAnAnswer.Question storage ref[] storage ref"
                                }
                              },
                              "id": 341,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 340,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 323,
                                "src": "5610:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5580:32:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Question_$45_storage",
                                "typeString": "struct BuyAnAnswer.Question storage ref"
                              }
                            },
                            "id": 342,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "questionID",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 30,
                            "src": "5580:43:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 343,
                            "name": "_questionID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 314,
                            "src": "5627:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "5580:58:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 356,
                        "nodeType": "IfStatement",
                        "src": "5576:163:0",
                        "trueBody": {
                          "id": 355,
                          "nodeType": "Block",
                          "src": "5640:99:0",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 352,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 345,
                                  "name": "question",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 320,
                                  "src": "5658:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Question_$45_memory_ptr",
                                    "typeString": "struct BuyAnAnswer.Question memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 346,
                                      "name": "receivedQuestions",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 68,
                                      "src": "5669:17:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Question_$45_storage_$dyn_storage_$",
                                        "typeString": "mapping(address => struct BuyAnAnswer.Question storage ref[] storage ref)"
                                      }
                                    },
                                    "id": 349,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 347,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 687,
                                        "src": "5687:3:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 348,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": null,
                                      "src": "5687:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5669:29:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Question_$45_storage_$dyn_storage",
                                      "typeString": "struct BuyAnAnswer.Question storage ref[] storage ref"
                                    }
                                  },
                                  "id": 351,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 350,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 323,
                                    "src": "5699:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "5669:32:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Question_$45_storage",
                                    "typeString": "struct BuyAnAnswer.Question storage ref"
                                  }
                                },
                                "src": "5658:43:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Question_$45_memory_ptr",
                                  "typeString": "struct BuyAnAnswer.Question memory"
                                }
                              },
                              "id": 353,
                              "nodeType": "ExpressionStatement",
                              "src": "5658:43:0"
                            },
                            {
                              "id": 354,
                              "nodeType": "Break",
                              "src": "5719:5:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 326,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 323,
                      "src": "5515:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 327,
                          "name": "receivedQuestions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68,
                          "src": "5519:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Question_$45_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct BuyAnAnswer.Question storage ref[] storage ref)"
                          }
                        },
                        "id": 330,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 328,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 687,
                            "src": "5537:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 329,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5537:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5519:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Question_$45_storage_$dyn_storage",
                          "typeString": "struct BuyAnAnswer.Question storage ref[] storage ref"
                        }
                      },
                      "id": 331,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5519:36:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5515:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 358,
                  "initializationExpression": {
                    "assignments": [
                      323
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 323,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 358,
                        "src": "5500:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 322,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5500:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 325,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 324,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5512:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5500:13:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 334,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5557:3:0",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 333,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 323,
                        "src": "5557:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 335,
                    "nodeType": "ExpressionStatement",
                    "src": "5557:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "5495:254:0"
                },
                {
                  "assignments": [
                    360
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 360,
                      "name": "newAnswer",
                      "nodeType": "VariableDeclaration",
                      "scope": 403,
                      "src": "5758:23:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Answer_$50_memory_ptr",
                        "typeString": "struct BuyAnAnswer.Answer"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 359,
                        "name": "Answer",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 50,
                        "src": "5758:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Answer_$50_storage_ptr",
                          "typeString": "struct BuyAnAnswer.Answer"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 365,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 362,
                        "name": "question",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 320,
                        "src": "5791:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Question_$45_memory_ptr",
                          "typeString": "struct BuyAnAnswer.Question memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 363,
                        "name": "_answerText",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 316,
                        "src": "5801:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Question_$45_memory_ptr",
                          "typeString": "struct BuyAnAnswer.Question memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 361,
                      "name": "Answer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50,
                      "src": "5784:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Answer_$50_storage_ptr_$",
                        "typeString": "type(struct BuyAnAnswer.Answer storage pointer)"
                      }
                    },
                    "id": 364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5784:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Answer_$50_memory",
                      "typeString": "struct BuyAnAnswer.Answer memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5758:55:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 371,
                        "name": "newAnswer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 360,
                        "src": "5859:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Answer_$50_memory_ptr",
                          "typeString": "struct BuyAnAnswer.Answer memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Answer_$50_memory_ptr",
                          "typeString": "struct BuyAnAnswer.Answer memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 366,
                          "name": "answeredQuestions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "5824:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Answer_$50_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct BuyAnAnswer.Answer storage ref[] storage ref)"
                          }
                        },
                        "id": 369,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 367,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 687,
                            "src": "5842:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 368,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5842:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5824:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Answer_$50_storage_$dyn_storage",
                          "typeString": "struct BuyAnAnswer.Answer storage ref[] storage ref"
                        }
                      },
                      "id": 370,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5824:34:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Answer_$50_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct BuyAnAnswer.Answer storage ref) returns (uint256)"
                      }
                    },
                    "id": 372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5824:45:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 373,
                  "nodeType": "ExpressionStatement",
                  "src": "5824:45:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 374,
                        "name": "question",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 320,
                        "src": "5880:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Question_$45_memory_ptr",
                          "typeString": "struct BuyAnAnswer.Question memory"
                        }
                      },
                      "id": 376,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isAnswered",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44,
                      "src": "5880:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 377,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5902:4:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "5880:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 379,
                  "nodeType": "ExpressionStatement",
                  "src": "5880:26:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 385,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 380,
                        "name": "question",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 320,
                        "src": "5916:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Question_$45_memory_ptr",
                          "typeString": "struct BuyAnAnswer.Question memory"
                        }
                      },
                      "id": 382,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "answerUser",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42,
                      "src": "5916:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 383,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 687,
                        "src": "5938:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 384,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5938:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "5916:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 386,
                  "nodeType": "ExpressionStatement",
                  "src": "5916:32:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 392,
                        "name": "question",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 320,
                        "src": "5989:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Question_$45_memory_ptr",
                          "typeString": "struct BuyAnAnswer.Question memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Question_$45_memory_ptr",
                          "typeString": "struct BuyAnAnswer.Question memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 387,
                          "name": "history",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63,
                          "src": "5958:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Question_$45_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct BuyAnAnswer.Question storage ref[] storage ref)"
                          }
                        },
                        "id": 390,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 388,
                            "name": "question",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 320,
                            "src": "5966:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Question_$45_memory_ptr",
                              "typeString": "struct BuyAnAnswer.Question memory"
                            }
                          },
                          "id": 389,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "askUser",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40,
                          "src": "5966:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5958:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Question_$45_storage_$dyn_storage",
                          "typeString": "struct BuyAnAnswer.Question storage ref[] storage ref"
                        }
                      },
                      "id": 391,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5958:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Question_$45_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct BuyAnAnswer.Question storage ref) returns (uint256)"
                      }
                    },
                    "id": 393,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5958:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 394,
                  "nodeType": "ExpressionStatement",
                  "src": "5958:40:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 400,
                        "name": "question",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 320,
                        "src": "6042:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Question_$45_memory_ptr",
                          "typeString": "struct BuyAnAnswer.Question memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Question_$45_memory_ptr",
                          "typeString": "struct BuyAnAnswer.Question memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 395,
                          "name": "history",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63,
                          "src": "6008:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Question_$45_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct BuyAnAnswer.Question storage ref[] storage ref)"
                          }
                        },
                        "id": 398,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 396,
                            "name": "question",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 320,
                            "src": "6016:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Question_$45_memory_ptr",
                              "typeString": "struct BuyAnAnswer.Question memory"
                            }
                          },
                          "id": 397,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "answerUser",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 42,
                          "src": "6016:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6008:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Question_$45_storage_$dyn_storage",
                          "typeString": "struct BuyAnAnswer.Question storage ref[] storage ref"
                        }
                      },
                      "id": 399,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "6008:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Question_$45_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct BuyAnAnswer.Question storage ref) returns (uint256)"
                      }
                    },
                    "id": 401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6008:43:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 402,
                  "nodeType": "ExpressionStatement",
                  "src": "6008:43:0"
                }
              ]
            },
            "documentation": null,
            "id": 404,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "postAnswer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 317,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 314,
                  "name": "_questionID",
                  "nodeType": "VariableDeclaration",
                  "scope": 404,
                  "src": "5368:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 313,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5368:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 316,
                  "name": "_answerText",
                  "nodeType": "VariableDeclaration",
                  "scope": 404,
                  "src": "5389:25:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 315,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5389:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5367:48:0"
            },
            "returnParameters": {
              "id": 318,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5451:0:0"
            },
            "scope": 639,
            "src": "5348:958:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 491,
              "nodeType": "Block",
              "src": "6420:574:0",
              "statements": [
                {
                  "assignments": [
                    410
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 410,
                      "name": "question",
                      "nodeType": "VariableDeclaration",
                      "scope": 491,
                      "src": "6430:24:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Question_$45_memory_ptr",
                        "typeString": "struct BuyAnAnswer.Question"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 409,
                        "name": "Question",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 45,
                        "src": "6430:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Question_$45_storage_ptr",
                          "typeString": "struct BuyAnAnswer.Question"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 411,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6430:24:0"
                },
                {
                  "body": {
                    "id": 447,
                    "nodeType": "Block",
                    "src": "6531:187:0",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 434,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 426,
                                  "name": "receivedQuestions",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 68,
                                  "src": "6549:17:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Question_$45_storage_$dyn_storage_$",
                                    "typeString": "mapping(address => struct BuyAnAnswer.Question storage ref[] storage ref)"
                                  }
                                },
                                "id": 429,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 427,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 687,
                                    "src": "6567:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 428,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "6567:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6549:29:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Question_$45_storage_$dyn_storage",
                                  "typeString": "struct BuyAnAnswer.Question storage ref[] storage ref"
                                }
                              },
                              "id": 431,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 430,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 413,
                                "src": "6579:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6549:32:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Question_$45_storage",
                                "typeString": "struct BuyAnAnswer.Question storage ref"
                              }
                            },
                            "id": 432,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "questionID",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 30,
                            "src": "6549:43:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 433,
                            "name": "_questionID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 406,
                            "src": "6596:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "6549:58:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 446,
                        "nodeType": "IfStatement",
                        "src": "6545:163:0",
                        "trueBody": {
                          "id": 445,
                          "nodeType": "Block",
                          "src": "6609:99:0",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 442,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 435,
                                  "name": "question",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 410,
                                  "src": "6627:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Question_$45_memory_ptr",
                                    "typeString": "struct BuyAnAnswer.Question memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 436,
                                      "name": "receivedQuestions",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 68,
                                      "src": "6638:17:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Question_$45_storage_$dyn_storage_$",
                                        "typeString": "mapping(address => struct BuyAnAnswer.Question storage ref[] storage ref)"
                                      }
                                    },
                                    "id": 439,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 437,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 687,
                                        "src": "6656:3:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 438,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": null,
                                      "src": "6656:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "6638:29:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Question_$45_storage_$dyn_storage",
                                      "typeString": "struct BuyAnAnswer.Question storage ref[] storage ref"
                                    }
                                  },
                                  "id": 441,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 440,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 413,
                                    "src": "6668:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6638:32:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Question_$45_storage",
                                    "typeString": "struct BuyAnAnswer.Question storage ref"
                                  }
                                },
                                "src": "6627:43:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Question_$45_memory_ptr",
                                  "typeString": "struct BuyAnAnswer.Question memory"
                                }
                              },
                              "id": 443,
                              "nodeType": "ExpressionStatement",
                              "src": "6627:43:0"
                            },
                            {
                              "id": 444,
                              "nodeType": "Break",
                              "src": "6688:5:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 416,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 413,
                      "src": "6484:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 417,
                          "name": "receivedQuestions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68,
                          "src": "6488:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Question_$45_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct BuyAnAnswer.Question storage ref[] storage ref)"
                          }
                        },
                        "id": 420,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 418,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 687,
                            "src": "6506:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 419,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "6506:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6488:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Question_$45_storage_$dyn_storage",
                          "typeString": "struct BuyAnAnswer.Question storage ref[] storage ref"
                        }
                      },
                      "id": 421,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "6488:36:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6484:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 448,
                  "initializationExpression": {
                    "assignments": [
                      413
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 413,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 448,
                        "src": "6469:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 412,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6469:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 415,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 414,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6481:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6469:13:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 424,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "6526:3:0",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 423,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 413,
                        "src": "6526:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 425,
                    "nodeType": "ExpressionStatement",
                    "src": "6526:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "6464:254:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 454,
                        "name": "question",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 410,
                        "src": "6762:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Question_$45_memory_ptr",
                          "typeString": "struct BuyAnAnswer.Question memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Question_$45_memory_ptr",
                          "typeString": "struct BuyAnAnswer.Question memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 449,
                          "name": "declinedQuestions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73,
                          "src": "6727:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Question_$45_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct BuyAnAnswer.Question storage ref[] storage ref)"
                          }
                        },
                        "id": 452,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 450,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 687,
                            "src": "6745:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 451,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "6745:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6727:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Question_$45_storage_$dyn_storage",
                          "typeString": "struct BuyAnAnswer.Question storage ref[] storage ref"
                        }
                      },
                      "id": 453,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "6727:34:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Question_$45_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct BuyAnAnswer.Question storage ref) returns (uint256)"
                      }
                    },
                    "id": 455,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6727:44:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 456,
                  "nodeType": "ExpressionStatement",
                  "src": "6727:44:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 462,
                        "name": "question",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 410,
                        "src": "6812:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Question_$45_memory_ptr",
                          "typeString": "struct BuyAnAnswer.Question memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Question_$45_memory_ptr",
                          "typeString": "struct BuyAnAnswer.Question memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 457,
                          "name": "history",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63,
                          "src": "6781:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Question_$45_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct BuyAnAnswer.Question storage ref[] storage ref)"
                          }
                        },
                        "id": 460,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 458,
                            "name": "question",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 410,
                            "src": "6789:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Question_$45_memory_ptr",
                              "typeString": "struct BuyAnAnswer.Question memory"
                            }
                          },
                          "id": 459,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "askUser",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40,
                          "src": "6789:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6781:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Question_$45_storage_$dyn_storage",
                          "typeString": "struct BuyAnAnswer.Question storage ref[] storage ref"
                        }
                      },
                      "id": 461,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "6781:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Question_$45_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct BuyAnAnswer.Question storage ref) returns (uint256)"
                      }
                    },
                    "id": 463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6781:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 464,
                  "nodeType": "ExpressionStatement",
                  "src": "6781:40:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 470,
                        "name": "question",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 410,
                        "src": "6865:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Question_$45_memory_ptr",
                          "typeString": "struct BuyAnAnswer.Question memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Question_$45_memory_ptr",
                          "typeString": "struct BuyAnAnswer.Question memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 465,
                          "name": "history",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63,
                          "src": "6831:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Question_$45_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct BuyAnAnswer.Question storage ref[] storage ref)"
                          }
                        },
                        "id": 468,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 466,
                            "name": "question",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 410,
                            "src": "6839:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Question_$45_memory_ptr",
                              "typeString": "struct BuyAnAnswer.Question memory"
                            }
                          },
                          "id": 467,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "answerUser",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 42,
                          "src": "6839:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6831:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Question_$45_storage_$dyn_storage",
                          "typeString": "struct BuyAnAnswer.Question storage ref[] storage ref"
                        }
                      },
                      "id": 469,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "6831:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Question_$45_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct BuyAnAnswer.Question storage ref) returns (uint256)"
                      }
                    },
                    "id": 471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6831:43:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 472,
                  "nodeType": "ExpressionStatement",
                  "src": "6831:43:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 478,
                          "name": "question",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 410,
                          "src": "6913:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Question_$45_memory_ptr",
                            "typeString": "struct BuyAnAnswer.Question memory"
                          }
                        },
                        "id": 479,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "price",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 36,
                        "src": "6913:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 473,
                          "name": "question",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 410,
                          "src": "6884:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Question_$45_memory_ptr",
                            "typeString": "struct BuyAnAnswer.Question memory"
                          }
                        },
                        "id": 476,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "answerUser",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 42,
                        "src": "6884:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 477,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "6884:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 480,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6884:44:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 481,
                  "nodeType": "ExpressionStatement",
                  "src": "6884:44:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 487,
                          "name": "question",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 410,
                          "src": "6964:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Question_$45_memory_ptr",
                            "typeString": "struct BuyAnAnswer.Question memory"
                          }
                        },
                        "id": 488,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "priorityBonus",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 38,
                        "src": "6964:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 482,
                          "name": "question",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 410,
                          "src": "6938:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Question_$45_memory_ptr",
                            "typeString": "struct BuyAnAnswer.Question memory"
                          }
                        },
                        "id": 485,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "askUser",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 40,
                        "src": "6938:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 486,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "6938:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6938:49:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 490,
                  "nodeType": "ExpressionStatement",
                  "src": "6938:49:0"
                }
              ]
            },
            "documentation": null,
            "id": 492,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "declineQuestion",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 407,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 406,
                  "name": "_questionID",
                  "nodeType": "VariableDeclaration",
                  "scope": 492,
                  "src": "6384:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 405,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6384:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6383:21:0"
            },
            "returnParameters": {
              "id": 408,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6420:0:0"
            },
            "scope": 639,
            "src": "6359:635:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 504,
              "nodeType": "Block",
              "src": "7139:45:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 500,
                      "name": "history",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63,
                      "src": "7156:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Question_$45_storage_$dyn_storage_$",
                        "typeString": "mapping(address => struct BuyAnAnswer.Question storage ref[] storage ref)"
                      }
                    },
                    "id": 502,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 501,
                      "name": "_userAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 494,
                      "src": "7164:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7156:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Question_$45_storage_$dyn_storage",
                      "typeString": "struct BuyAnAnswer.Question storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 499,
                  "id": 503,
                  "nodeType": "Return",
                  "src": "7149:28:0"
                }
              ]
            },
            "documentation": null,
            "id": 505,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserHistory",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 495,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 494,
                  "name": "_userAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 505,
                  "src": "7049:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 493,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7049:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7048:22:0"
            },
            "returnParameters": {
              "id": 499,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 498,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 505,
                  "src": "7116:17:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Question_$45_memory_$dyn_memory_ptr",
                    "typeString": "struct BuyAnAnswer.Question[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 496,
                      "name": "Question",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 45,
                      "src": "7116:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Question_$45_storage_ptr",
                        "typeString": "struct BuyAnAnswer.Question"
                      }
                    },
                    "id": 497,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "7116:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Question_$45_storage_$dyn_storage_ptr",
                      "typeString": "struct BuyAnAnswer.Question[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7115:19:0"
            },
            "scope": 639,
            "src": "7025:159:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 510,
            "name": "unansweredQuestions",
            "nodeType": "VariableDeclaration",
            "scope": 639,
            "src": "7238:57:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Question_$45_storage_$dyn_storage_$",
              "typeString": "mapping(address => struct BuyAnAnswer.Question[])"
            },
            "typeName": {
              "id": 509,
              "keyType": {
                "id": 506,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "7246:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "7238:30:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Question_$45_storage_$dyn_storage_$",
                "typeString": "mapping(address => struct BuyAnAnswer.Question[])"
              },
              "valueType": {
                "baseType": {
                  "contractScope": null,
                  "id": 507,
                  "name": "Question",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 45,
                  "src": "7257:8:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Question_$45_storage_ptr",
                    "typeString": "struct BuyAnAnswer.Question"
                  }
                },
                "id": 508,
                "length": null,
                "nodeType": "ArrayTypeName",
                "src": "7257:10:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_Question_$45_storage_$dyn_storage_ptr",
                  "typeString": "struct BuyAnAnswer.Question[]"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 521,
              "nodeType": "Block",
              "src": "7409:55:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 516,
                      "name": "unansweredQuestions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 510,
                      "src": "7426:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Question_$45_storage_$dyn_storage_$",
                        "typeString": "mapping(address => struct BuyAnAnswer.Question storage ref[] storage ref)"
                      }
                    },
                    "id": 519,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 517,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 687,
                        "src": "7446:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 518,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "7446:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7426:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Question_$45_storage_$dyn_storage",
                      "typeString": "struct BuyAnAnswer.Question storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 515,
                  "id": 520,
                  "nodeType": "Return",
                  "src": "7419:38:0"
                }
              ]
            },
            "documentation": null,
            "id": 522,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUnansweredQuestions",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 511,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7366:2:0"
            },
            "returnParameters": {
              "id": 515,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 514,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 522,
                  "src": "7390:17:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Question_$45_memory_$dyn_memory_ptr",
                    "typeString": "struct BuyAnAnswer.Question[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 512,
                      "name": "Question",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 45,
                      "src": "7390:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Question_$45_storage_ptr",
                        "typeString": "struct BuyAnAnswer.Question"
                      }
                    },
                    "id": 513,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "7390:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Question_$45_storage_$dyn_storage_ptr",
                      "typeString": "struct BuyAnAnswer.Question[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7389:19:0"
            },
            "scope": 639,
            "src": "7335:129:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 534,
              "nodeType": "Block",
              "src": "7630:55:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 530,
                      "name": "receivedQuestions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68,
                      "src": "7647:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Question_$45_storage_$dyn_storage_$",
                        "typeString": "mapping(address => struct BuyAnAnswer.Question storage ref[] storage ref)"
                      }
                    },
                    "id": 532,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 531,
                      "name": "_userAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 524,
                      "src": "7665:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7647:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Question_$45_storage_$dyn_storage",
                      "typeString": "struct BuyAnAnswer.Question storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 529,
                  "id": 533,
                  "nodeType": "Return",
                  "src": "7640:38:0"
                }
              ]
            },
            "documentation": null,
            "id": 535,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserReceivedQuestions",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 525,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 524,
                  "name": "_userAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 535,
                  "src": "7540:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 523,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7540:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7539:22:0"
            },
            "returnParameters": {
              "id": 529,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 528,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 535,
                  "src": "7607:17:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Question_$45_memory_$dyn_memory_ptr",
                    "typeString": "struct BuyAnAnswer.Question[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 526,
                      "name": "Question",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 45,
                      "src": "7607:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Question_$45_storage_ptr",
                        "typeString": "struct BuyAnAnswer.Question"
                      }
                    },
                    "id": 527,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "7607:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Question_$45_storage_$dyn_storage_ptr",
                      "typeString": "struct BuyAnAnswer.Question[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7606:19:0"
            },
            "scope": 639,
            "src": "7506:179:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 547,
              "nodeType": "Block",
              "src": "7851:55:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 543,
                      "name": "declinedQuestions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73,
                      "src": "7868:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Question_$45_storage_$dyn_storage_$",
                        "typeString": "mapping(address => struct BuyAnAnswer.Question storage ref[] storage ref)"
                      }
                    },
                    "id": 545,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 544,
                      "name": "_userAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 537,
                      "src": "7886:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7868:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Question_$45_storage_$dyn_storage",
                      "typeString": "struct BuyAnAnswer.Question storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 542,
                  "id": 546,
                  "nodeType": "Return",
                  "src": "7861:38:0"
                }
              ]
            },
            "documentation": null,
            "id": 548,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserDeclinedQuestions",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 538,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 537,
                  "name": "_userAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 548,
                  "src": "7761:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 536,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7761:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7760:22:0"
            },
            "returnParameters": {
              "id": 542,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 541,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 548,
                  "src": "7828:17:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Question_$45_memory_$dyn_memory_ptr",
                    "typeString": "struct BuyAnAnswer.Question[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 539,
                      "name": "Question",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 45,
                      "src": "7828:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Question_$45_storage_ptr",
                        "typeString": "struct BuyAnAnswer.Question"
                      }
                    },
                    "id": 540,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "7828:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Question_$45_storage_$dyn_storage_ptr",
                      "typeString": "struct BuyAnAnswer.Question[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7827:19:0"
            },
            "scope": 639,
            "src": "7727:179:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 560,
              "nodeType": "Block",
              "src": "8070:55:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 556,
                      "name": "answeredQuestions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78,
                      "src": "8087:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Answer_$50_storage_$dyn_storage_$",
                        "typeString": "mapping(address => struct BuyAnAnswer.Answer storage ref[] storage ref)"
                      }
                    },
                    "id": 558,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 557,
                      "name": "_userAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 550,
                      "src": "8105:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8087:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Answer_$50_storage_$dyn_storage",
                      "typeString": "struct BuyAnAnswer.Answer storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 555,
                  "id": 559,
                  "nodeType": "Return",
                  "src": "8080:38:0"
                }
              ]
            },
            "documentation": null,
            "id": 561,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserAnsweredQuestions",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 551,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 550,
                  "name": "_userAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 561,
                  "src": "7982:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 549,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7982:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7981:22:0"
            },
            "returnParameters": {
              "id": 555,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 554,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 561,
                  "src": "8049:15:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Answer_$50_memory_$dyn_memory_ptr",
                    "typeString": "struct BuyAnAnswer.Answer[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 552,
                      "name": "Answer",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 50,
                      "src": "8049:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Answer_$50_storage_ptr",
                        "typeString": "struct BuyAnAnswer.Answer"
                      }
                    },
                    "id": 553,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "8049:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Answer_$50_storage_$dyn_storage_ptr",
                      "typeString": "struct BuyAnAnswer.Answer[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8048:17:0"
            },
            "scope": 639,
            "src": "7948:177:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 573,
              "nodeType": "Block",
              "src": "8260:51:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 568,
                        "name": "users",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54,
                        "src": "8277:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$23_storage_$",
                          "typeString": "mapping(address => struct BuyAnAnswer.User storage ref)"
                        }
                      },
                      "id": 570,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 569,
                        "name": "_userAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 563,
                        "src": "8283:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8277:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_User_$23_storage",
                        "typeString": "struct BuyAnAnswer.User storage ref"
                      }
                    },
                    "id": 571,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 14,
                    "src": "8277:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 567,
                  "id": 572,
                  "nodeType": "Return",
                  "src": "8270:34:0"
                }
              ]
            },
            "documentation": null,
            "id": 574,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 564,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 563,
                  "name": "_userAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 574,
                  "src": "8180:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 562,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8180:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8179:22:0"
            },
            "returnParameters": {
              "id": 567,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 566,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 574,
                  "src": "8247:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 565,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8247:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8246:9:0"
            },
            "scope": 639,
            "src": "8156:155:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 586,
              "nodeType": "Block",
              "src": "8446:51:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 581,
                        "name": "users",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54,
                        "src": "8463:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$23_storage_$",
                          "typeString": "mapping(address => struct BuyAnAnswer.User storage ref)"
                        }
                      },
                      "id": 583,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 582,
                        "name": "_userAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 576,
                        "src": "8469:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8463:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_User_$23_storage",
                        "typeString": "struct BuyAnAnswer.User storage ref"
                      }
                    },
                    "id": 584,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "boardID",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 16,
                    "src": "8463:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 580,
                  "id": 585,
                  "nodeType": "Return",
                  "src": "8456:34:0"
                }
              ]
            },
            "documentation": null,
            "id": 587,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserBoardID",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 577,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 576,
                  "name": "_userAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 587,
                  "src": "8366:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 575,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8366:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8365:22:0"
            },
            "returnParameters": {
              "id": 580,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 579,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 587,
                  "src": "8433:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 578,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8433:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8432:9:0"
            },
            "scope": 639,
            "src": "8342:155:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 599,
              "nodeType": "Block",
              "src": "8640:52:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 594,
                        "name": "users",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54,
                        "src": "8657:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$23_storage_$",
                          "typeString": "mapping(address => struct BuyAnAnswer.User storage ref)"
                        }
                      },
                      "id": 596,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 595,
                        "name": "_userAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 589,
                        "src": "8663:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8657:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_User_$23_storage",
                        "typeString": "struct BuyAnAnswer.User storage ref"
                      }
                    },
                    "id": 597,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "headline",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 18,
                    "src": "8657:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 593,
                  "id": 598,
                  "nodeType": "Return",
                  "src": "8650:35:0"
                }
              ]
            },
            "documentation": null,
            "id": 600,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserHeadline",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 590,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 589,
                  "name": "_userAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 600,
                  "src": "8554:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 588,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8554:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8553:22:0"
            },
            "returnParameters": {
              "id": 593,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 592,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 600,
                  "src": "8621:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 591,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8621:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8620:15:0"
            },
            "scope": 639,
            "src": "8529:163:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 612,
              "nodeType": "Block",
              "src": "8825:47:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 607,
                        "name": "users",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54,
                        "src": "8842:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$23_storage_$",
                          "typeString": "mapping(address => struct BuyAnAnswer.User storage ref)"
                        }
                      },
                      "id": 609,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 608,
                        "name": "_userAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 602,
                        "src": "8848:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8842:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_User_$23_storage",
                        "typeString": "struct BuyAnAnswer.User storage ref"
                      }
                    },
                    "id": 610,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "bio",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 20,
                    "src": "8842:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 606,
                  "id": 611,
                  "nodeType": "Return",
                  "src": "8835:30:0"
                }
              ]
            },
            "documentation": null,
            "id": 613,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserBio",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 603,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 602,
                  "name": "_userAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 613,
                  "src": "8739:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 601,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8739:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8738:22:0"
            },
            "returnParameters": {
              "id": 606,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 605,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 613,
                  "src": "8806:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 604,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8806:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8805:15:0"
            },
            "scope": 639,
            "src": "8719:153:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 625,
              "nodeType": "Block",
              "src": "9018:56:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 620,
                        "name": "users",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54,
                        "src": "9035:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$23_storage_$",
                          "typeString": "mapping(address => struct BuyAnAnswer.User storage ref)"
                        }
                      },
                      "id": 622,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 621,
                        "name": "_userAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 615,
                        "src": "9041:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "9035:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_User_$23_storage",
                        "typeString": "struct BuyAnAnswer.User storage ref"
                      }
                    },
                    "id": 623,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "minimumPrice",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 22,
                    "src": "9035:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 619,
                  "id": 624,
                  "nodeType": "Return",
                  "src": "9028:39:0"
                }
              ]
            },
            "documentation": null,
            "id": 626,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserMinimumPrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 616,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 615,
                  "name": "_userAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 626,
                  "src": "8938:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 614,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8938:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8937:22:0"
            },
            "returnParameters": {
              "id": 619,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 618,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 626,
                  "src": "9005:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 617,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9005:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9004:9:0"
            },
            "scope": 639,
            "src": "8909:165:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 637,
              "nodeType": "Block",
              "src": "9870:50:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 633,
                      "name": "usersByUsername",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58,
                      "src": "9887:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_User_$23_storage_$",
                        "typeString": "mapping(string memory => struct BuyAnAnswer.User storage ref)"
                      }
                    },
                    "id": 635,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 634,
                      "name": "_username",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 628,
                      "src": "9903:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9887:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_User_$23_storage",
                      "typeString": "struct BuyAnAnswer.User storage ref"
                    }
                  },
                  "functionReturnParameters": 632,
                  "id": 636,
                  "nodeType": "Return",
                  "src": "9880:33:0"
                }
              ]
            },
            "documentation": null,
            "id": 638,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserByUsername",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 629,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 628,
                  "name": "_username",
                  "nodeType": "VariableDeclaration",
                  "scope": 638,
                  "src": "9783:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 627,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "9783:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9782:25:0"
            },
            "returnParameters": {
              "id": 632,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 631,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 638,
                  "src": "9853:11:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_User_$23_memory_ptr",
                    "typeString": "struct BuyAnAnswer.User"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 630,
                    "name": "User",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 23,
                    "src": "9853:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_User_$23_storage_ptr",
                      "typeString": "struct BuyAnAnswer.User"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9852:13:0"
            },
            "scope": 639,
            "src": "9756:164:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 640,
        "src": "99:9823:0"
      }
    ],
    "src": "32:9891:0"
  },
  "legacyAST": {
    "absolutePath": "/Users/jayanthkomarraju/Documents/GitHub/buyananswer.eth/contracts/BuyAnAnswer.sol",
    "exportedSymbols": {
      "BuyAnAnswer": [
        639
      ]
    },
    "id": 640,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:31:0"
      },
      {
        "id": 2,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "64:33:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 639,
        "linearizedBaseContracts": [
          639
        ],
        "name": "BuyAnAnswer",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "BuyAnAnswer.User",
            "id": 23,
            "members": [
              {
                "constant": false,
                "id": 4,
                "name": "userAddress",
                "nodeType": "VariableDeclaration",
                "scope": 23,
                "src": "704:27:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 3,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "704:15:0",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 6,
                "name": "username",
                "nodeType": "VariableDeclaration",
                "scope": 23,
                "src": "741:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 5,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "741:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8,
                "name": "name",
                "nodeType": "VariableDeclaration",
                "scope": 23,
                "src": "766:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 7,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "766:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 10,
                "name": "email",
                "nodeType": "VariableDeclaration",
                "scope": 23,
                "src": "787:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 9,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "787:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 12,
                "name": "password",
                "nodeType": "VariableDeclaration",
                "scope": 23,
                "src": "809:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 11,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "809:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 14,
                "name": "balance",
                "nodeType": "VariableDeclaration",
                "scope": 23,
                "src": "834:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 13,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "834:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 16,
                "name": "boardID",
                "nodeType": "VariableDeclaration",
                "scope": 23,
                "src": "859:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 15,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "859:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 18,
                "name": "headline",
                "nodeType": "VariableDeclaration",
                "scope": 23,
                "src": "884:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 17,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "884:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 20,
                "name": "bio",
                "nodeType": "VariableDeclaration",
                "scope": 23,
                "src": "909:10:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 19,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "909:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 22,
                "name": "minimumPrice",
                "nodeType": "VariableDeclaration",
                "scope": 23,
                "src": "929:20:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 21,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "929:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "User",
            "nodeType": "StructDefinition",
            "scope": 639,
            "src": "682:303:0",
            "visibility": "public"
          },
          {
            "canonicalName": "BuyAnAnswer.Social",
            "id": 28,
            "members": [
              {
                "constant": false,
                "id": 25,
                "name": "platform",
                "nodeType": "VariableDeclaration",
                "scope": 28,
                "src": "1015:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 24,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1015:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 27,
                "name": "socialUrl",
                "nodeType": "VariableDeclaration",
                "scope": 28,
                "src": "1040:16:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 26,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1040:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Social",
            "nodeType": "StructDefinition",
            "scope": 639,
            "src": "991:72:0",
            "visibility": "public"
          },
          {
            "canonicalName": "BuyAnAnswer.Question",
            "id": 45,
            "members": [
              {
                "constant": false,
                "id": 30,
                "name": "questionID",
                "nodeType": "VariableDeclaration",
                "scope": 45,
                "src": "1095:18:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 29,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1095:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 32,
                "name": "questionText",
                "nodeType": "VariableDeclaration",
                "scope": 45,
                "src": "1123:19:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 31,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1123:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 34,
                "name": "boardID",
                "nodeType": "VariableDeclaration",
                "scope": 45,
                "src": "1152:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 33,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1152:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 36,
                "name": "price",
                "nodeType": "VariableDeclaration",
                "scope": 45,
                "src": "1177:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 35,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1177:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 38,
                "name": "priorityBonus",
                "nodeType": "VariableDeclaration",
                "scope": 45,
                "src": "1200:21:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 37,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1200:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 40,
                "name": "askUser",
                "nodeType": "VariableDeclaration",
                "scope": 45,
                "src": "1231:23:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 39,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1231:15:0",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 42,
                "name": "answerUser",
                "nodeType": "VariableDeclaration",
                "scope": 45,
                "src": "1264:26:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 41,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1264:15:0",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 44,
                "name": "isAnswered",
                "nodeType": "VariableDeclaration",
                "scope": 45,
                "src": "1300:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 43,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1300:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Question",
            "nodeType": "StructDefinition",
            "scope": 639,
            "src": "1069:253:0",
            "visibility": "public"
          },
          {
            "canonicalName": "BuyAnAnswer.Answer",
            "id": 50,
            "members": [
              {
                "constant": false,
                "id": 47,
                "name": "question",
                "nodeType": "VariableDeclaration",
                "scope": 50,
                "src": "1352:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Question_$45_storage_ptr",
                  "typeString": "struct BuyAnAnswer.Question"
                },
                "typeName": {
                  "contractScope": null,
                  "id": 46,
                  "name": "Question",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 45,
                  "src": "1352:8:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Question_$45_storage_ptr",
                    "typeString": "struct BuyAnAnswer.Question"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 49,
                "name": "answerText",
                "nodeType": "VariableDeclaration",
                "scope": 50,
                "src": "1379:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 48,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1379:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Answer",
            "nodeType": "StructDefinition",
            "scope": 639,
            "src": "1328:75:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 54,
            "name": "users",
            "nodeType": "VariableDeclaration",
            "scope": 639,
            "src": "1409:37:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$23_storage_$",
              "typeString": "mapping(address => struct BuyAnAnswer.User)"
            },
            "typeName": {
              "id": 53,
              "keyType": {
                "id": 51,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1417:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1409:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$23_storage_$",
                "typeString": "mapping(address => struct BuyAnAnswer.User)"
              },
              "valueType": {
                "contractScope": null,
                "id": 52,
                "name": "User",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 23,
                "src": "1428:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_User_$23_storage_ptr",
                  "typeString": "struct BuyAnAnswer.User"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 58,
            "name": "usersByUsername",
            "nodeType": "VariableDeclaration",
            "scope": 639,
            "src": "1452:46:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_User_$23_storage_$",
              "typeString": "mapping(string => struct BuyAnAnswer.User)"
            },
            "typeName": {
              "id": 57,
              "keyType": {
                "id": 55,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "1460:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "1452:23:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_User_$23_storage_$",
                "typeString": "mapping(string => struct BuyAnAnswer.User)"
              },
              "valueType": {
                "contractScope": null,
                "id": 56,
                "name": "User",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 23,
                "src": "1470:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_User_$23_storage_ptr",
                  "typeString": "struct BuyAnAnswer.User"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 63,
            "name": "history",
            "nodeType": "VariableDeclaration",
            "scope": 639,
            "src": "1504:45:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Question_$45_storage_$dyn_storage_$",
              "typeString": "mapping(address => struct BuyAnAnswer.Question[])"
            },
            "typeName": {
              "id": 62,
              "keyType": {
                "id": 59,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1512:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1504:30:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Question_$45_storage_$dyn_storage_$",
                "typeString": "mapping(address => struct BuyAnAnswer.Question[])"
              },
              "valueType": {
                "baseType": {
                  "contractScope": null,
                  "id": 60,
                  "name": "Question",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 45,
                  "src": "1523:8:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Question_$45_storage_ptr",
                    "typeString": "struct BuyAnAnswer.Question"
                  }
                },
                "id": 61,
                "length": null,
                "nodeType": "ArrayTypeName",
                "src": "1523:10:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_Question_$45_storage_$dyn_storage_ptr",
                  "typeString": "struct BuyAnAnswer.Question[]"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 68,
            "name": "receivedQuestions",
            "nodeType": "VariableDeclaration",
            "scope": 639,
            "src": "1555:55:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Question_$45_storage_$dyn_storage_$",
              "typeString": "mapping(address => struct BuyAnAnswer.Question[])"
            },
            "typeName": {
              "id": 67,
              "keyType": {
                "id": 64,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1563:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1555:30:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Question_$45_storage_$dyn_storage_$",
                "typeString": "mapping(address => struct BuyAnAnswer.Question[])"
              },
              "valueType": {
                "baseType": {
                  "contractScope": null,
                  "id": 65,
                  "name": "Question",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 45,
                  "src": "1574:8:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Question_$45_storage_ptr",
                    "typeString": "struct BuyAnAnswer.Question"
                  }
                },
                "id": 66,
                "length": null,
                "nodeType": "ArrayTypeName",
                "src": "1574:10:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_Question_$45_storage_$dyn_storage_ptr",
                  "typeString": "struct BuyAnAnswer.Question[]"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 73,
            "name": "declinedQuestions",
            "nodeType": "VariableDeclaration",
            "scope": 639,
            "src": "1616:55:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Question_$45_storage_$dyn_storage_$",
              "typeString": "mapping(address => struct BuyAnAnswer.Question[])"
            },
            "typeName": {
              "id": 72,
              "keyType": {
                "id": 69,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1624:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1616:30:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Question_$45_storage_$dyn_storage_$",
                "typeString": "mapping(address => struct BuyAnAnswer.Question[])"
              },
              "valueType": {
                "baseType": {
                  "contractScope": null,
                  "id": 70,
                  "name": "Question",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 45,
                  "src": "1635:8:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Question_$45_storage_ptr",
                    "typeString": "struct BuyAnAnswer.Question"
                  }
                },
                "id": 71,
                "length": null,
                "nodeType": "ArrayTypeName",
                "src": "1635:10:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_Question_$45_storage_$dyn_storage_ptr",
                  "typeString": "struct BuyAnAnswer.Question[]"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 78,
            "name": "answeredQuestions",
            "nodeType": "VariableDeclaration",
            "scope": 639,
            "src": "1677:53:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Answer_$50_storage_$dyn_storage_$",
              "typeString": "mapping(address => struct BuyAnAnswer.Answer[])"
            },
            "typeName": {
              "id": 77,
              "keyType": {
                "id": 74,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1685:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1677:28:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Answer_$50_storage_$dyn_storage_$",
                "typeString": "mapping(address => struct BuyAnAnswer.Answer[])"
              },
              "valueType": {
                "baseType": {
                  "contractScope": null,
                  "id": 75,
                  "name": "Answer",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 50,
                  "src": "1696:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Answer_$50_storage_ptr",
                    "typeString": "struct BuyAnAnswer.Answer"
                  }
                },
                "id": 76,
                "length": null,
                "nodeType": "ArrayTypeName",
                "src": "1696:8:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_Answer_$50_storage_$dyn_storage_ptr",
                  "typeString": "struct BuyAnAnswer.Answer[]"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 82,
            "name": "questions",
            "nodeType": "VariableDeclaration",
            "scope": 639,
            "src": "1736:45:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Question_$45_storage_$",
              "typeString": "mapping(bytes32 => struct BuyAnAnswer.Question)"
            },
            "typeName": {
              "id": 81,
              "keyType": {
                "id": 79,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1744:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1736:28:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Question_$45_storage_$",
                "typeString": "mapping(bytes32 => struct BuyAnAnswer.Question)"
              },
              "valueType": {
                "contractScope": null,
                "id": 80,
                "name": "Question",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 45,
                "src": "1755:8:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Question_$45_storage_ptr",
                  "typeString": "struct BuyAnAnswer.Question"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 99,
              "nodeType": "Block",
              "src": "2172:63:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 94,
                            "name": "usrnm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84,
                            "src": "2216:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 95,
                            "name": "eml",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86,
                            "src": "2223:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 92,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 674,
                            "src": "2199:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 93,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2199:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 96,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2199:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 91,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 681,
                      "src": "2189:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 97,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2189:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 90,
                  "id": 98,
                  "nodeType": "Return",
                  "src": "2182:46:0"
                }
              ]
            },
            "documentation": null,
            "id": 100,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createBoardID",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 87,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 84,
                  "name": "usrnm",
                  "nodeType": "VariableDeclaration",
                  "scope": 100,
                  "src": "2085:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 83,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2085:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86,
                  "name": "eml",
                  "nodeType": "VariableDeclaration",
                  "scope": 100,
                  "src": "2106:17:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 85,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2106:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2084:40:0"
            },
            "returnParameters": {
              "id": 90,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 100,
                  "src": "2159:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 88,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2159:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2158:9:0"
            },
            "scope": 639,
            "src": "2062:173:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 157,
              "nodeType": "Block",
              "src": "2572:793:0",
              "statements": [
                {
                  "assignments": [
                    118
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 118,
                      "name": "_boardID",
                      "nodeType": "VariableDeclaration",
                      "scope": 157,
                      "src": "2853:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 117,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2853:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 123,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 120,
                        "name": "_username",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102,
                        "src": "2886:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 121,
                        "name": "_email",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 106,
                        "src": "2897:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 119,
                      "name": "createBoardID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100,
                      "src": "2872:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (string memory,string memory) returns (bytes32)"
                      }
                    },
                    "id": 122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2872:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2853:51:0"
                },
                {
                  "assignments": [
                    125
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 125,
                      "name": "userAddress",
                      "nodeType": "VariableDeclaration",
                      "scope": 157,
                      "src": "2915:27:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 124,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2915:15:0",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 128,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 126,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 687,
                      "src": "2945:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "2945:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2915:40:0"
                },
                {
                  "assignments": [
                    130
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 130,
                      "name": "newUser",
                      "nodeType": "VariableDeclaration",
                      "scope": 157,
                      "src": "2966:19:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_User_$23_memory_ptr",
                        "typeString": "struct BuyAnAnswer.User"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 129,
                        "name": "User",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 23,
                        "src": "2966:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$23_storage_ptr",
                          "typeString": "struct BuyAnAnswer.User"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 143,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 132,
                        "name": "userAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 125,
                        "src": "3006:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 133,
                        "name": "_username",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102,
                        "src": "3031:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 134,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 104,
                        "src": "3054:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 135,
                        "name": "_email",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 106,
                        "src": "3073:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 136,
                        "name": "_password",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 108,
                        "src": "3093:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3116:1:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "argumentTypes": null,
                        "id": 138,
                        "name": "_boardID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 118,
                        "src": "3131:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 139,
                        "name": "_headline",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 110,
                        "src": "3153:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 140,
                        "name": "_bio",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 112,
                        "src": "3176:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 141,
                        "name": "_minimumPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 114,
                        "src": "3194:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 131,
                      "name": "User",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23,
                      "src": "2988:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_User_$23_storage_ptr_$",
                        "typeString": "type(struct BuyAnAnswer.User storage pointer)"
                      }
                    },
                    "id": 142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2988:287:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_User_$23_memory",
                      "typeString": "struct BuyAnAnswer.User memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2966:309:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 144,
                        "name": "users",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54,
                        "src": "3285:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$23_storage_$",
                          "typeString": "mapping(address => struct BuyAnAnswer.User storage ref)"
                        }
                      },
                      "id": 147,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 145,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 687,
                          "src": "3291:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3291:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3285:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_User_$23_storage",
                        "typeString": "struct BuyAnAnswer.User storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 148,
                      "name": "newUser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 130,
                      "src": "3305:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_User_$23_memory_ptr",
                        "typeString": "struct BuyAnAnswer.User memory"
                      }
                    },
                    "src": "3285:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_User_$23_storage",
                      "typeString": "struct BuyAnAnswer.User storage ref"
                    }
                  },
                  "id": 150,
                  "nodeType": "ExpressionStatement",
                  "src": "3285:27:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 151,
                        "name": "usersByUsername",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "3322:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_User_$23_storage_$",
                          "typeString": "mapping(string memory => struct BuyAnAnswer.User storage ref)"
                        }
                      },
                      "id": 153,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 152,
                        "name": "_username",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102,
                        "src": "3338:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3322:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_User_$23_storage",
                        "typeString": "struct BuyAnAnswer.User storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 154,
                      "name": "newUser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 130,
                      "src": "3351:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_User_$23_memory_ptr",
                        "typeString": "struct BuyAnAnswer.User memory"
                      }
                    },
                    "src": "3322:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_User_$23_storage",
                      "typeString": "struct BuyAnAnswer.User storage ref"
                    }
                  },
                  "id": 156,
                  "nodeType": "ExpressionStatement",
                  "src": "3322:36:0"
                }
              ]
            },
            "documentation": null,
            "id": 158,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createUser",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 115,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102,
                  "name": "_username",
                  "nodeType": "VariableDeclaration",
                  "scope": 158,
                  "src": "2290:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 101,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2290:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 104,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 158,
                  "src": "2323:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 103,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2323:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 106,
                  "name": "_email",
                  "nodeType": "VariableDeclaration",
                  "scope": 158,
                  "src": "2352:20:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 105,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2352:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 108,
                  "name": "_password",
                  "nodeType": "VariableDeclaration",
                  "scope": 158,
                  "src": "2382:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 107,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2382:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 110,
                  "name": "_headline",
                  "nodeType": "VariableDeclaration",
                  "scope": 158,
                  "src": "2444:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 109,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2444:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 112,
                  "name": "_bio",
                  "nodeType": "VariableDeclaration",
                  "scope": 158,
                  "src": "2477:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 111,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2477:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 114,
                  "name": "_minimumPrice",
                  "nodeType": "VariableDeclaration",
                  "scope": 158,
                  "src": "2505:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 113,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2505:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2280:252:0"
            },
            "returnParameters": {
              "id": 116,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2572:0:0"
            },
            "scope": 639,
            "src": "2261:1104:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 169,
              "nodeType": "Block",
              "src": "3461:43:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 165,
                      "name": "users",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54,
                      "src": "3478:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$23_storage_$",
                        "typeString": "mapping(address => struct BuyAnAnswer.User storage ref)"
                      }
                    },
                    "id": 167,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 166,
                      "name": "_userAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 160,
                      "src": "3484:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3478:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_User_$23_storage",
                      "typeString": "struct BuyAnAnswer.User storage ref"
                    }
                  },
                  "functionReturnParameters": 164,
                  "id": 168,
                  "nodeType": "Return",
                  "src": "3471:26:0"
                }
              ]
            },
            "documentation": null,
            "id": 170,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUser",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 161,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 160,
                  "name": "_userAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 170,
                  "src": "3405:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 159,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3405:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3404:22:0"
            },
            "returnParameters": {
              "id": 164,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 163,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 170,
                  "src": "3448:11:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_User_$23_memory_ptr",
                    "typeString": "struct BuyAnAnswer.User"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 162,
                    "name": "User",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 23,
                    "src": "3448:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_User_$23_storage_ptr",
                      "typeString": "struct BuyAnAnswer.User"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3447:13:0"
            },
            "scope": 639,
            "src": "3388:116:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 203,
              "nodeType": "Block",
              "src": "3698:149:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 179,
                          "name": "users",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54,
                          "src": "3708:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$23_storage_$",
                            "typeString": "mapping(address => struct BuyAnAnswer.User storage ref)"
                          }
                        },
                        "id": 182,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 180,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 687,
                            "src": "3714:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3714:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3708:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$23_storage",
                          "typeString": "struct BuyAnAnswer.User storage ref"
                        }
                      },
                      "id": 183,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "headline",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18,
                      "src": "3708:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 184,
                      "name": "_headline",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 172,
                      "src": "3737:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3708:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 186,
                  "nodeType": "ExpressionStatement",
                  "src": "3708:38:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 187,
                          "name": "users",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54,
                          "src": "3756:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$23_storage_$",
                            "typeString": "mapping(address => struct BuyAnAnswer.User storage ref)"
                          }
                        },
                        "id": 190,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 188,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 687,
                            "src": "3762:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3762:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3756:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$23_storage",
                          "typeString": "struct BuyAnAnswer.User storage ref"
                        }
                      },
                      "id": 191,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "bio",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20,
                      "src": "3756:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 192,
                      "name": "_bio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 174,
                      "src": "3780:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3756:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 194,
                  "nodeType": "ExpressionStatement",
                  "src": "3756:28:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 195,
                          "name": "users",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54,
                          "src": "3794:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$23_storage_$",
                            "typeString": "mapping(address => struct BuyAnAnswer.User storage ref)"
                          }
                        },
                        "id": 198,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 196,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 687,
                            "src": "3800:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 197,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3800:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3794:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$23_storage",
                          "typeString": "struct BuyAnAnswer.User storage ref"
                        }
                      },
                      "id": 199,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "minimumPrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22,
                      "src": "3794:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 200,
                      "name": "_minimumPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 176,
                      "src": "3827:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3794:46:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 202,
                  "nodeType": "ExpressionStatement",
                  "src": "3794:46:0"
                }
              ]
            },
            "documentation": null,
            "id": 204,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateUser",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 177,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 172,
                  "name": "_headline",
                  "nodeType": "VariableDeclaration",
                  "scope": 204,
                  "src": "3602:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 171,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3602:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 174,
                  "name": "_bio",
                  "nodeType": "VariableDeclaration",
                  "scope": 204,
                  "src": "3635:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 173,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3635:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 176,
                  "name": "_minimumPrice",
                  "nodeType": "VariableDeclaration",
                  "scope": 204,
                  "src": "3663:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 175,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3663:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3592:98:0"
            },
            "returnParameters": {
              "id": 178,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3698:0:0"
            },
            "scope": 639,
            "src": "3573:274:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 311,
              "nodeType": "Block",
              "src": "4050:1250:0",
              "statements": [
                {
                  "assignments": [
                    214
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 214,
                      "name": "newQuestion",
                      "nodeType": "VariableDeclaration",
                      "scope": 311,
                      "src": "4060:27:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Question_$45_memory_ptr",
                        "typeString": "struct BuyAnAnswer.Question"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 213,
                        "name": "Question",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 45,
                        "src": "4060:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Question_$45_storage_ptr",
                          "typeString": "struct BuyAnAnswer.Question"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 255,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 219,
                                "name": "_questionText",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 206,
                                "src": "4177:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 221,
                                      "name": "_answerUser",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 210,
                                      "src": "4220:11:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      }
                                    ],
                                    "id": 220,
                                    "name": "getUser",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 170,
                                    "src": "4212:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_struct$_User_$23_memory_ptr_$",
                                      "typeString": "function (address) view returns (struct BuyAnAnswer.User memory)"
                                    }
                                  },
                                  "id": 222,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4212:20:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_User_$23_memory_ptr",
                                    "typeString": "struct BuyAnAnswer.User memory"
                                  }
                                },
                                "id": 223,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "boardID",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 16,
                                "src": "4212:28:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "components": [
                                  {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 229,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "arguments": [
                                          {
                                            "argumentTypes": null,
                                            "id": 225,
                                            "name": "_answerUser",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 210,
                                            "src": "4271:11:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address_payable",
                                              "typeString": "address payable"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address_payable",
                                              "typeString": "address payable"
                                            }
                                          ],
                                          "id": 224,
                                          "name": "getUser",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 170,
                                          "src": "4263:7:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_struct$_User_$23_memory_ptr_$",
                                            "typeString": "function (address) view returns (struct BuyAnAnswer.User memory)"
                                          }
                                        },
                                        "id": 226,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4263:20:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_User_$23_memory_ptr",
                                          "typeString": "struct BuyAnAnswer.User memory"
                                        }
                                      },
                                      "id": 227,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "minimumPrice",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 22,
                                      "src": "4263:33:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "id": 228,
                                      "name": "_priorityBonus",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 208,
                                      "src": "4299:14:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "4263:50:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 230,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "4262:52:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 231,
                                "name": "_priorityBonus",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 208,
                                "src": "4336:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 232,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 687,
                                  "src": "4372:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 233,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "4372:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 234,
                                "name": "_answerUser",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 210,
                                "src": "4404:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 217,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 674,
                                "src": "4139:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 218,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "4139:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 235,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4139:294:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 216,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 681,
                          "src": "4112:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 236,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4112:335:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 237,
                        "name": "_questionText",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 206,
                        "src": "4461:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 239,
                              "name": "_answerUser",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 210,
                              "src": "4496:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 238,
                            "name": "getUser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 170,
                            "src": "4488:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_struct$_User_$23_memory_ptr_$",
                              "typeString": "function (address) view returns (struct BuyAnAnswer.User memory)"
                            }
                          },
                          "id": 240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4488:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$23_memory_ptr",
                            "typeString": "struct BuyAnAnswer.User memory"
                          }
                        },
                        "id": 241,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "boardID",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 16,
                        "src": "4488:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 247,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 243,
                                    "name": "_answerUser",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 210,
                                    "src": "4539:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  ],
                                  "id": 242,
                                  "name": "getUser",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 170,
                                  "src": "4531:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_struct$_User_$23_memory_ptr_$",
                                    "typeString": "function (address) view returns (struct BuyAnAnswer.User memory)"
                                  }
                                },
                                "id": 244,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4531:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_User_$23_memory_ptr",
                                  "typeString": "struct BuyAnAnswer.User memory"
                                }
                              },
                              "id": 245,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "minimumPrice",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 22,
                              "src": "4531:33:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 246,
                              "name": "_priorityBonus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 208,
                              "src": "4567:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "4531:50:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 248,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "4530:52:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 249,
                        "name": "_priorityBonus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 208,
                        "src": "4596:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 250,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 687,
                          "src": "4624:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4624:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 252,
                        "name": "_answerUser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 210,
                        "src": "4648:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "66616c7365",
                        "id": 253,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4673:5:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 215,
                      "name": "Question",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45,
                      "src": "4090:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Question_$45_storage_ptr_$",
                        "typeString": "type(struct BuyAnAnswer.Question storage pointer)"
                      }
                    },
                    "id": 254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4090:598:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Question_$45_memory",
                      "typeString": "struct BuyAnAnswer.Question memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4060:628:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 261,
                        "name": "newQuestion",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 214,
                        "src": "4723:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Question_$45_memory_ptr",
                          "typeString": "struct BuyAnAnswer.Question memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Question_$45_memory_ptr",
                          "typeString": "struct BuyAnAnswer.Question memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 256,
                          "name": "history",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63,
                          "src": "4698:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Question_$45_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct BuyAnAnswer.Question storage ref[] storage ref)"
                          }
                        },
                        "id": 259,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 257,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 687,
                            "src": "4706:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 258,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4706:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4698:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Question_$45_storage_$dyn_storage",
                          "typeString": "struct BuyAnAnswer.Question storage ref[] storage ref"
                        }
                      },
                      "id": 260,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4698:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Question_$45_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct BuyAnAnswer.Question storage ref) returns (uint256)"
                      }
                    },
                    "id": 262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4698:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 263,
                  "nodeType": "ExpressionStatement",
                  "src": "4698:37:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 268,
                        "name": "newQuestion",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 214,
                        "src": "4771:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Question_$45_memory_ptr",
                          "typeString": "struct BuyAnAnswer.Question memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Question_$45_memory_ptr",
                          "typeString": "struct BuyAnAnswer.Question memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 264,
                          "name": "history",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63,
                          "src": "4745:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Question_$45_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct BuyAnAnswer.Question storage ref[] storage ref)"
                          }
                        },
                        "id": 266,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 265,
                          "name": "_answerUser",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 210,
                          "src": "4753:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4745:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Question_$45_storage_$dyn_storage",
                          "typeString": "struct BuyAnAnswer.Question storage ref[] storage ref"
                        }
                      },
                      "id": 267,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4745:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Question_$45_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct BuyAnAnswer.Question storage ref) returns (uint256)"
                      }
                    },
                    "id": 269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4745:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 270,
                  "nodeType": "ExpressionStatement",
                  "src": "4745:38:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 275,
                        "name": "newQuestion",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 214,
                        "src": "4831:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Question_$45_memory_ptr",
                          "typeString": "struct BuyAnAnswer.Question memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Question_$45_memory_ptr",
                          "typeString": "struct BuyAnAnswer.Question memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 271,
                          "name": "unansweredQuestions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 510,
                          "src": "4793:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Question_$45_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct BuyAnAnswer.Question storage ref[] storage ref)"
                          }
                        },
                        "id": 273,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 272,
                          "name": "_answerUser",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 210,
                          "src": "4813:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4793:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Question_$45_storage_$dyn_storage",
                          "typeString": "struct BuyAnAnswer.Question storage ref[] storage ref"
                        }
                      },
                      "id": 274,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4793:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Question_$45_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct BuyAnAnswer.Question storage ref) returns (uint256)"
                      }
                    },
                    "id": 276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4793:50:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 277,
                  "nodeType": "ExpressionStatement",
                  "src": "4793:50:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 278,
                        "name": "questions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82,
                        "src": "4853:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Question_$45_storage_$",
                          "typeString": "mapping(bytes32 => struct BuyAnAnswer.Question storage ref)"
                        }
                      },
                      "id": 300,
                      "indexExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 282,
                                "name": "_questionText",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 206,
                                "src": "4941:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 284,
                                      "name": "_answerUser",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 210,
                                      "src": "4984:11:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      }
                                    ],
                                    "id": 283,
                                    "name": "getUser",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 170,
                                    "src": "4976:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_struct$_User_$23_memory_ptr_$",
                                      "typeString": "function (address) view returns (struct BuyAnAnswer.User memory)"
                                    }
                                  },
                                  "id": 285,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4976:20:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_User_$23_memory_ptr",
                                    "typeString": "struct BuyAnAnswer.User memory"
                                  }
                                },
                                "id": 286,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "boardID",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 16,
                                "src": "4976:28:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "components": [
                                  {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 292,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "arguments": [
                                          {
                                            "argumentTypes": null,
                                            "id": 288,
                                            "name": "_answerUser",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 210,
                                            "src": "5035:11:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address_payable",
                                              "typeString": "address payable"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address_payable",
                                              "typeString": "address payable"
                                            }
                                          ],
                                          "id": 287,
                                          "name": "getUser",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 170,
                                          "src": "5027:7:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_struct$_User_$23_memory_ptr_$",
                                            "typeString": "function (address) view returns (struct BuyAnAnswer.User memory)"
                                          }
                                        },
                                        "id": 289,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "5027:20:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_User_$23_memory_ptr",
                                          "typeString": "struct BuyAnAnswer.User memory"
                                        }
                                      },
                                      "id": 290,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "minimumPrice",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 22,
                                      "src": "5027:33:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "id": 291,
                                      "name": "_priorityBonus",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 208,
                                      "src": "5063:14:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "5027:50:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 293,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "5026:52:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 294,
                                "name": "_priorityBonus",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 208,
                                "src": "5100:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 295,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 687,
                                  "src": "5136:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 296,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "5136:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 297,
                                "name": "_answerUser",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 210,
                                "src": "5168:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 280,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 674,
                                "src": "4903:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 281,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "4903:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 298,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4903:294:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 279,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 681,
                          "src": "4876:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 299,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4876:335:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4853:368:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Question_$45_storage",
                        "typeString": "struct BuyAnAnswer.Question storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 301,
                      "name": "newQuestion",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 214,
                      "src": "5224:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Question_$45_memory_ptr",
                        "typeString": "struct BuyAnAnswer.Question memory"
                      }
                    },
                    "src": "4853:382:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Question_$45_storage",
                      "typeString": "struct BuyAnAnswer.Question storage ref"
                    }
                  },
                  "id": 303,
                  "nodeType": "ExpressionStatement",
                  "src": "4853:382:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 308,
                        "name": "newQuestion",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 214,
                        "src": "5281:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Question_$45_memory_ptr",
                          "typeString": "struct BuyAnAnswer.Question memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Question_$45_memory_ptr",
                          "typeString": "struct BuyAnAnswer.Question memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 304,
                          "name": "receivedQuestions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68,
                          "src": "5245:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Question_$45_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct BuyAnAnswer.Question storage ref[] storage ref)"
                          }
                        },
                        "id": 306,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 305,
                          "name": "_answerUser",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 210,
                          "src": "5263:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5245:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Question_$45_storage_$dyn_storage",
                          "typeString": "struct BuyAnAnswer.Question storage ref[] storage ref"
                        }
                      },
                      "id": 307,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5245:35:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Question_$45_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct BuyAnAnswer.Question storage ref) returns (uint256)"
                      }
                    },
                    "id": 309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5245:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 310,
                  "nodeType": "ExpressionStatement",
                  "src": "5245:48:0"
                }
              ]
            },
            "documentation": null,
            "id": 312,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "postQuestion",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 211,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 206,
                  "name": "_questionText",
                  "nodeType": "VariableDeclaration",
                  "scope": 312,
                  "src": "3932:27:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 205,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3932:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 208,
                  "name": "_priorityBonus",
                  "nodeType": "VariableDeclaration",
                  "scope": 312,
                  "src": "3969:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 207,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3969:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 210,
                  "name": "_answerUser",
                  "nodeType": "VariableDeclaration",
                  "scope": 312,
                  "src": "4001:27:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 209,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4001:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3922:112:0"
            },
            "returnParameters": {
              "id": 212,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4050:0:0"
            },
            "scope": 639,
            "src": "3901:1399:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 403,
              "nodeType": "Block",
              "src": "5451:855:0",
              "statements": [
                {
                  "assignments": [
                    320
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 320,
                      "name": "question",
                      "nodeType": "VariableDeclaration",
                      "scope": 403,
                      "src": "5461:24:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Question_$45_memory_ptr",
                        "typeString": "struct BuyAnAnswer.Question"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 319,
                        "name": "Question",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 45,
                        "src": "5461:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Question_$45_storage_ptr",
                          "typeString": "struct BuyAnAnswer.Question"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 321,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5461:24:0"
                },
                {
                  "body": {
                    "id": 357,
                    "nodeType": "Block",
                    "src": "5562:187:0",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 344,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 336,
                                  "name": "receivedQuestions",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 68,
                                  "src": "5580:17:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Question_$45_storage_$dyn_storage_$",
                                    "typeString": "mapping(address => struct BuyAnAnswer.Question storage ref[] storage ref)"
                                  }
                                },
                                "id": 339,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 337,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 687,
                                    "src": "5598:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 338,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "5598:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5580:29:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Question_$45_storage_$dyn_storage",
                                  "typeString": "struct BuyAnAnswer.Question storage ref[] storage ref"
                                }
                              },
                              "id": 341,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 340,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 323,
                                "src": "5610:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5580:32:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Question_$45_storage",
                                "typeString": "struct BuyAnAnswer.Question storage ref"
                              }
                            },
                            "id": 342,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "questionID",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 30,
                            "src": "5580:43:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 343,
                            "name": "_questionID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 314,
                            "src": "5627:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "5580:58:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 356,
                        "nodeType": "IfStatement",
                        "src": "5576:163:0",
                        "trueBody": {
                          "id": 355,
                          "nodeType": "Block",
                          "src": "5640:99:0",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 352,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 345,
                                  "name": "question",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 320,
                                  "src": "5658:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Question_$45_memory_ptr",
                                    "typeString": "struct BuyAnAnswer.Question memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 346,
                                      "name": "receivedQuestions",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 68,
                                      "src": "5669:17:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Question_$45_storage_$dyn_storage_$",
                                        "typeString": "mapping(address => struct BuyAnAnswer.Question storage ref[] storage ref)"
                                      }
                                    },
                                    "id": 349,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 347,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 687,
                                        "src": "5687:3:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 348,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": null,
                                      "src": "5687:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5669:29:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Question_$45_storage_$dyn_storage",
                                      "typeString": "struct BuyAnAnswer.Question storage ref[] storage ref"
                                    }
                                  },
                                  "id": 351,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 350,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 323,
                                    "src": "5699:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "5669:32:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Question_$45_storage",
                                    "typeString": "struct BuyAnAnswer.Question storage ref"
                                  }
                                },
                                "src": "5658:43:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Question_$45_memory_ptr",
                                  "typeString": "struct BuyAnAnswer.Question memory"
                                }
                              },
                              "id": 353,
                              "nodeType": "ExpressionStatement",
                              "src": "5658:43:0"
                            },
                            {
                              "id": 354,
                              "nodeType": "Break",
                              "src": "5719:5:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 326,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 323,
                      "src": "5515:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 327,
                          "name": "receivedQuestions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68,
                          "src": "5519:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Question_$45_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct BuyAnAnswer.Question storage ref[] storage ref)"
                          }
                        },
                        "id": 330,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 328,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 687,
                            "src": "5537:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 329,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5537:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5519:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Question_$45_storage_$dyn_storage",
                          "typeString": "struct BuyAnAnswer.Question storage ref[] storage ref"
                        }
                      },
                      "id": 331,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5519:36:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5515:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 358,
                  "initializationExpression": {
                    "assignments": [
                      323
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 323,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 358,
                        "src": "5500:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 322,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5500:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 325,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 324,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5512:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5500:13:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 334,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5557:3:0",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 333,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 323,
                        "src": "5557:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 335,
                    "nodeType": "ExpressionStatement",
                    "src": "5557:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "5495:254:0"
                },
                {
                  "assignments": [
                    360
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 360,
                      "name": "newAnswer",
                      "nodeType": "VariableDeclaration",
                      "scope": 403,
                      "src": "5758:23:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Answer_$50_memory_ptr",
                        "typeString": "struct BuyAnAnswer.Answer"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 359,
                        "name": "Answer",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 50,
                        "src": "5758:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Answer_$50_storage_ptr",
                          "typeString": "struct BuyAnAnswer.Answer"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 365,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 362,
                        "name": "question",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 320,
                        "src": "5791:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Question_$45_memory_ptr",
                          "typeString": "struct BuyAnAnswer.Question memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 363,
                        "name": "_answerText",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 316,
                        "src": "5801:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Question_$45_memory_ptr",
                          "typeString": "struct BuyAnAnswer.Question memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 361,
                      "name": "Answer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50,
                      "src": "5784:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Answer_$50_storage_ptr_$",
                        "typeString": "type(struct BuyAnAnswer.Answer storage pointer)"
                      }
                    },
                    "id": 364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5784:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Answer_$50_memory",
                      "typeString": "struct BuyAnAnswer.Answer memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5758:55:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 371,
                        "name": "newAnswer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 360,
                        "src": "5859:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Answer_$50_memory_ptr",
                          "typeString": "struct BuyAnAnswer.Answer memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Answer_$50_memory_ptr",
                          "typeString": "struct BuyAnAnswer.Answer memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 366,
                          "name": "answeredQuestions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "5824:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Answer_$50_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct BuyAnAnswer.Answer storage ref[] storage ref)"
                          }
                        },
                        "id": 369,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 367,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 687,
                            "src": "5842:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 368,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5842:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5824:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Answer_$50_storage_$dyn_storage",
                          "typeString": "struct BuyAnAnswer.Answer storage ref[] storage ref"
                        }
                      },
                      "id": 370,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5824:34:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Answer_$50_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct BuyAnAnswer.Answer storage ref) returns (uint256)"
                      }
                    },
                    "id": 372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5824:45:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 373,
                  "nodeType": "ExpressionStatement",
                  "src": "5824:45:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 374,
                        "name": "question",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 320,
                        "src": "5880:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Question_$45_memory_ptr",
                          "typeString": "struct BuyAnAnswer.Question memory"
                        }
                      },
                      "id": 376,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isAnswered",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44,
                      "src": "5880:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 377,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5902:4:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "5880:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 379,
                  "nodeType": "ExpressionStatement",
                  "src": "5880:26:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 385,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 380,
                        "name": "question",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 320,
                        "src": "5916:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Question_$45_memory_ptr",
                          "typeString": "struct BuyAnAnswer.Question memory"
                        }
                      },
                      "id": 382,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "answerUser",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42,
                      "src": "5916:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 383,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 687,
                        "src": "5938:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 384,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5938:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "5916:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 386,
                  "nodeType": "ExpressionStatement",
                  "src": "5916:32:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 392,
                        "name": "question",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 320,
                        "src": "5989:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Question_$45_memory_ptr",
                          "typeString": "struct BuyAnAnswer.Question memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Question_$45_memory_ptr",
                          "typeString": "struct BuyAnAnswer.Question memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 387,
                          "name": "history",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63,
                          "src": "5958:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Question_$45_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct BuyAnAnswer.Question storage ref[] storage ref)"
                          }
                        },
                        "id": 390,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 388,
                            "name": "question",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 320,
                            "src": "5966:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Question_$45_memory_ptr",
                              "typeString": "struct BuyAnAnswer.Question memory"
                            }
                          },
                          "id": 389,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "askUser",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40,
                          "src": "5966:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5958:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Question_$45_storage_$dyn_storage",
                          "typeString": "struct BuyAnAnswer.Question storage ref[] storage ref"
                        }
                      },
                      "id": 391,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5958:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Question_$45_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct BuyAnAnswer.Question storage ref) returns (uint256)"
                      }
                    },
                    "id": 393,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5958:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 394,
                  "nodeType": "ExpressionStatement",
                  "src": "5958:40:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 400,
                        "name": "question",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 320,
                        "src": "6042:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Question_$45_memory_ptr",
                          "typeString": "struct BuyAnAnswer.Question memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Question_$45_memory_ptr",
                          "typeString": "struct BuyAnAnswer.Question memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 395,
                          "name": "history",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63,
                          "src": "6008:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Question_$45_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct BuyAnAnswer.Question storage ref[] storage ref)"
                          }
                        },
                        "id": 398,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 396,
                            "name": "question",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 320,
                            "src": "6016:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Question_$45_memory_ptr",
                              "typeString": "struct BuyAnAnswer.Question memory"
                            }
                          },
                          "id": 397,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "answerUser",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 42,
                          "src": "6016:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6008:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Question_$45_storage_$dyn_storage",
                          "typeString": "struct BuyAnAnswer.Question storage ref[] storage ref"
                        }
                      },
                      "id": 399,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "6008:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Question_$45_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct BuyAnAnswer.Question storage ref) returns (uint256)"
                      }
                    },
                    "id": 401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6008:43:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 402,
                  "nodeType": "ExpressionStatement",
                  "src": "6008:43:0"
                }
              ]
            },
            "documentation": null,
            "id": 404,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "postAnswer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 317,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 314,
                  "name": "_questionID",
                  "nodeType": "VariableDeclaration",
                  "scope": 404,
                  "src": "5368:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 313,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5368:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 316,
                  "name": "_answerText",
                  "nodeType": "VariableDeclaration",
                  "scope": 404,
                  "src": "5389:25:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 315,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5389:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5367:48:0"
            },
            "returnParameters": {
              "id": 318,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5451:0:0"
            },
            "scope": 639,
            "src": "5348:958:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 491,
              "nodeType": "Block",
              "src": "6420:574:0",
              "statements": [
                {
                  "assignments": [
                    410
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 410,
                      "name": "question",
                      "nodeType": "VariableDeclaration",
                      "scope": 491,
                      "src": "6430:24:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Question_$45_memory_ptr",
                        "typeString": "struct BuyAnAnswer.Question"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 409,
                        "name": "Question",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 45,
                        "src": "6430:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Question_$45_storage_ptr",
                          "typeString": "struct BuyAnAnswer.Question"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 411,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6430:24:0"
                },
                {
                  "body": {
                    "id": 447,
                    "nodeType": "Block",
                    "src": "6531:187:0",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 434,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 426,
                                  "name": "receivedQuestions",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 68,
                                  "src": "6549:17:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Question_$45_storage_$dyn_storage_$",
                                    "typeString": "mapping(address => struct BuyAnAnswer.Question storage ref[] storage ref)"
                                  }
                                },
                                "id": 429,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 427,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 687,
                                    "src": "6567:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 428,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "6567:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6549:29:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Question_$45_storage_$dyn_storage",
                                  "typeString": "struct BuyAnAnswer.Question storage ref[] storage ref"
                                }
                              },
                              "id": 431,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 430,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 413,
                                "src": "6579:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6549:32:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Question_$45_storage",
                                "typeString": "struct BuyAnAnswer.Question storage ref"
                              }
                            },
                            "id": 432,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "questionID",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 30,
                            "src": "6549:43:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 433,
                            "name": "_questionID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 406,
                            "src": "6596:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "6549:58:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 446,
                        "nodeType": "IfStatement",
                        "src": "6545:163:0",
                        "trueBody": {
                          "id": 445,
                          "nodeType": "Block",
                          "src": "6609:99:0",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 442,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 435,
                                  "name": "question",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 410,
                                  "src": "6627:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Question_$45_memory_ptr",
                                    "typeString": "struct BuyAnAnswer.Question memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 436,
                                      "name": "receivedQuestions",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 68,
                                      "src": "6638:17:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Question_$45_storage_$dyn_storage_$",
                                        "typeString": "mapping(address => struct BuyAnAnswer.Question storage ref[] storage ref)"
                                      }
                                    },
                                    "id": 439,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 437,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 687,
                                        "src": "6656:3:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 438,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": null,
                                      "src": "6656:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "6638:29:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Question_$45_storage_$dyn_storage",
                                      "typeString": "struct BuyAnAnswer.Question storage ref[] storage ref"
                                    }
                                  },
                                  "id": 441,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 440,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 413,
                                    "src": "6668:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6638:32:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Question_$45_storage",
                                    "typeString": "struct BuyAnAnswer.Question storage ref"
                                  }
                                },
                                "src": "6627:43:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Question_$45_memory_ptr",
                                  "typeString": "struct BuyAnAnswer.Question memory"
                                }
                              },
                              "id": 443,
                              "nodeType": "ExpressionStatement",
                              "src": "6627:43:0"
                            },
                            {
                              "id": 444,
                              "nodeType": "Break",
                              "src": "6688:5:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 416,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 413,
                      "src": "6484:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 417,
                          "name": "receivedQuestions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68,
                          "src": "6488:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Question_$45_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct BuyAnAnswer.Question storage ref[] storage ref)"
                          }
                        },
                        "id": 420,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 418,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 687,
                            "src": "6506:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 419,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "6506:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6488:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Question_$45_storage_$dyn_storage",
                          "typeString": "struct BuyAnAnswer.Question storage ref[] storage ref"
                        }
                      },
                      "id": 421,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "6488:36:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6484:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 448,
                  "initializationExpression": {
                    "assignments": [
                      413
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 413,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 448,
                        "src": "6469:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 412,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6469:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 415,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 414,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6481:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6469:13:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 424,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "6526:3:0",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 423,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 413,
                        "src": "6526:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 425,
                    "nodeType": "ExpressionStatement",
                    "src": "6526:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "6464:254:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 454,
                        "name": "question",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 410,
                        "src": "6762:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Question_$45_memory_ptr",
                          "typeString": "struct BuyAnAnswer.Question memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Question_$45_memory_ptr",
                          "typeString": "struct BuyAnAnswer.Question memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 449,
                          "name": "declinedQuestions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73,
                          "src": "6727:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Question_$45_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct BuyAnAnswer.Question storage ref[] storage ref)"
                          }
                        },
                        "id": 452,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 450,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 687,
                            "src": "6745:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 451,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "6745:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6727:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Question_$45_storage_$dyn_storage",
                          "typeString": "struct BuyAnAnswer.Question storage ref[] storage ref"
                        }
                      },
                      "id": 453,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "6727:34:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Question_$45_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct BuyAnAnswer.Question storage ref) returns (uint256)"
                      }
                    },
                    "id": 455,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6727:44:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 456,
                  "nodeType": "ExpressionStatement",
                  "src": "6727:44:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 462,
                        "name": "question",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 410,
                        "src": "6812:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Question_$45_memory_ptr",
                          "typeString": "struct BuyAnAnswer.Question memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Question_$45_memory_ptr",
                          "typeString": "struct BuyAnAnswer.Question memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 457,
                          "name": "history",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63,
                          "src": "6781:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Question_$45_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct BuyAnAnswer.Question storage ref[] storage ref)"
                          }
                        },
                        "id": 460,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 458,
                            "name": "question",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 410,
                            "src": "6789:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Question_$45_memory_ptr",
                              "typeString": "struct BuyAnAnswer.Question memory"
                            }
                          },
                          "id": 459,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "askUser",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40,
                          "src": "6789:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6781:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Question_$45_storage_$dyn_storage",
                          "typeString": "struct BuyAnAnswer.Question storage ref[] storage ref"
                        }
                      },
                      "id": 461,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "6781:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Question_$45_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct BuyAnAnswer.Question storage ref) returns (uint256)"
                      }
                    },
                    "id": 463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6781:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 464,
                  "nodeType": "ExpressionStatement",
                  "src": "6781:40:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 470,
                        "name": "question",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 410,
                        "src": "6865:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Question_$45_memory_ptr",
                          "typeString": "struct BuyAnAnswer.Question memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Question_$45_memory_ptr",
                          "typeString": "struct BuyAnAnswer.Question memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 465,
                          "name": "history",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63,
                          "src": "6831:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Question_$45_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct BuyAnAnswer.Question storage ref[] storage ref)"
                          }
                        },
                        "id": 468,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 466,
                            "name": "question",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 410,
                            "src": "6839:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Question_$45_memory_ptr",
                              "typeString": "struct BuyAnAnswer.Question memory"
                            }
                          },
                          "id": 467,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "answerUser",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 42,
                          "src": "6839:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6831:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Question_$45_storage_$dyn_storage",
                          "typeString": "struct BuyAnAnswer.Question storage ref[] storage ref"
                        }
                      },
                      "id": 469,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "6831:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Question_$45_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct BuyAnAnswer.Question storage ref) returns (uint256)"
                      }
                    },
                    "id": 471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6831:43:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 472,
                  "nodeType": "ExpressionStatement",
                  "src": "6831:43:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 478,
                          "name": "question",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 410,
                          "src": "6913:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Question_$45_memory_ptr",
                            "typeString": "struct BuyAnAnswer.Question memory"
                          }
                        },
                        "id": 479,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "price",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 36,
                        "src": "6913:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 473,
                          "name": "question",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 410,
                          "src": "6884:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Question_$45_memory_ptr",
                            "typeString": "struct BuyAnAnswer.Question memory"
                          }
                        },
                        "id": 476,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "answerUser",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 42,
                        "src": "6884:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 477,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "6884:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 480,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6884:44:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 481,
                  "nodeType": "ExpressionStatement",
                  "src": "6884:44:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 487,
                          "name": "question",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 410,
                          "src": "6964:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Question_$45_memory_ptr",
                            "typeString": "struct BuyAnAnswer.Question memory"
                          }
                        },
                        "id": 488,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "priorityBonus",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 38,
                        "src": "6964:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 482,
                          "name": "question",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 410,
                          "src": "6938:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Question_$45_memory_ptr",
                            "typeString": "struct BuyAnAnswer.Question memory"
                          }
                        },
                        "id": 485,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "askUser",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 40,
                        "src": "6938:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 486,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "6938:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6938:49:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 490,
                  "nodeType": "ExpressionStatement",
                  "src": "6938:49:0"
                }
              ]
            },
            "documentation": null,
            "id": 492,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "declineQuestion",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 407,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 406,
                  "name": "_questionID",
                  "nodeType": "VariableDeclaration",
                  "scope": 492,
                  "src": "6384:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 405,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6384:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6383:21:0"
            },
            "returnParameters": {
              "id": 408,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6420:0:0"
            },
            "scope": 639,
            "src": "6359:635:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 504,
              "nodeType": "Block",
              "src": "7139:45:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 500,
                      "name": "history",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63,
                      "src": "7156:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Question_$45_storage_$dyn_storage_$",
                        "typeString": "mapping(address => struct BuyAnAnswer.Question storage ref[] storage ref)"
                      }
                    },
                    "id": 502,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 501,
                      "name": "_userAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 494,
                      "src": "7164:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7156:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Question_$45_storage_$dyn_storage",
                      "typeString": "struct BuyAnAnswer.Question storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 499,
                  "id": 503,
                  "nodeType": "Return",
                  "src": "7149:28:0"
                }
              ]
            },
            "documentation": null,
            "id": 505,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserHistory",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 495,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 494,
                  "name": "_userAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 505,
                  "src": "7049:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 493,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7049:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7048:22:0"
            },
            "returnParameters": {
              "id": 499,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 498,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 505,
                  "src": "7116:17:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Question_$45_memory_$dyn_memory_ptr",
                    "typeString": "struct BuyAnAnswer.Question[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 496,
                      "name": "Question",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 45,
                      "src": "7116:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Question_$45_storage_ptr",
                        "typeString": "struct BuyAnAnswer.Question"
                      }
                    },
                    "id": 497,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "7116:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Question_$45_storage_$dyn_storage_ptr",
                      "typeString": "struct BuyAnAnswer.Question[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7115:19:0"
            },
            "scope": 639,
            "src": "7025:159:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 510,
            "name": "unansweredQuestions",
            "nodeType": "VariableDeclaration",
            "scope": 639,
            "src": "7238:57:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Question_$45_storage_$dyn_storage_$",
              "typeString": "mapping(address => struct BuyAnAnswer.Question[])"
            },
            "typeName": {
              "id": 509,
              "keyType": {
                "id": 506,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "7246:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "7238:30:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Question_$45_storage_$dyn_storage_$",
                "typeString": "mapping(address => struct BuyAnAnswer.Question[])"
              },
              "valueType": {
                "baseType": {
                  "contractScope": null,
                  "id": 507,
                  "name": "Question",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 45,
                  "src": "7257:8:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Question_$45_storage_ptr",
                    "typeString": "struct BuyAnAnswer.Question"
                  }
                },
                "id": 508,
                "length": null,
                "nodeType": "ArrayTypeName",
                "src": "7257:10:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_Question_$45_storage_$dyn_storage_ptr",
                  "typeString": "struct BuyAnAnswer.Question[]"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 521,
              "nodeType": "Block",
              "src": "7409:55:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 516,
                      "name": "unansweredQuestions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 510,
                      "src": "7426:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Question_$45_storage_$dyn_storage_$",
                        "typeString": "mapping(address => struct BuyAnAnswer.Question storage ref[] storage ref)"
                      }
                    },
                    "id": 519,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 517,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 687,
                        "src": "7446:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 518,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "7446:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7426:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Question_$45_storage_$dyn_storage",
                      "typeString": "struct BuyAnAnswer.Question storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 515,
                  "id": 520,
                  "nodeType": "Return",
                  "src": "7419:38:0"
                }
              ]
            },
            "documentation": null,
            "id": 522,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUnansweredQuestions",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 511,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7366:2:0"
            },
            "returnParameters": {
              "id": 515,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 514,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 522,
                  "src": "7390:17:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Question_$45_memory_$dyn_memory_ptr",
                    "typeString": "struct BuyAnAnswer.Question[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 512,
                      "name": "Question",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 45,
                      "src": "7390:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Question_$45_storage_ptr",
                        "typeString": "struct BuyAnAnswer.Question"
                      }
                    },
                    "id": 513,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "7390:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Question_$45_storage_$dyn_storage_ptr",
                      "typeString": "struct BuyAnAnswer.Question[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7389:19:0"
            },
            "scope": 639,
            "src": "7335:129:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 534,
              "nodeType": "Block",
              "src": "7630:55:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 530,
                      "name": "receivedQuestions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68,
                      "src": "7647:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Question_$45_storage_$dyn_storage_$",
                        "typeString": "mapping(address => struct BuyAnAnswer.Question storage ref[] storage ref)"
                      }
                    },
                    "id": 532,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 531,
                      "name": "_userAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 524,
                      "src": "7665:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7647:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Question_$45_storage_$dyn_storage",
                      "typeString": "struct BuyAnAnswer.Question storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 529,
                  "id": 533,
                  "nodeType": "Return",
                  "src": "7640:38:0"
                }
              ]
            },
            "documentation": null,
            "id": 535,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserReceivedQuestions",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 525,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 524,
                  "name": "_userAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 535,
                  "src": "7540:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 523,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7540:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7539:22:0"
            },
            "returnParameters": {
              "id": 529,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 528,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 535,
                  "src": "7607:17:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Question_$45_memory_$dyn_memory_ptr",
                    "typeString": "struct BuyAnAnswer.Question[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 526,
                      "name": "Question",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 45,
                      "src": "7607:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Question_$45_storage_ptr",
                        "typeString": "struct BuyAnAnswer.Question"
                      }
                    },
                    "id": 527,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "7607:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Question_$45_storage_$dyn_storage_ptr",
                      "typeString": "struct BuyAnAnswer.Question[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7606:19:0"
            },
            "scope": 639,
            "src": "7506:179:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 547,
              "nodeType": "Block",
              "src": "7851:55:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 543,
                      "name": "declinedQuestions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73,
                      "src": "7868:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Question_$45_storage_$dyn_storage_$",
                        "typeString": "mapping(address => struct BuyAnAnswer.Question storage ref[] storage ref)"
                      }
                    },
                    "id": 545,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 544,
                      "name": "_userAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 537,
                      "src": "7886:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7868:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Question_$45_storage_$dyn_storage",
                      "typeString": "struct BuyAnAnswer.Question storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 542,
                  "id": 546,
                  "nodeType": "Return",
                  "src": "7861:38:0"
                }
              ]
            },
            "documentation": null,
            "id": 548,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserDeclinedQuestions",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 538,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 537,
                  "name": "_userAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 548,
                  "src": "7761:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 536,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7761:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7760:22:0"
            },
            "returnParameters": {
              "id": 542,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 541,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 548,
                  "src": "7828:17:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Question_$45_memory_$dyn_memory_ptr",
                    "typeString": "struct BuyAnAnswer.Question[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 539,
                      "name": "Question",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 45,
                      "src": "7828:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Question_$45_storage_ptr",
                        "typeString": "struct BuyAnAnswer.Question"
                      }
                    },
                    "id": 540,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "7828:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Question_$45_storage_$dyn_storage_ptr",
                      "typeString": "struct BuyAnAnswer.Question[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7827:19:0"
            },
            "scope": 639,
            "src": "7727:179:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 560,
              "nodeType": "Block",
              "src": "8070:55:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 556,
                      "name": "answeredQuestions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78,
                      "src": "8087:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Answer_$50_storage_$dyn_storage_$",
                        "typeString": "mapping(address => struct BuyAnAnswer.Answer storage ref[] storage ref)"
                      }
                    },
                    "id": 558,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 557,
                      "name": "_userAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 550,
                      "src": "8105:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8087:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Answer_$50_storage_$dyn_storage",
                      "typeString": "struct BuyAnAnswer.Answer storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 555,
                  "id": 559,
                  "nodeType": "Return",
                  "src": "8080:38:0"
                }
              ]
            },
            "documentation": null,
            "id": 561,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserAnsweredQuestions",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 551,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 550,
                  "name": "_userAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 561,
                  "src": "7982:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 549,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7982:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7981:22:0"
            },
            "returnParameters": {
              "id": 555,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 554,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 561,
                  "src": "8049:15:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Answer_$50_memory_$dyn_memory_ptr",
                    "typeString": "struct BuyAnAnswer.Answer[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 552,
                      "name": "Answer",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 50,
                      "src": "8049:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Answer_$50_storage_ptr",
                        "typeString": "struct BuyAnAnswer.Answer"
                      }
                    },
                    "id": 553,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "8049:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Answer_$50_storage_$dyn_storage_ptr",
                      "typeString": "struct BuyAnAnswer.Answer[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8048:17:0"
            },
            "scope": 639,
            "src": "7948:177:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 573,
              "nodeType": "Block",
              "src": "8260:51:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 568,
                        "name": "users",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54,
                        "src": "8277:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$23_storage_$",
                          "typeString": "mapping(address => struct BuyAnAnswer.User storage ref)"
                        }
                      },
                      "id": 570,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 569,
                        "name": "_userAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 563,
                        "src": "8283:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8277:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_User_$23_storage",
                        "typeString": "struct BuyAnAnswer.User storage ref"
                      }
                    },
                    "id": 571,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 14,
                    "src": "8277:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 567,
                  "id": 572,
                  "nodeType": "Return",
                  "src": "8270:34:0"
                }
              ]
            },
            "documentation": null,
            "id": 574,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 564,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 563,
                  "name": "_userAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 574,
                  "src": "8180:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 562,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8180:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8179:22:0"
            },
            "returnParameters": {
              "id": 567,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 566,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 574,
                  "src": "8247:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 565,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8247:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8246:9:0"
            },
            "scope": 639,
            "src": "8156:155:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 586,
              "nodeType": "Block",
              "src": "8446:51:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 581,
                        "name": "users",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54,
                        "src": "8463:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$23_storage_$",
                          "typeString": "mapping(address => struct BuyAnAnswer.User storage ref)"
                        }
                      },
                      "id": 583,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 582,
                        "name": "_userAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 576,
                        "src": "8469:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8463:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_User_$23_storage",
                        "typeString": "struct BuyAnAnswer.User storage ref"
                      }
                    },
                    "id": 584,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "boardID",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 16,
                    "src": "8463:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 580,
                  "id": 585,
                  "nodeType": "Return",
                  "src": "8456:34:0"
                }
              ]
            },
            "documentation": null,
            "id": 587,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserBoardID",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 577,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 576,
                  "name": "_userAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 587,
                  "src": "8366:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 575,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8366:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8365:22:0"
            },
            "returnParameters": {
              "id": 580,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 579,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 587,
                  "src": "8433:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 578,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8433:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8432:9:0"
            },
            "scope": 639,
            "src": "8342:155:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 599,
              "nodeType": "Block",
              "src": "8640:52:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 594,
                        "name": "users",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54,
                        "src": "8657:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$23_storage_$",
                          "typeString": "mapping(address => struct BuyAnAnswer.User storage ref)"
                        }
                      },
                      "id": 596,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 595,
                        "name": "_userAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 589,
                        "src": "8663:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8657:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_User_$23_storage",
                        "typeString": "struct BuyAnAnswer.User storage ref"
                      }
                    },
                    "id": 597,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "headline",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 18,
                    "src": "8657:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 593,
                  "id": 598,
                  "nodeType": "Return",
                  "src": "8650:35:0"
                }
              ]
            },
            "documentation": null,
            "id": 600,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserHeadline",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 590,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 589,
                  "name": "_userAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 600,
                  "src": "8554:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 588,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8554:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8553:22:0"
            },
            "returnParameters": {
              "id": 593,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 592,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 600,
                  "src": "8621:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 591,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8621:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8620:15:0"
            },
            "scope": 639,
            "src": "8529:163:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 612,
              "nodeType": "Block",
              "src": "8825:47:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 607,
                        "name": "users",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54,
                        "src": "8842:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$23_storage_$",
                          "typeString": "mapping(address => struct BuyAnAnswer.User storage ref)"
                        }
                      },
                      "id": 609,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 608,
                        "name": "_userAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 602,
                        "src": "8848:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8842:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_User_$23_storage",
                        "typeString": "struct BuyAnAnswer.User storage ref"
                      }
                    },
                    "id": 610,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "bio",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 20,
                    "src": "8842:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 606,
                  "id": 611,
                  "nodeType": "Return",
                  "src": "8835:30:0"
                }
              ]
            },
            "documentation": null,
            "id": 613,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserBio",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 603,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 602,
                  "name": "_userAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 613,
                  "src": "8739:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 601,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8739:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8738:22:0"
            },
            "returnParameters": {
              "id": 606,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 605,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 613,
                  "src": "8806:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 604,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8806:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8805:15:0"
            },
            "scope": 639,
            "src": "8719:153:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 625,
              "nodeType": "Block",
              "src": "9018:56:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 620,
                        "name": "users",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54,
                        "src": "9035:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$23_storage_$",
                          "typeString": "mapping(address => struct BuyAnAnswer.User storage ref)"
                        }
                      },
                      "id": 622,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 621,
                        "name": "_userAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 615,
                        "src": "9041:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "9035:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_User_$23_storage",
                        "typeString": "struct BuyAnAnswer.User storage ref"
                      }
                    },
                    "id": 623,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "minimumPrice",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 22,
                    "src": "9035:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 619,
                  "id": 624,
                  "nodeType": "Return",
                  "src": "9028:39:0"
                }
              ]
            },
            "documentation": null,
            "id": 626,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserMinimumPrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 616,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 615,
                  "name": "_userAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 626,
                  "src": "8938:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 614,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8938:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8937:22:0"
            },
            "returnParameters": {
              "id": 619,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 618,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 626,
                  "src": "9005:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 617,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9005:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9004:9:0"
            },
            "scope": 639,
            "src": "8909:165:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 637,
              "nodeType": "Block",
              "src": "9870:50:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 633,
                      "name": "usersByUsername",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58,
                      "src": "9887:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_User_$23_storage_$",
                        "typeString": "mapping(string memory => struct BuyAnAnswer.User storage ref)"
                      }
                    },
                    "id": 635,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 634,
                      "name": "_username",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 628,
                      "src": "9903:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9887:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_User_$23_storage",
                      "typeString": "struct BuyAnAnswer.User storage ref"
                    }
                  },
                  "functionReturnParameters": 632,
                  "id": 636,
                  "nodeType": "Return",
                  "src": "9880:33:0"
                }
              ]
            },
            "documentation": null,
            "id": 638,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserByUsername",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 629,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 628,
                  "name": "_username",
                  "nodeType": "VariableDeclaration",
                  "scope": 638,
                  "src": "9783:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 627,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "9783:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9782:25:0"
            },
            "returnParameters": {
              "id": 632,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 631,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 638,
                  "src": "9853:11:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_User_$23_memory_ptr",
                    "typeString": "struct BuyAnAnswer.User"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 630,
                    "name": "User",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 23,
                    "src": "9853:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_User_$23_storage_ptr",
                      "typeString": "struct BuyAnAnswer.User"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9852:13:0"
            },
            "scope": 639,
            "src": "9756:164:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 640,
        "src": "99:9823:0"
      }
    ],
    "src": "32:9891:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.3",
  "updatedAt": "2023-02-06T06:00:14.658Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}